{"version":3,"sources":["webpack:///./node_modules/cropperjs/dist/cropper.js"],"names":["module","exports","_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","Array","isArray","arr2","iter","toString","call","from","IN_BROWSER","window","WINDOW","NAMESPACE","ACTION_ALL","ACTION_CROP","ACTION_MOVE","ACTION_ZOOM","ACTION_EAST","ACTION_WEST","ACTION_SOUTH","ACTION_NORTH","ACTION_NORTH_EAST","ACTION_NORTH_WEST","ACTION_SOUTH_EAST","ACTION_SOUTH_WEST","CLASS_CROP","concat","CLASS_DISABLED","CLASS_HIDDEN","CLASS_HIDE","CLASS_INVISIBLE","CLASS_MODAL","CLASS_MOVE","DATA_ACTION","DATA_PREVIEW","DRAG_MODE_CROP","DRAG_MODE_MOVE","DRAG_MODE_NONE","EVENT_CROP","EVENT_CROP_END","EVENT_CROP_MOVE","EVENT_CROP_START","EVENT_DBLCLICK","EVENT_POINTER_DOWN","PointerEvent","EVENT_POINTER_MOVE","EVENT_POINTER_UP","EVENT_READY","EVENT_RESIZE","EVENT_WHEEL","EVENT_ZOOM","MIME_TYPE_JPEG","REGEXP_ACTIONS","REGEXP_DATA_URL","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","DEFAULTS","viewMode","dragMode","initialAspectRatio","NaN","aspectRatio","data","preview","responsive","restore","checkCrossOrigin","checkOrientation","modal","guides","center","highlight","background","autoCrop","autoCropArea","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","wheelZoomRatio","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","minContainerWidth","minContainerHeight","ready","cropstart","cropmove","cropend","crop","zoom","TEMPLATE","isNaN","Number","isNumber","value","isUndefined","isObject","hasOwnProperty","isPlainObject","_constructor","e","isFunction","forEach","callback","keys","assign","_len","arguments","args","_key","arg","REGEXP_DECIMALS","normalizeDecimalNumber","times","undefined","test","Math","round","REGEXP_SUFFIX","setStyle","element","styles","style","property","hasClass","classList","contains","className","indexOf","addClass","elem","add","trim","removeClass","remove","replace","toggleClass","added","REGEXP_HYPHENATE","hyphenate","toLowerCase","getData","name","dataset","getAttribute","setData","setAttribute","removeData","removeAttribute","REGEXP_SPACES","onceSupported","supported","once","listener","options","get","set","addEventListener","removeEventListener","removeListener","type","handler","split","event","listeners","addListener","_handler","_element$listeners","_len2","_key2","apply","dispatchEvent","Event","CustomEvent","detail","bubbles","cancelable","document","createEvent","initCustomEvent","getOffset","box","getBoundingClientRect","left","pageXOffset","documentElement","clientLeft","top","pageYOffset","clientTop","location","REGEXP_ORIGINS","isCrossOriginURL","url","parts","match","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","getTransforms","_ref","rotate","scaleX","scaleY","translateX","translateY","values","push","transform","join","WebkitTransform","msTransform","getMaxZoomRatio","pointers","pointers2","ratios","pointer","pointerId","pointer2","x1","abs","startX","y1","startY","x2","endX","y2","endY","z1","sqrt","z2","ratio","sort","a","b","getPointer","_ref2","endOnly","pageX","pageY","end","getPointersCenter","count","_ref3","isFinite","getAdjustedSizes","_ref4","height","width","isValidNumber","adjustedWidth","getRotatedSizes","_ref5","degree","arc","PI","sinArc","sin","cosArc","cos","newWidth","newHeight","getSourceCanvas","image","_ref6","_ref7","_ref8","imageAspectRatio","imageNaturalWidth","naturalWidth","imageNaturalHeight","naturalHeight","_ref6$rotate","_ref6$scaleX","_ref6$scaleY","_ref8$fillColor","fillColor","_ref8$imageSmoothingE","imageSmoothingEnabled","_ref8$imageSmoothingQ","imageSmoothingQuality","_ref8$maxWidth","maxWidth","Infinity","_ref8$maxHeight","maxHeight","_ref8$minWidth","minWidth","_ref8$minHeight","minHeight","canvas","createElement","context","getContext","maxSizes","minSizes","min","max","destMaxSizes","destMinSizes","destWidth","destHeight","params","fillStyle","fillRect","save","translate","scale","drawImage","map","param","floor","fromCharCode","String","getStringFromCharCode","dataView","start","str","getUint8","REGEXP_DATA_URL_HEAD","dataURLToArrayBuffer","dataURL","base64","binary","atob","arrayBuffer","ArrayBuffer","uint8","Uint8Array","charCodeAt","arrayBufferToDataURL","mimeType","chunks","chunkSize","subarray","btoa","resetAndGetOrientation","DataView","orientation","littleEndian","app1Start","ifdStart","byteLength","offset","exifIDCode","tiffOffset","endianness","getUint16","firstIFDOffset","getUint32","_length","_offset","setUint16","parseOrientation","render","this","initContainer","initCanvas","initCropBox","renderCanvas","cropped","renderCropBox","container","cropper","containerData","offsetWidth","offsetHeight","imageData","rotated","canvasWidth","canvasHeight","canvasData","oldLeft","oldTop","limited","limitCanvas","initialImageData","initialCanvasData","sizeLimited","positionLimited","cropBoxData","_getAdjustedSizes","newCanvasLeft","newCanvasTop","minLeft","minTop","maxLeft","maxTop","changed","transformed","_getRotatedSizes","renderImage","limitCropBox","output","initialCropBoxData","maxCropBoxWidth","maxCropBoxHeight","face","cropBox","disabled","initPreview","crossOrigin","crossOriginUrl","src","viewBox","appendChild","viewBoxImage","previews","ownerDocument","querySelectorAll","querySelector","el","img","html","innerHTML","cssText","resetPreview","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","getElementsByTagName","events","bind","onCropStart","cropStart","onWheel","wheel","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","unbind","handlers","getCanvasData","getCropBoxData","setCanvasData","n","setCropBoxData","setDragMode","dragBox","_this","delta","preventDefault","wheeling","setTimeout","deltaY","wheelDelta","action","changedTouches","touch","identifier","originalEvent","cropping","change","right","bottom","renderable","shiftKey","range","x","y","check","side","move","p","methods","reset","clear","hasSameSize","isImg","replaced","uncreate","load","enable","disable","destroy","originalUrl","offsetX","offsetY","_this$canvasData","moveTo","_originalEvent","zoomTo","pivot","oldRatio","rotateTo","_scaleX","_scaleY","getData$$1","rounded","setData$$1","getContainerData","getImageData","sized","widthChanged","heightChanged","getCroppedCanvas","HTMLCanvasElement","source","_this$getData","initialX","initialY","initialWidth","initialHeight","_options$imageSmoothi","sourceWidth","sourceHeight","srcX","srcY","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","setAspectRatio","mode","croppable","AnotherCropper","Cropper","tagName","Error","reloading","sizing","init","toDataURL","clone","read","xhr","XMLHttpRequest","ontimeout","onabort","onerror","onprogress","getResponseHeader","abort","onload","response","onloadend","open","responseType","withCredentials","send","_parseOrientation","stop","parentNode","insertBefore","nextSibling","_this2","IS_SAFARI","navigator","userAgent","done","build","sizingImage","body","removeChild","template","getElementsByClassName","unbuild","noConflict","setDefaults","factory"],"mappings":";;;;;;;;;;AAWiEA,EAAOC,QAGhE,WAAe,aAErB,SAASC,EAAQC,GACf,UAAWC,SAAW,mBAAqBA,OAAOC,WAAa,SAAU,CACvEH,EAAU,SAAUC,GAClB,cAAcA,OAEX,CACLD,EAAU,SAAUC,GAClB,OAAOA,UAAcC,SAAW,YAAcD,EAAIG,cAAgBF,QAAUD,IAAQC,OAAOG,UAAY,gBAAkBJ,GAI7H,OAAOD,EAAQC,GAGjB,SAASK,EAAgBC,EAAUC,GACjC,KAAMD,aAAoBC,GAAc,CACtC,MAAM,IAAIC,UAAU,sCAIxB,SAASC,EAAkBC,EAAQC,GACjC,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACrC,IAAIE,EAAaH,EAAMC,GACvBE,EAAWC,WAAaD,EAAWC,YAAc,MACjDD,EAAWE,aAAe,KAC1B,GAAI,UAAWF,EAAYA,EAAWG,SAAW,KACjDC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,IAIlD,SAASO,EAAad,EAAae,EAAYC,GAC7C,GAAID,EAAYb,EAAkBF,EAAYH,UAAWkB,GACzD,GAAIC,EAAad,EAAkBF,EAAagB,GAChD,OAAOhB,EAGT,SAASiB,EAAmBC,GAC1B,OAAOC,EAAmBD,IAAQE,EAAiBF,IAAQG,IAG7D,SAASF,EAAmBD,GAC1B,GAAII,MAAMC,QAAQL,GAAM,CACtB,IAAK,IAAIb,EAAI,EAAGmB,EAAO,IAAIF,MAAMJ,EAAIZ,QAASD,EAAIa,EAAIZ,OAAQD,IAAKmB,EAAKnB,GAAKa,EAAIb,GAEjF,OAAOmB,GAIX,SAASJ,EAAiBK,GACxB,GAAI/B,OAAOC,YAAYgB,OAAOc,IAASd,OAAOd,UAAU6B,SAASC,KAAKF,KAAU,qBAAsB,OAAOH,MAAMM,KAAKH,GAG1H,SAASJ,IACP,MAAM,IAAIpB,UAAU,mDAGtB,IAAI4B,SAAoBC,SAAW,YAC/BC,EAASF,EAAaC,OAAS,GAC/BE,EAAY,UAEZC,EAAa,MACbC,EAAc,OACdC,EAAc,OACdC,EAAc,OACdC,EAAc,IACdC,EAAc,IACdC,EAAe,IACfC,EAAe,IACfC,EAAoB,KACpBC,EAAoB,KACpBC,EAAoB,KACpBC,EAAoB,KAEpBC,EAAa,GAAGC,OAAOd,EAAW,SAClCe,EAAiB,GAAGD,OAAOd,EAAW,aACtCgB,EAAe,GAAGF,OAAOd,EAAW,WACpCiB,EAAa,GAAGH,OAAOd,EAAW,SAClCkB,EAAkB,GAAGJ,OAAOd,EAAW,cACvCmB,EAAc,GAAGL,OAAOd,EAAW,UACnCoB,EAAa,GAAGN,OAAOd,EAAW,SAElCqB,EAAc,GAAGP,OAAOd,EAAW,UACnCsB,EAAe,GAAGR,OAAOd,EAAW,WAEpCuB,EAAiB,OACjBC,EAAiB,OACjBC,EAAiB,OAEjBC,EAAa,OACbC,EAAiB,UACjBC,EAAkB,WAClBC,EAAmB,YACnBC,EAAiB,WACjBC,EAAqBhC,EAAOiC,aAAe,cAAgB,uBAC3DC,EAAqBlC,EAAOiC,aAAe,cAAgB,sBAC3DE,EAAmBnC,EAAOiC,aAAe,0BAA4B,+BACrEG,EAAc,QACdC,EAAe,SACfC,EAAc,kCACdC,EAAa,OAEbC,EAAiB,aAEjBC,EAAiB,+CACjBC,EAAkB,SAClBC,EAAuB,4BACvBC,EAAkB,oBAElBC,EAAW,CAEbC,SAAU,EAGVC,SAAUvB,EAGVwB,mBAAoBC,IAEpBC,YAAaD,IAEbE,KAAM,KAENC,QAAS,GAETC,WAAY,KAEZC,QAAS,KAETC,iBAAkB,KAElBC,iBAAkB,KAElBC,MAAO,KAEPC,OAAQ,KAERC,OAAQ,KAERC,UAAW,KAEXC,WAAY,KAEZC,SAAU,KAEVC,aAAc,GAEdC,QAAS,KAETC,UAAW,KAEXC,SAAU,KAEVC,SAAU,KAEVC,YAAa,KAEbC,YAAa,KAEbC,eAAgB,GAEhBC,eAAgB,KAEhBC,iBAAkB,KAElBC,yBAA0B,KAE1BC,eAAgB,EAChBC,gBAAiB,EACjBC,gBAAiB,EACjBC,iBAAkB,EAClBC,kBAAmB,IACnBC,mBAAoB,IAEpBC,MAAO,KACPC,UAAW,KACXC,SAAU,KACVC,QAAS,KACTC,KAAM,KACNC,KAAM,MAGJC,EAAW,sDAAwD,iCAAmC,qCAAuC,SAAW,uCAAyC,iCAAmC,yCAA2C,gDAAkD,gDAAkD,uCAAyC,qCAAuC,oEAAsE,oEAAsE,oEAAsE,oEAAsE,sEAAwE,sEAAwE,sEAAwE,sEAAwE,wEAA0E,wEAA0E,wEAA0E,wEAA0E,SAAW,SAM9yCC,GAAQC,OAAOD,OAASvF,EAAOuF,MAOnC,SAASE,GAASC,GAChB,cAAcA,IAAU,WAAaH,GAAMG,GAQ7C,SAASC,GAAYD,GACnB,cAAcA,IAAU,YAQ1B,SAASE,GAASF,GAChB,OAAOjI,EAAQiI,KAAW,UAAYA,IAAU,KAElD,IAAIG,GAAiBjH,OAAOd,UAAU+H,eAOtC,SAASC,GAAcJ,GACrB,IAAKE,GAASF,GAAQ,CACpB,OAAO,MAGT,IACE,IAAIK,EAAeL,EAAM7H,YACzB,IAAIC,EAAYiI,EAAajI,UAC7B,OAAOiI,GAAgBjI,GAAa+H,GAAejG,KAAK9B,EAAW,iBACnE,MAAOkI,GACP,OAAO,OASX,SAASC,GAAWP,GAClB,cAAcA,IAAU,WAS1B,SAASQ,GAAQ/C,EAAMgD,GACrB,GAAIhD,GAAQ8C,GAAWE,GAAW,CAChC,GAAI5G,MAAMC,QAAQ2D,IAASsC,GAAStC,EAAK5E,QAEvC,CACE,IAAIA,EAAS4E,EAAK5E,OAClB,IAAID,EAEJ,IAAKA,EAAI,EAAGA,EAAIC,EAAQD,GAAK,EAAG,CAC9B,GAAI6H,EAASvG,KAAKuD,EAAMA,EAAK7E,GAAIA,EAAG6E,KAAU,MAAO,CACnD,aAGC,GAAIyC,GAASzC,GAAO,CAC3BvE,OAAOwH,KAAKjD,GAAM+C,QAAQ,SAAUpH,GAClCqH,EAASvG,KAAKuD,EAAMA,EAAKrE,GAAMA,EAAKqE,MAK1C,OAAOA,EAST,IAAIkD,GAASzH,OAAOyH,QAAU,SAASA,EAAO3I,GAC5C,IAAK,IAAI4I,EAAOC,UAAUhI,OAAQiI,EAAO,IAAIjH,MAAM+G,EAAO,EAAIA,EAAO,EAAI,GAAIG,EAAO,EAAGA,EAAOH,EAAMG,IAAQ,CAC1GD,EAAKC,EAAO,GAAKF,UAAUE,GAG7B,GAAIb,GAASlI,IAAQ8I,EAAKjI,OAAS,EAAG,CACpCiI,EAAKN,QAAQ,SAAUQ,GACrB,GAAId,GAASc,GAAM,CACjB9H,OAAOwH,KAAKM,GAAKR,QAAQ,SAAUpH,GACjCpB,EAAIoB,GAAO4H,EAAI5H,QAMvB,OAAOpB,GAELiJ,GAAkB,uBAStB,SAASC,GAAuBlB,GAC9B,IAAImB,EAAQN,UAAUhI,OAAS,GAAKgI,UAAU,KAAOO,UAAYP,UAAU,GAAK,KAChF,OAAOI,GAAgBI,KAAKrB,GAASsB,KAAKC,MAAMvB,EAAQmB,GAASA,EAAQnB,EAE3E,IAAIwB,GAAgB,mDAOpB,SAASC,GAASC,EAASC,GACzB,IAAIC,EAAQF,EAAQE,MACpBpB,GAAQmB,EAAQ,SAAU3B,EAAO6B,GAC/B,GAAIL,GAAcH,KAAKQ,IAAa9B,GAASC,GAAQ,CACnDA,GAAS,KAGX4B,EAAMC,GAAY7B,IAUtB,SAAS8B,GAASJ,EAAS1B,GACzB,OAAO0B,EAAQK,UAAYL,EAAQK,UAAUC,SAAShC,GAAS0B,EAAQO,UAAUC,QAAQlC,IAAU,EAQrG,SAASmC,GAAST,EAAS1B,GACzB,IAAKA,EAAO,CACV,OAGF,GAAID,GAAS2B,EAAQ7I,QAAS,CAC5B2H,GAAQkB,EAAS,SAAUU,GACzBD,GAASC,EAAMpC,KAEjB,OAGF,GAAI0B,EAAQK,UAAW,CACrBL,EAAQK,UAAUM,IAAIrC,GACtB,OAGF,IAAIiC,EAAYP,EAAQO,UAAUK,OAElC,IAAKL,EAAW,CACdP,EAAQO,UAAYjC,OACf,GAAIiC,EAAUC,QAAQlC,GAAS,EAAG,CACvC0B,EAAQO,UAAY,GAAG5G,OAAO4G,EAAW,KAAK5G,OAAO2E,IASzD,SAASuC,GAAYb,EAAS1B,GAC5B,IAAKA,EAAO,CACV,OAGF,GAAID,GAAS2B,EAAQ7I,QAAS,CAC5B2H,GAAQkB,EAAS,SAAUU,GACzBG,GAAYH,EAAMpC,KAEpB,OAGF,GAAI0B,EAAQK,UAAW,CACrBL,EAAQK,UAAUS,OAAOxC,GACzB,OAGF,GAAI0B,EAAQO,UAAUC,QAAQlC,IAAU,EAAG,CACzC0B,EAAQO,UAAYP,EAAQO,UAAUQ,QAAQzC,EAAO,KAUzD,SAAS0C,GAAYhB,EAAS1B,EAAO2C,GACnC,IAAK3C,EAAO,CACV,OAGF,GAAID,GAAS2B,EAAQ7I,QAAS,CAC5B2H,GAAQkB,EAAS,SAAUU,GACzBM,GAAYN,EAAMpC,EAAO2C,KAE3B,OAIF,GAAIA,EAAO,CACTR,GAAST,EAAS1B,OACb,CACLuC,GAAYb,EAAS1B,IAGzB,IAAI4C,GAAmB,oBAOvB,SAASC,GAAU7C,GACjB,OAAOA,EAAMyC,QAAQG,GAAkB,SAASE,cASlD,SAASC,GAAQrB,EAASsB,GACxB,GAAI9C,GAASwB,EAAQsB,IAAQ,CAC3B,OAAOtB,EAAQsB,GAGjB,GAAItB,EAAQuB,QAAS,CACnB,OAAOvB,EAAQuB,QAAQD,GAGzB,OAAOtB,EAAQwB,aAAa,QAAQ7H,OAAOwH,GAAUG,KASvD,SAASG,GAAQzB,EAASsB,EAAMvF,GAC9B,GAAIyC,GAASzC,GAAO,CAClBiE,EAAQsB,GAAQvF,OACX,GAAIiE,EAAQuB,QAAS,CAC1BvB,EAAQuB,QAAQD,GAAQvF,MACnB,CACLiE,EAAQ0B,aAAa,QAAQ/H,OAAOwH,GAAUG,IAAQvF,IAS1D,SAAS4F,GAAW3B,EAASsB,GAC3B,GAAI9C,GAASwB,EAAQsB,IAAQ,CAC3B,WACStB,EAAQsB,GACf,MAAO1C,GACPoB,EAAQsB,GAAQ5B,gBAEb,GAAIM,EAAQuB,QAAS,CAE1B,WACSvB,EAAQuB,QAAQD,GACvB,MAAO1C,GACPoB,EAAQuB,QAAQD,GAAQ5B,eAErB,CACLM,EAAQ4B,gBAAgB,QAAQjI,OAAOwH,GAAUG,MAGrD,IAAIO,GAAgB,QAEhBC,GAAgB,WAClB,IAAIC,EAAY,MAEhB,GAAIrJ,EAAY,CACd,IAAIsJ,EAAO,MAEX,IAAIC,EAAW,SAASA,MAExB,IAAIC,EAAU1K,OAAOC,eAAe,GAAI,OAAQ,CAC9C0K,IAAK,SAASA,IACZJ,EAAY,KACZ,OAAOC,GAQTI,IAAK,SAASA,EAAI9D,GAChB0D,EAAO1D,KAGX1F,EAAOyJ,iBAAiB,OAAQJ,EAAUC,GAC1CtJ,EAAO0J,oBAAoB,OAAQL,EAAUC,GAG/C,OAAOH,EA3BW,GAsCpB,SAASQ,GAAevC,EAASwC,EAAMP,GACrC,IAAIC,EAAU/C,UAAUhI,OAAS,GAAKgI,UAAU,KAAOO,UAAYP,UAAU,GAAK,GAClF,IAAIsD,EAAUR,EACdO,EAAK5B,OAAO8B,MAAMb,IAAe/C,QAAQ,SAAU6D,GACjD,IAAKb,GAAe,CAClB,IAAIc,EAAY5C,EAAQ4C,UAExB,GAAIA,GAAaA,EAAUD,IAAUC,EAAUD,GAAOV,GAAW,CAC/DQ,EAAUG,EAAUD,GAAOV,UACpBW,EAAUD,GAAOV,GAExB,GAAIzK,OAAOwH,KAAK4D,EAAUD,IAAQxL,SAAW,EAAG,QACvCyL,EAAUD,GAGnB,GAAInL,OAAOwH,KAAK4D,GAAWzL,SAAW,EAAG,QAChC6I,EAAQ4C,YAKrB5C,EAAQsC,oBAAoBK,EAAOF,EAASP,KAWhD,SAASW,GAAY7C,EAASwC,EAAMP,GAClC,IAAIC,EAAU/C,UAAUhI,OAAS,GAAKgI,UAAU,KAAOO,UAAYP,UAAU,GAAK,GAClF,IAAI2D,EAAWb,EACfO,EAAK5B,OAAO8B,MAAMb,IAAe/C,QAAQ,SAAU6D,GACjD,GAAIT,EAAQF,OAASF,GAAe,CAClC,IAAIiB,EAAqB/C,EAAQ4C,UAC7BA,EAAYG,SAA4B,EAAI,GAAKA,EAErDD,EAAW,SAASL,WACXG,EAAUD,GAAOV,GACxBjC,EAAQsC,oBAAoBK,EAAOG,EAAUZ,GAE7C,IAAK,IAAIc,EAAQ7D,UAAUhI,OAAQiI,EAAO,IAAIjH,MAAM6K,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IAAS,CAC7F7D,EAAK6D,GAAS9D,UAAU8D,GAG1BhB,EAASiB,MAAMlD,EAASZ,IAG1B,IAAKwD,EAAUD,GAAQ,CACrBC,EAAUD,GAAS,GAGrB,GAAIC,EAAUD,GAAOV,GAAW,CAC9BjC,EAAQsC,oBAAoBK,EAAOC,EAAUD,GAAOV,GAAWC,GAGjEU,EAAUD,GAAOV,GAAYa,EAC7B9C,EAAQ4C,UAAYA,EAGtB5C,EAAQqC,iBAAiBM,EAAOG,EAAUZ,KAW9C,SAASiB,GAAcnD,EAASwC,EAAMzG,GACpC,IAAI4G,EAEJ,GAAI9D,GAAWuE,QAAUvE,GAAWwE,aAAc,CAChDV,EAAQ,IAAIU,YAAYb,EAAM,CAC5Bc,OAAQvH,EACRwH,QAAS,KACTC,WAAY,WAET,CACLb,EAAQc,SAASC,YAAY,eAC7Bf,EAAMgB,gBAAgBnB,EAAM,KAAM,KAAMzG,GAG1C,OAAOiE,EAAQmD,cAAcR,GAQ/B,SAASiB,GAAU5D,GACjB,IAAI6D,EAAM7D,EAAQ8D,wBAClB,MAAO,CACLC,KAAMF,EAAIE,MAAQpL,OAAOqL,YAAcP,SAASQ,gBAAgBC,YAChEC,IAAKN,EAAIM,KAAOxL,OAAOyL,YAAcX,SAASQ,gBAAgBI,YAGlE,IAAIC,GAAW1L,EAAO0L,SAClBC,GAAiB,mCAOrB,SAASC,GAAiBC,GACxB,IAAIC,EAAQD,EAAIE,MAAMJ,IACtB,OAAOG,IAAUA,EAAM,KAAOJ,GAASM,UAAYF,EAAM,KAAOJ,GAASO,UAAYH,EAAM,KAAOJ,GAASQ,MAQ7G,SAASC,GAAaN,GACpB,IAAIO,EAAY,aAAarL,QAAO,IAAIsL,MAAOC,WAC/C,OAAOT,GAAOA,EAAIjE,QAAQ,QAAU,EAAI,IAAM,KAAOwE,EAQvD,SAASG,GAAcC,GACrB,IAAIC,EAASD,EAAKC,OACdC,EAASF,EAAKE,OACdC,EAASH,EAAKG,OACdC,EAAaJ,EAAKI,WAClBC,EAAaL,EAAKK,WACtB,IAAIC,EAAS,GAEb,GAAIrH,GAASmH,IAAeA,IAAe,EAAG,CAC5CE,EAAOC,KAAK,cAAchM,OAAO6L,EAAY,QAG/C,GAAInH,GAASoH,IAAeA,IAAe,EAAG,CAC5CC,EAAOC,KAAK,cAAchM,OAAO8L,EAAY,QAI/C,GAAIpH,GAASgH,IAAWA,IAAW,EAAG,CACpCK,EAAOC,KAAK,UAAUhM,OAAO0L,EAAQ,SAGvC,GAAIhH,GAASiH,IAAWA,IAAW,EAAG,CACpCI,EAAOC,KAAK,UAAUhM,OAAO2L,EAAQ,MAGvC,GAAIjH,GAASkH,IAAWA,IAAW,EAAG,CACpCG,EAAOC,KAAK,UAAUhM,OAAO4L,EAAQ,MAGvC,IAAIK,EAAYF,EAAOvO,OAASuO,EAAOG,KAAK,KAAO,OACnD,MAAO,CACLC,gBAAiBF,EACjBG,YAAaH,EACbA,UAAWA,GASf,SAASI,GAAgBC,GACvB,IAAIC,EAAYjH,GAAO,GAAIgH,GAC3B,IAAIE,EAAS,GACbrH,GAAQmH,EAAU,SAAUG,EAASC,UAC5BH,EAAUG,GACjBvH,GAAQoH,EAAW,SAAUI,GAC3B,IAAIC,EAAK3G,KAAK4G,IAAIJ,EAAQK,OAASH,EAASG,QAC5C,IAAIC,EAAK9G,KAAK4G,IAAIJ,EAAQO,OAASL,EAASK,QAC5C,IAAIC,EAAKhH,KAAK4G,IAAIJ,EAAQS,KAAOP,EAASO,MAC1C,IAAIC,EAAKlH,KAAK4G,IAAIJ,EAAQW,KAAOT,EAASS,MAC1C,IAAIC,EAAKpH,KAAKqH,KAAKV,EAAKA,EAAKG,EAAKA,GAClC,IAAIQ,EAAKtH,KAAKqH,KAAKL,EAAKA,EAAKE,EAAKA,GAClC,IAAIK,GAASD,EAAKF,GAAMA,EACxBb,EAAOR,KAAKwB,OAGhBhB,EAAOiB,KAAK,SAAUC,EAAGC,GACvB,OAAO1H,KAAK4G,IAAIa,GAAKzH,KAAK4G,IAAIc,KAEhC,OAAOnB,EAAO,GAShB,SAASoB,GAAWC,EAAOC,GACzB,IAAIC,EAAQF,EAAME,MACdC,EAAQH,EAAMG,MAClB,IAAIC,EAAM,CACRf,KAAMa,EACNX,KAAMY,GAER,OAAOF,EAAUG,EAAM3I,GAAO,CAC5BwH,OAAQiB,EACRf,OAAQgB,GACPC,GAQL,SAASC,GAAkB5B,GACzB,IAAIyB,EAAQ,EACZ,IAAIC,EAAQ,EACZ,IAAIG,EAAQ,EACZhJ,GAAQmH,EAAU,SAAU8B,GAC1B,IAAItB,EAASsB,EAAMtB,OACfE,EAASoB,EAAMpB,OACnBe,GAASjB,EACTkB,GAAShB,EACTmB,GAAS,IAEXJ,GAASI,EACTH,GAASG,EACT,MAAO,CACLJ,MAAOA,EACPC,MAAOA,GAOX,IAAIK,GAAW5J,OAAO4J,UAAYpP,EAAOoP,SAQzC,SAASC,GAAiBC,GAExB,IAAIpM,EAAcoM,EAAMpM,YACpBqM,EAASD,EAAMC,OACfC,EAAQF,EAAME,MAClB,IAAI5F,EAAOrD,UAAUhI,OAAS,GAAKgI,UAAU,KAAOO,UAAYP,UAAU,GAAK,UAE/E,IAAIkJ,EAAgB,SAASA,EAAc/J,GACzC,OAAO0J,GAAS1J,IAAUA,EAAQ,GAGpC,GAAI+J,EAAcD,IAAUC,EAAcF,GAAS,CACjD,IAAIG,EAAgBH,EAASrM,EAE7B,GAAI0G,IAAS,WAAa8F,EAAgBF,GAAS5F,IAAS,SAAW8F,EAAgBF,EAAO,CAC5FD,EAASC,EAAQtM,MACZ,CACLsM,EAAQD,EAASrM,QAEd,GAAIuM,EAAcD,GAAQ,CAC/BD,EAASC,EAAQtM,OACZ,GAAIuM,EAAcF,GAAS,CAChCC,EAAQD,EAASrM,EAGnB,MAAO,CACLsM,MAAOA,EACPD,OAAQA,GASZ,SAASI,GAAgBC,GACvB,IAAIJ,EAAQI,EAAMJ,MACdD,EAASK,EAAML,OACfM,EAASD,EAAMC,OACnBA,EAAS7I,KAAK4G,IAAIiC,GAAU,IAE5B,GAAIA,IAAW,GAAI,CACjB,MAAO,CACLL,MAAOD,EACPA,OAAQC,GAIZ,IAAIM,EAAMD,EAAS,GAAK7I,KAAK+I,GAAK,IAClC,IAAIC,EAAShJ,KAAKiJ,IAAIH,GACtB,IAAII,EAASlJ,KAAKmJ,IAAIL,GACtB,IAAIM,EAAWZ,EAAQU,EAASX,EAASS,EACzC,IAAIK,EAAYb,EAAQQ,EAAST,EAASW,EAC1C,OAAOL,EAAS,GAAK,CACnBL,MAAOa,EACPd,OAAQa,GACN,CACFZ,MAAOY,EACPb,OAAQc,GAYZ,SAASC,GAAgBC,EAAOC,EAAOC,EAAOC,GAC5C,IAAIC,EAAmBH,EAAMtN,YACzB0N,EAAoBJ,EAAMK,aAC1BC,EAAqBN,EAAMO,cAC3BC,EAAeR,EAAM/D,OACrBA,EAASuE,SAAsB,EAAI,EAAIA,EACvCC,EAAeT,EAAM9D,OACrBA,EAASuE,SAAsB,EAAI,EAAIA,EACvCC,EAAeV,EAAM7D,OACrBA,EAASuE,SAAsB,EAAI,EAAIA,EAC3C,IAAIhO,EAAcuN,EAAMvN,YACpB2N,EAAeJ,EAAMI,aACrBE,EAAgBN,EAAMM,cAC1B,IAAII,EAAkBT,EAAMU,UACxBA,EAAYD,SAAyB,EAAI,cAAgBA,EACzDE,EAAwBX,EAAMY,sBAC9BA,EAAwBD,SAA+B,EAAI,KAAOA,EAClEE,EAAwBb,EAAMc,sBAC9BA,EAAwBD,SAA+B,EAAI,MAAQA,EACnEE,EAAiBf,EAAMgB,SACvBA,EAAWD,SAAwB,EAAIE,SAAWF,EAClDG,EAAkBlB,EAAMmB,UACxBA,EAAYD,SAAyB,EAAID,SAAWC,EACpDE,EAAiBpB,EAAMqB,SACvBA,EAAWD,SAAwB,EAAI,EAAIA,EAC3CE,EAAkBtB,EAAMuB,UACxBA,EAAYD,SAAyB,EAAI,EAAIA,EACjD,IAAIE,EAASrH,SAASsH,cAAc,UACpC,IAAIC,EAAUF,EAAOG,WAAW,MAChC,IAAIC,EAAWjD,GAAiB,CAC9BnM,YAAaA,EACbsM,MAAOkC,EACPnC,OAAQsC,IAEV,IAAIU,EAAWlD,GAAiB,CAC9BnM,YAAaA,EACbsM,MAAOuC,EACPxC,OAAQ0C,GACP,SACH,IAAIzC,EAAQxI,KAAKwL,IAAIF,EAAS9C,MAAOxI,KAAKyL,IAAIF,EAAS/C,MAAOqB,IAC9D,IAAItB,EAASvI,KAAKwL,IAAIF,EAAS/C,OAAQvI,KAAKyL,IAAIF,EAAShD,OAAQwB,IAGjE,IAAI2B,EAAerD,GAAiB,CAClCnM,YAAayN,EACbnB,MAAOkC,EACPnC,OAAQsC,IAEV,IAAIc,EAAetD,GAAiB,CAClCnM,YAAayN,EACbnB,MAAOuC,EACPxC,OAAQ0C,GACP,SACH,IAAIW,EAAY5L,KAAKwL,IAAIE,EAAalD,MAAOxI,KAAKyL,IAAIE,EAAanD,MAAOoB,IAC1E,IAAIiC,EAAa7L,KAAKwL,IAAIE,EAAanD,OAAQvI,KAAKyL,IAAIE,EAAapD,OAAQuB,IAC7E,IAAIgC,EAAS,EAAEF,EAAY,GAAIC,EAAa,EAAGD,EAAWC,GAC1DX,EAAO1C,MAAQ5I,GAAuB4I,GACtC0C,EAAO3C,OAAS3I,GAAuB2I,GACvC6C,EAAQW,UAAY3B,EACpBgB,EAAQY,SAAS,EAAG,EAAGxD,EAAOD,GAC9B6C,EAAQa,OACRb,EAAQc,UAAU1D,EAAQ,EAAGD,EAAS,GACtC6C,EAAQ3F,OAAOA,EAASzF,KAAK+I,GAAK,KAClCqC,EAAQe,MAAMzG,EAAQC,GACtByF,EAAQd,sBAAwBA,EAChCc,EAAQZ,sBAAwBA,EAChCY,EAAQgB,UAAU9I,MAAM8H,EAAS,CAAC7B,GAAOxP,OAAO7B,EAAmB4T,EAAOO,IAAI,SAAUC,GACtF,OAAOtM,KAAKuM,MAAM3M,GAAuB0M,SAE3ClB,EAAQ9O,UACR,OAAO4O,EAET,IAAIsB,GAAeC,OAAOD,aAS1B,SAASE,GAAsBC,EAAUC,EAAOrV,GAC9C,IAAIsV,EAAM,GACV,IAAIvV,EACJC,GAAUqV,EAEV,IAAKtV,EAAIsV,EAAOtV,EAAIC,EAAQD,GAAK,EAAG,CAClCuV,GAAOL,GAAaG,EAASG,SAASxV,IAGxC,OAAOuV,EAET,IAAIE,GAAuB,YAO3B,SAASC,GAAqBC,GAC5B,IAAIC,EAASD,EAAQ9L,QAAQ4L,GAAsB,IACnD,IAAII,EAASC,KAAKF,GAClB,IAAIG,EAAc,IAAIC,YAAYH,EAAO5V,QACzC,IAAIgW,EAAQ,IAAIC,WAAWH,GAC3BnO,GAAQqO,EAAO,SAAU7O,EAAOpH,GAC9BiW,EAAMjW,GAAK6V,EAAOM,WAAWnW,KAE/B,OAAO+V,EAST,SAASK,GAAqBL,EAAaM,GACzC,IAAIC,EAAS,GACb,IAAIC,EAAY,KAChB,IAAIN,EAAQ,IAAIC,WAAWH,GAE3B,MAAOE,EAAMhW,OAAS,EAAG,CACvBqW,EAAO7H,KAAKyG,GAAalJ,WAAW,EAAGpL,EAAmBqV,EAAMO,SAAS,EAAGD,MAC5EN,EAAQA,EAAMO,SAASD,GAGzB,MAAO,QAAQ9T,OAAO4T,EAAU,YAAY5T,OAAOgU,KAAKH,EAAO3H,KAAK,MAQtE,SAAS+H,GAAuBX,GAC9B,IAAIV,EAAW,IAAIsB,SAASZ,GAC5B,IAAIa,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EAEJ,GAAI1B,EAASG,SAAS,KAAO,KAAQH,EAASG,SAAS,KAAO,IAAM,CAClE,IAAIvV,EAASoV,EAAS2B,WACtB,IAAIC,EAAS,EAEb,MAAOA,EAAShX,EAAQ,CACtB,GAAIoV,EAASG,SAASyB,KAAY,KAAQ5B,EAASG,SAASyB,EAAS,KAAO,IAAM,CAChFH,EAAYG,EACZ,MAGFA,GAAU,GAId,GAAIH,EAAW,CACb,IAAII,EAAaJ,EAAY,EAC7B,IAAIK,EAAaL,EAAY,GAE7B,GAAI1B,GAAsBC,EAAU6B,EAAY,KAAO,OAAQ,CAC7D,IAAIE,EAAa/B,EAASgC,UAAUF,GACpCN,EAAeO,IAAe,MAE9B,GAAIP,GAAgBO,IAAe,MAEjC,CACE,GAAI/B,EAASgC,UAAUF,EAAa,EAAGN,KAAkB,GAAQ,CAC/D,IAAIS,EAAiBjC,EAASkC,UAAUJ,EAAa,EAAGN,GAExD,GAAIS,GAAkB,EAAY,CAChCP,EAAWI,EAAaG,MAOpC,GAAIP,EAAU,CACZ,IAAIS,EAAUnC,EAASgC,UAAUN,EAAUF,GAE3C,IAAIY,EAEJ,IAAIzX,EAEJ,IAAKA,EAAI,EAAGA,EAAIwX,EAASxX,GAAK,EAAG,CAC/ByX,EAAUV,EAAW/W,EAAI,GAAK,EAE9B,GAAIqV,EAASgC,UAAUI,EAASZ,KAAkB,IAEhD,CAEEY,GAAW,EAEXb,EAAcvB,EAASgC,UAAUI,EAASZ,GAE1CxB,EAASqC,UAAUD,EAAS,EAAGZ,GAC/B,QAKR,OAAOD,EAQT,SAASe,GAAiBf,GACxB,IAAIzI,EAAS,EACb,IAAIC,EAAS,EACb,IAAIC,EAAS,EAEb,OAAQuI,GAEN,KAAK,EACHxI,GAAU,EACV,MAGF,KAAK,EACHD,GAAU,IACV,MAGF,KAAK,EACHE,GAAU,EACV,MAGF,KAAK,EACHF,EAAS,GACTE,GAAU,EACV,MAGF,KAAK,EACHF,EAAS,GACT,MAGF,KAAK,EACHA,EAAS,GACTC,GAAU,EACV,MAGF,KAAK,EACHD,GAAU,GACV,MAEF,SAGF,MAAO,CACLA,OAAQA,EACRC,OAAQA,EACRC,OAAQA,GAIZ,IAAIuJ,GAAS,CACXA,OAAQ,SAASA,IACfC,KAAKC,gBACLD,KAAKE,aACLF,KAAKG,cACLH,KAAKI,eAEL,GAAIJ,KAAKK,QAAS,CAChBL,KAAKM,kBAGTL,cAAe,SAASA,IACtB,IAAIhP,EAAU+O,KAAK/O,QACfkC,EAAU6M,KAAK7M,QACfoN,EAAYP,KAAKO,UACjBC,EAAUR,KAAKQ,QACnB9O,GAAS8O,EAAS1V,GAClBgH,GAAYb,EAASnG,GACrB,IAAI2V,EAAgB,CAClBpH,MAAOxI,KAAKyL,IAAIiE,EAAUG,YAAarR,OAAO8D,EAAQxE,oBAAsB,KAC5EyK,OAAQvI,KAAKyL,IAAIiE,EAAUI,aAActR,OAAO8D,EAAQvE,qBAAuB,MAEjFoR,KAAKS,cAAgBA,EACrBzP,GAASwP,EAAS,CAChBnH,MAAOoH,EAAcpH,MACrBD,OAAQqH,EAAcrH,SAExB1H,GAAST,EAASnG,GAClBgH,GAAY0O,EAAS1V,IAGvBoV,WAAY,SAASA,IACnB,IAAIO,EAAgBT,KAAKS,cACrBG,EAAYZ,KAAKY,UACrB,IAAIjU,EAAWqT,KAAK7M,QAAQxG,SAC5B,IAAIkU,EAAUhQ,KAAK4G,IAAImJ,EAAUtK,QAAU,MAAQ,GACnD,IAAIoE,EAAemG,EAAUD,EAAUhG,cAAgBgG,EAAUlG,aACjE,IAAIE,EAAgBiG,EAAUD,EAAUlG,aAAekG,EAAUhG,cACjE,IAAI7N,EAAc2N,EAAeE,EACjC,IAAIkG,EAAcL,EAAcpH,MAChC,IAAI0H,EAAeN,EAAcrH,OAEjC,GAAIqH,EAAcrH,OAASrM,EAAc0T,EAAcpH,MAAO,CAC5D,GAAI1M,IAAa,EAAG,CAClBmU,EAAcL,EAAcrH,OAASrM,MAChC,CACLgU,EAAeN,EAAcpH,MAAQtM,QAElC,GAAIJ,IAAa,EAAG,CACzBoU,EAAeN,EAAcpH,MAAQtM,MAChC,CACL+T,EAAcL,EAAcrH,OAASrM,EAGvC,IAAIiU,EAAa,CACfjU,YAAaA,EACb2N,aAAcA,EACdE,cAAeA,EACfvB,MAAOyH,EACP1H,OAAQ2H,GAEVC,EAAWhM,MAAQyL,EAAcpH,MAAQyH,GAAe,EACxDE,EAAW5L,KAAOqL,EAAcrH,OAAS2H,GAAgB,EACzDC,EAAWC,QAAUD,EAAWhM,KAChCgM,EAAWE,OAASF,EAAW5L,IAC/B4K,KAAKgB,WAAaA,EAClBhB,KAAKmB,QAAUxU,IAAa,GAAKA,IAAa,EAC9CqT,KAAKoB,YAAY,KAAM,MACvBpB,KAAKqB,iBAAmBnR,GAAO,GAAI0Q,GACnCZ,KAAKsB,kBAAoBpR,GAAO,GAAI8Q,IAEtCI,YAAa,SAASA,EAAYG,EAAaC,GAC7C,IAAIrO,EAAU6M,KAAK7M,QACfsN,EAAgBT,KAAKS,cACrBO,EAAahB,KAAKgB,WAClBS,EAAczB,KAAKyB,YACvB,IAAI9U,EAAWwG,EAAQxG,SACvB,IAAII,EAAciU,EAAWjU,YAC7B,IAAIsT,EAAUL,KAAKK,SAAWoB,EAE9B,GAAIF,EAAa,CACf,IAAIhT,EAAiBc,OAAO8D,EAAQ5E,iBAAmB,EACvD,IAAIC,EAAkBa,OAAO8D,EAAQ3E,kBAAoB,EAEzD,GAAI7B,EAAW,EAAG,CAChB4B,EAAiBsC,KAAKyL,IAAI/N,EAAgBkS,EAAcpH,OACxD7K,EAAkBqC,KAAKyL,IAAI9N,EAAiBiS,EAAcrH,QAE1D,GAAIzM,IAAa,EAAG,CAClB,GAAI6B,EAAkBzB,EAAcwB,EAAgB,CAClDA,EAAiBC,EAAkBzB,MAC9B,CACLyB,EAAkBD,EAAiBxB,SAGlC,GAAIJ,EAAW,EAAG,CACvB,GAAI4B,EAAgB,CAClBA,EAAiBsC,KAAKyL,IAAI/N,EAAgB8R,EAAUoB,EAAYpI,MAAQ,QACnE,GAAI7K,EAAiB,CAC1BA,EAAkBqC,KAAKyL,IAAI9N,EAAiB6R,EAAUoB,EAAYrI,OAAS,QACtE,GAAIiH,EAAS,CAClB9R,EAAiBkT,EAAYpI,MAC7B7K,EAAkBiT,EAAYrI,OAE9B,GAAI5K,EAAkBzB,EAAcwB,EAAgB,CAClDA,EAAiBC,EAAkBzB,MAC9B,CACLyB,EAAkBD,EAAiBxB,IAKzC,IAAI2U,EAAoBxI,GAAiB,CACvCnM,YAAaA,EACbsM,MAAO9K,EACP6K,OAAQ5K,IAGVD,EAAiBmT,EAAkBrI,MACnC7K,EAAkBkT,EAAkBtI,OACpC4H,EAAWpF,SAAWrN,EACtByS,EAAWlF,UAAYtN,EACvBwS,EAAWzF,SAAWC,SACtBwF,EAAWtF,UAAYF,SAGzB,GAAIgG,EAAiB,CACnB,GAAI7U,GAAY0T,EAAU,EAAI,GAAI,CAChC,IAAIsB,EAAgBlB,EAAcpH,MAAQ2H,EAAW3H,MACrD,IAAIuI,EAAenB,EAAcrH,OAAS4H,EAAW5H,OACrD4H,EAAWa,QAAUhR,KAAKwL,IAAI,EAAGsF,GACjCX,EAAWc,OAASjR,KAAKwL,IAAI,EAAGuF,GAChCZ,EAAWe,QAAUlR,KAAKyL,IAAI,EAAGqF,GACjCX,EAAWgB,OAASnR,KAAKyL,IAAI,EAAGsF,GAEhC,GAAIvB,GAAWL,KAAKmB,QAAS,CAC3BH,EAAWa,QAAUhR,KAAKwL,IAAIoF,EAAYzM,KAAMyM,EAAYzM,MAAQyM,EAAYpI,MAAQ2H,EAAW3H,QACnG2H,EAAWc,OAASjR,KAAKwL,IAAIoF,EAAYrM,IAAKqM,EAAYrM,KAAOqM,EAAYrI,OAAS4H,EAAW5H,SACjG4H,EAAWe,QAAUN,EAAYzM,KACjCgM,EAAWgB,OAASP,EAAYrM,IAEhC,GAAIzI,IAAa,EAAG,CAClB,GAAIqU,EAAW3H,OAASoH,EAAcpH,MAAO,CAC3C2H,EAAWa,QAAUhR,KAAKwL,IAAI,EAAGsF,GACjCX,EAAWe,QAAUlR,KAAKyL,IAAI,EAAGqF,GAGnC,GAAIX,EAAW5H,QAAUqH,EAAcrH,OAAQ,CAC7C4H,EAAWc,OAASjR,KAAKwL,IAAI,EAAGuF,GAChCZ,EAAWgB,OAASnR,KAAKyL,IAAI,EAAGsF,UAIjC,CACLZ,EAAWa,SAAWb,EAAW3H,MACjC2H,EAAWc,QAAUd,EAAW5H,OAChC4H,EAAWe,QAAUtB,EAAcpH,MACnC2H,EAAWgB,OAASvB,EAAcrH,UAIxCgH,aAAc,SAASA,EAAa6B,EAASC,GAC3C,IAAIlB,EAAahB,KAAKgB,WAClBJ,EAAYZ,KAAKY,UAErB,GAAIsB,EAAa,CACf,IAAIC,EAAmB3I,GAAgB,CACrCH,MAAOuH,EAAUlG,aAAe7J,KAAK4G,IAAImJ,EAAUrK,QAAU,GAC7D6C,OAAQwH,EAAUhG,cAAgB/J,KAAK4G,IAAImJ,EAAUpK,QAAU,GAC/DkD,OAAQkH,EAAUtK,QAAU,IAE1BoE,EAAeyH,EAAiB9I,MAChCuB,EAAgBuH,EAAiB/I,OAErC,IAAIC,EAAQ2H,EAAW3H,OAASqB,EAAesG,EAAWtG,cAC1D,IAAItB,EAAS4H,EAAW5H,QAAUwB,EAAgBoG,EAAWpG,eAC7DoG,EAAWhM,OAASqE,EAAQ2H,EAAW3H,OAAS,EAChD2H,EAAW5L,MAAQgE,EAAS4H,EAAW5H,QAAU,EACjD4H,EAAW3H,MAAQA,EACnB2H,EAAW5H,OAASA,EACpB4H,EAAWjU,YAAc2N,EAAeE,EACxCoG,EAAWtG,aAAeA,EAC1BsG,EAAWpG,cAAgBA,EAC3BoF,KAAKoB,YAAY,KAAM,OAGzB,GAAIJ,EAAW3H,MAAQ2H,EAAWzF,UAAYyF,EAAW3H,MAAQ2H,EAAWpF,SAAU,CACpFoF,EAAWhM,KAAOgM,EAAWC,QAG/B,GAAID,EAAW5H,OAAS4H,EAAWtF,WAAasF,EAAW5H,OAAS4H,EAAWlF,UAAW,CACxFkF,EAAW5L,IAAM4L,EAAWE,OAG9BF,EAAW3H,MAAQxI,KAAKwL,IAAIxL,KAAKyL,IAAI0E,EAAW3H,MAAO2H,EAAWpF,UAAWoF,EAAWzF,UACxFyF,EAAW5H,OAASvI,KAAKwL,IAAIxL,KAAKyL,IAAI0E,EAAW5H,OAAQ4H,EAAWlF,WAAYkF,EAAWtF,WAC3FsE,KAAKoB,YAAY,MAAO,MACxBJ,EAAWhM,KAAOnE,KAAKwL,IAAIxL,KAAKyL,IAAI0E,EAAWhM,KAAMgM,EAAWa,SAAUb,EAAWe,SACrFf,EAAW5L,IAAMvE,KAAKwL,IAAIxL,KAAKyL,IAAI0E,EAAW5L,IAAK4L,EAAWc,QAASd,EAAWgB,QAClFhB,EAAWC,QAAUD,EAAWhM,KAChCgM,EAAWE,OAASF,EAAW5L,IAC/BpE,GAASgP,KAAKjE,OAAQ7L,GAAO,CAC3BmJ,MAAO2H,EAAW3H,MAClBD,OAAQ4H,EAAW5H,QAClBhD,GAAc,CACfK,WAAYuK,EAAWhM,KACvB0B,WAAYsK,EAAW5L,QAEzB4K,KAAKoC,YAAYH,GAEjB,GAAIjC,KAAKK,SAAWL,KAAKmB,QAAS,CAChCnB,KAAKqC,aAAa,KAAM,QAG5BD,YAAa,SAASA,EAAYH,GAChC,IAAIjB,EAAahB,KAAKgB,WAClBJ,EAAYZ,KAAKY,UACrB,IAAIvH,EAAQuH,EAAUlG,cAAgBsG,EAAW3H,MAAQ2H,EAAWtG,cACpE,IAAItB,EAASwH,EAAUhG,eAAiBoG,EAAW5H,OAAS4H,EAAWpG,eACvE1K,GAAO0Q,EAAW,CAChBvH,MAAOA,EACPD,OAAQA,EACRpE,MAAOgM,EAAW3H,MAAQA,GAAS,EACnCjE,KAAM4L,EAAW5H,OAASA,GAAU,IAEtCpI,GAASgP,KAAK5F,MAAOlK,GAAO,CAC1BmJ,MAAOuH,EAAUvH,MACjBD,OAAQwH,EAAUxH,QACjBhD,GAAclG,GAAO,CACtBuG,WAAYmK,EAAU5L,KACtB0B,WAAYkK,EAAUxL,KACrBwL,MAEH,GAAIqB,EAAS,CACXjC,KAAKsC,WAGTnC,YAAa,SAASA,IACpB,IAAIhN,EAAU6M,KAAK7M,QACf6N,EAAahB,KAAKgB,WACtB,IAAIjU,EAAcoG,EAAQpG,aAAeoG,EAAQtG,mBACjD,IAAIe,EAAeyB,OAAO8D,EAAQvF,eAAiB,GACnD,IAAI6T,EAAc,CAChBpI,MAAO2H,EAAW3H,MAClBD,OAAQ4H,EAAW5H,QAGrB,GAAIrM,EAAa,CACf,GAAIiU,EAAW5H,OAASrM,EAAciU,EAAW3H,MAAO,CACtDoI,EAAYrI,OAASqI,EAAYpI,MAAQtM,MACpC,CACL0U,EAAYpI,MAAQoI,EAAYrI,OAASrM,GAI7CiT,KAAKyB,YAAcA,EACnBzB,KAAKqC,aAAa,KAAM,MAExBZ,EAAYpI,MAAQxI,KAAKwL,IAAIxL,KAAKyL,IAAImF,EAAYpI,MAAOoI,EAAY7F,UAAW6F,EAAYlG,UAC5FkG,EAAYrI,OAASvI,KAAKwL,IAAIxL,KAAKyL,IAAImF,EAAYrI,OAAQqI,EAAY3F,WAAY2F,EAAY/F,WAE/F+F,EAAYpI,MAAQxI,KAAKyL,IAAImF,EAAY7F,SAAU6F,EAAYpI,MAAQzL,GACvE6T,EAAYrI,OAASvI,KAAKyL,IAAImF,EAAY3F,UAAW2F,EAAYrI,OAASxL,GAC1E6T,EAAYzM,KAAOgM,EAAWhM,MAAQgM,EAAW3H,MAAQoI,EAAYpI,OAAS,EAC9EoI,EAAYrM,IAAM4L,EAAW5L,KAAO4L,EAAW5H,OAASqI,EAAYrI,QAAU,EAC9EqI,EAAYR,QAAUQ,EAAYzM,KAClCyM,EAAYP,OAASO,EAAYrM,IACjC4K,KAAKuC,mBAAqBrS,GAAO,GAAIuR,IAEvCY,aAAc,SAASA,EAAad,EAAaC,GAC/C,IAAIrO,EAAU6M,KAAK7M,QACfsN,EAAgBT,KAAKS,cACrBO,EAAahB,KAAKgB,WAClBS,EAAczB,KAAKyB,YACnBN,EAAUnB,KAAKmB,QACnB,IAAIpU,EAAcoG,EAAQpG,YAE1B,GAAIwU,EAAa,CACf,IAAI9S,EAAkBY,OAAO8D,EAAQ1E,kBAAoB,EACzD,IAAIC,EAAmBW,OAAO8D,EAAQzE,mBAAqB,EAC3D,IAAI8T,EAAkBrB,EAAUtQ,KAAKwL,IAAIoE,EAAcpH,MAAO2H,EAAW3H,MAAO2H,EAAW3H,MAAQ2H,EAAWhM,KAAMyL,EAAcpH,MAAQ2H,EAAWhM,MAAQyL,EAAcpH,MAC3K,IAAIoJ,EAAmBtB,EAAUtQ,KAAKwL,IAAIoE,EAAcrH,OAAQ4H,EAAW5H,OAAQ4H,EAAW5H,OAAS4H,EAAW5L,IAAKqL,EAAcrH,OAAS4H,EAAW5L,KAAOqL,EAAcrH,OAE9K3K,EAAkBoC,KAAKwL,IAAI5N,EAAiBgS,EAAcpH,OAC1D3K,EAAmBmC,KAAKwL,IAAI3N,EAAkB+R,EAAcrH,QAE5D,GAAIrM,EAAa,CACf,GAAI0B,GAAmBC,EAAkB,CACvC,GAAIA,EAAmB3B,EAAc0B,EAAiB,CACpDC,EAAmBD,EAAkB1B,MAChC,CACL0B,EAAkBC,EAAmB3B,QAElC,GAAI0B,EAAiB,CAC1BC,EAAmBD,EAAkB1B,OAChC,GAAI2B,EAAkB,CAC3BD,EAAkBC,EAAmB3B,EAGvC,GAAI0V,EAAmB1V,EAAcyV,EAAiB,CACpDC,EAAmBD,EAAkBzV,MAChC,CACLyV,EAAkBC,EAAmB1V,GAKzC0U,EAAY7F,SAAW/K,KAAKwL,IAAI5N,EAAiB+T,GACjDf,EAAY3F,UAAYjL,KAAKwL,IAAI3N,EAAkB+T,GACnDhB,EAAYlG,SAAWiH,EACvBf,EAAY/F,UAAY+G,EAG1B,GAAIjB,EAAiB,CACnB,GAAIL,EAAS,CACXM,EAAYI,QAAUhR,KAAKyL,IAAI,EAAG0E,EAAWhM,MAC7CyM,EAAYK,OAASjR,KAAKyL,IAAI,EAAG0E,EAAW5L,KAC5CqM,EAAYM,QAAUlR,KAAKwL,IAAIoE,EAAcpH,MAAO2H,EAAWhM,KAAOgM,EAAW3H,OAASoI,EAAYpI,MACtGoI,EAAYO,OAASnR,KAAKwL,IAAIoE,EAAcrH,OAAQ4H,EAAW5L,IAAM4L,EAAW5H,QAAUqI,EAAYrI,WACjG,CACLqI,EAAYI,QAAU,EACtBJ,EAAYK,OAAS,EACrBL,EAAYM,QAAUtB,EAAcpH,MAAQoI,EAAYpI,MACxDoI,EAAYO,OAASvB,EAAcrH,OAASqI,EAAYrI,UAI9DkH,cAAe,SAASA,IACtB,IAAInN,EAAU6M,KAAK7M,QACfsN,EAAgBT,KAAKS,cACrBgB,EAAczB,KAAKyB,YAEvB,GAAIA,EAAYpI,MAAQoI,EAAYlG,UAAYkG,EAAYpI,MAAQoI,EAAY7F,SAAU,CACxF6F,EAAYzM,KAAOyM,EAAYR,QAGjC,GAAIQ,EAAYrI,OAASqI,EAAY/F,WAAa+F,EAAYrI,OAASqI,EAAY3F,UAAW,CAC5F2F,EAAYrM,IAAMqM,EAAYP,OAGhCO,EAAYpI,MAAQxI,KAAKwL,IAAIxL,KAAKyL,IAAImF,EAAYpI,MAAOoI,EAAY7F,UAAW6F,EAAYlG,UAC5FkG,EAAYrI,OAASvI,KAAKwL,IAAIxL,KAAKyL,IAAImF,EAAYrI,OAAQqI,EAAY3F,WAAY2F,EAAY/F,WAC/FsE,KAAKqC,aAAa,MAAO,MACzBZ,EAAYzM,KAAOnE,KAAKwL,IAAIxL,KAAKyL,IAAImF,EAAYzM,KAAMyM,EAAYI,SAAUJ,EAAYM,SACzFN,EAAYrM,IAAMvE,KAAKwL,IAAIxL,KAAKyL,IAAImF,EAAYrM,IAAKqM,EAAYK,QAASL,EAAYO,QACtFP,EAAYR,QAAUQ,EAAYzM,KAClCyM,EAAYP,OAASO,EAAYrM,IAEjC,GAAIjC,EAAQtF,SAAWsF,EAAQ/E,eAAgB,CAE7CsE,GAAQsN,KAAK0C,KAAMvX,EAAasW,EAAYpI,OAASoH,EAAcpH,OAASoI,EAAYrI,QAAUqH,EAAcrH,OAASnP,EAAcF,GAGzIiH,GAASgP,KAAK2C,QAASzS,GAAO,CAC5BmJ,MAAOoI,EAAYpI,MACnBD,OAAQqI,EAAYrI,QACnBhD,GAAc,CACfK,WAAYgL,EAAYzM,KACxB0B,WAAY+K,EAAYrM,QAG1B,GAAI4K,KAAKK,SAAWL,KAAKmB,QAAS,CAChCnB,KAAKoB,YAAY,KAAM,MAGzB,IAAKpB,KAAK4C,SAAU,CAClB5C,KAAKsC,WAGTA,OAAQ,SAASA,IACftC,KAAK/S,UACLmH,GAAc4L,KAAK/O,QAASzF,EAAYwU,KAAK1N,aAI7CrF,GAAU,CACZ4V,YAAa,SAASA,IACpB,IAAIC,EAAc9C,KAAK8C,YACvB,IAAI7V,EAAU+S,KAAK7M,QAAQlG,QAC3B,IAAIyI,EAAMoN,EAAc9C,KAAK+C,eAAiB/C,KAAKtK,IACnD,IAAI0E,EAAQ1F,SAASsH,cAAc,OAEnC,GAAI8G,EAAa,CACf1I,EAAM0I,YAAcA,EAGtB1I,EAAM4I,IAAMtN,EACZsK,KAAKiD,QAAQC,YAAY9I,GACzB4F,KAAKmD,aAAe/I,EAEpB,IAAKnN,EAAS,CACZ,OAGF,IAAImW,EAAWnW,EAEf,UAAWA,IAAY,SAAU,CAC/BmW,EAAWpD,KAAK/O,QAAQoS,cAAcC,iBAAiBrW,QAClD,GAAIA,EAAQsW,cAAe,CAChCH,EAAW,CAACnW,GAGd+S,KAAKoD,SAAWA,EAChBrT,GAAQqT,EAAU,SAAUI,GAC1B,IAAIC,EAAM/O,SAASsH,cAAc,OAEjCtJ,GAAQ8Q,EAAIpY,EAAc,CACxBiO,MAAOmK,EAAG9C,YACVtH,OAAQoK,EAAG7C,aACX+C,KAAMF,EAAGG,YAGX,GAAIb,EAAa,CACfW,EAAIX,YAAcA,EAGpBW,EAAIT,IAAMtN,EAQV+N,EAAItS,MAAMyS,QAAU,iBAAmB,cAAgB,eAAiB,yBAA2B,0BAA4B,4BAA8B,6BAA+B,qCAC5LJ,EAAGG,UAAY,GACfH,EAAGN,YAAYO,MAGnBI,aAAc,SAASA,IACrB9T,GAAQiQ,KAAKoD,SAAU,SAAUnS,GAC/B,IAAIjE,EAAOsF,GAAQrB,EAAS7F,GAC5B4F,GAASC,EAAS,CAChBoI,MAAOrM,EAAKqM,MACZD,OAAQpM,EAAKoM,SAEfnI,EAAQ0S,UAAY3W,EAAK0W,KACzB9Q,GAAW3B,EAAS7F,MAGxB6B,QAAS,SAASA,IAChB,IAAI2T,EAAYZ,KAAKY,UACjBI,EAAahB,KAAKgB,WAClBS,EAAczB,KAAKyB,YACvB,IAAIqC,EAAerC,EAAYpI,MAC3B0K,EAAgBtC,EAAYrI,OAChC,IAAIC,EAAQuH,EAAUvH,MAClBD,EAASwH,EAAUxH,OACvB,IAAIpE,EAAOyM,EAAYzM,KAAOgM,EAAWhM,KAAO4L,EAAU5L,KAC1D,IAAII,EAAMqM,EAAYrM,IAAM4L,EAAW5L,IAAMwL,EAAUxL,IAEvD,IAAK4K,KAAKK,SAAWL,KAAK4C,SAAU,CAClC,OAGF5R,GAASgP,KAAKmD,aAAcjT,GAAO,CACjCmJ,MAAOA,EACPD,OAAQA,GACPhD,GAAclG,GAAO,CACtBuG,YAAazB,EACb0B,YAAatB,GACZwL,MACH7Q,GAAQiQ,KAAKoD,SAAU,SAAUnS,GAC/B,IAAIjE,EAAOsF,GAAQrB,EAAS7F,GAC5B,IAAI4Y,EAAgBhX,EAAKqM,MACzB,IAAI4K,EAAiBjX,EAAKoM,OAC1B,IAAIa,EAAW+J,EACf,IAAI9J,EAAY+J,EAChB,IAAI7L,EAAQ,EAEZ,GAAI0L,EAAc,CAChB1L,EAAQ4L,EAAgBF,EACxB5J,EAAY6J,EAAgB3L,EAG9B,GAAI2L,GAAiB7J,EAAY+J,EAAgB,CAC/C7L,EAAQ6L,EAAiBF,EACzB9J,EAAW6J,EAAe1L,EAC1B8B,EAAY+J,EAGdjT,GAASC,EAAS,CAChBoI,MAAOY,EACPb,OAAQc,IAEVlJ,GAASC,EAAQiT,qBAAqB,OAAO,GAAIhU,GAAO,CACtDmJ,MAAOA,EAAQjB,EACfgB,OAAQA,EAAShB,GAChBhC,GAAclG,GAAO,CACtBuG,YAAazB,EAAOoD,EACpB1B,YAAatB,EAAMgD,GAClBwI,UAKLuD,GAAS,CACXC,KAAM,SAASA,IACb,IAAInT,EAAU+O,KAAK/O,QACfkC,EAAU6M,KAAK7M,QACfqN,EAAUR,KAAKQ,QAEnB,GAAI1Q,GAAWqD,EAAQrE,WAAY,CACjCgF,GAAY7C,EAAStF,EAAkBwH,EAAQrE,WAGjD,GAAIgB,GAAWqD,EAAQpE,UAAW,CAChC+E,GAAY7C,EAASvF,EAAiByH,EAAQpE,UAGhD,GAAIe,GAAWqD,EAAQnE,SAAU,CAC/B8E,GAAY7C,EAASxF,EAAgB0H,EAAQnE,SAG/C,GAAIc,GAAWqD,EAAQlE,MAAO,CAC5B6E,GAAY7C,EAASzF,EAAY2H,EAAQlE,MAG3C,GAAIa,GAAWqD,EAAQjE,MAAO,CAC5B4E,GAAY7C,EAAS7E,EAAY+G,EAAQjE,MAG3C4E,GAAY0M,EAAS3U,EAAoBmU,KAAKqE,YAAcrE,KAAKsE,UAAUF,KAAKpE,OAEhF,GAAI7M,EAAQnF,UAAYmF,EAAQjF,YAAa,CAC3C4F,GAAY0M,EAASrU,EAAa6T,KAAKuE,QAAUvE,KAAKwE,MAAMJ,KAAKpE,OAGnE,GAAI7M,EAAQ7E,yBAA0B,CACpCwF,GAAY0M,EAAS5U,EAAgBoU,KAAKyE,WAAazE,KAAK0E,SAASN,KAAKpE,OAG5ElM,GAAY7C,EAAQoS,cAAetX,EAAoBiU,KAAK2E,WAAa3E,KAAK4E,SAASR,KAAKpE,OAC5FlM,GAAY7C,EAAQoS,cAAerX,EAAkBgU,KAAK6E,UAAY7E,KAAK8E,QAAQV,KAAKpE,OAExF,GAAI7M,EAAQjG,WAAY,CACtB4G,GAAYlK,OAAQsC,EAAc8T,KAAK+E,SAAW/E,KAAKgF,OAAOZ,KAAKpE,SAGvEiF,OAAQ,SAASA,IACf,IAAIhU,EAAU+O,KAAK/O,QACfkC,EAAU6M,KAAK7M,QACfqN,EAAUR,KAAKQ,QAEnB,GAAI1Q,GAAWqD,EAAQrE,WAAY,CACjC0E,GAAevC,EAAStF,EAAkBwH,EAAQrE,WAGpD,GAAIgB,GAAWqD,EAAQpE,UAAW,CAChCyE,GAAevC,EAASvF,EAAiByH,EAAQpE,UAGnD,GAAIe,GAAWqD,EAAQnE,SAAU,CAC/BwE,GAAevC,EAASxF,EAAgB0H,EAAQnE,SAGlD,GAAIc,GAAWqD,EAAQlE,MAAO,CAC5BuE,GAAevC,EAASzF,EAAY2H,EAAQlE,MAG9C,GAAIa,GAAWqD,EAAQjE,MAAO,CAC5BsE,GAAevC,EAAS7E,EAAY+G,EAAQjE,MAG9CsE,GAAegN,EAAS3U,EAAoBmU,KAAKqE,aAEjD,GAAIlR,EAAQnF,UAAYmF,EAAQjF,YAAa,CAC3CsF,GAAegN,EAASrU,EAAa6T,KAAKuE,SAG5C,GAAIpR,EAAQ7E,yBAA0B,CACpCkF,GAAegN,EAAS5U,EAAgBoU,KAAKyE,YAG/CjR,GAAevC,EAAQoS,cAAetX,EAAoBiU,KAAK2E,YAC/DnR,GAAevC,EAAQoS,cAAerX,EAAkBgU,KAAK6E,WAE7D,GAAI1R,EAAQjG,WAAY,CACtBsG,GAAe5J,OAAQsC,EAAc8T,KAAK+E,aAK5CG,GAAW,CACbF,OAAQ,SAASA,IACf,IAAI7R,EAAU6M,KAAK7M,QACfoN,EAAYP,KAAKO,UACjBE,EAAgBT,KAAKS,cACzB,IAAI9R,EAAoBU,OAAO8D,EAAQxE,oBAAsB,IAC7D,IAAIC,EAAqBS,OAAO8D,EAAQvE,qBAAuB,IAE/D,GAAIoR,KAAK4C,UAAYnC,EAAcpH,OAAS1K,GAAqB8R,EAAcrH,QAAUxK,EAAoB,CAC3G,OAGF,IAAIwJ,EAAQmI,EAAUG,YAAcD,EAAcpH,MAElD,GAAIjB,IAAU,GAAKmI,EAAUI,eAAiBF,EAAcrH,OAAQ,CAClE,IAAI4H,EACJ,IAAIS,EAEJ,GAAItO,EAAQhG,QAAS,CACnB6T,EAAahB,KAAKmF,gBAClB1D,EAAczB,KAAKoF,iBAGrBpF,KAAKD,SAEL,GAAI5M,EAAQhG,QAAS,CACnB6S,KAAKqF,cAActV,GAAQiR,EAAY,SAAUsE,EAAGnd,GAClD6Y,EAAW7Y,GAAKmd,EAAIlN,KAEtB4H,KAAKuF,eAAexV,GAAQ0R,EAAa,SAAU6D,EAAGnd,GACpDsZ,EAAYtZ,GAAKmd,EAAIlN,QAK7BsM,SAAU,SAASA,IACjB,GAAI1E,KAAK4C,UAAY5C,KAAK7M,QAAQvG,WAAarB,EAAgB,CAC7D,OAGFyU,KAAKwF,YAAYnU,GAAS2O,KAAKyF,QAAS9a,GAAcW,EAAiBD,IAEzEmZ,MAAO,SAASA,EAAM3U,GACpB,IAAI6V,EAAQ1F,KAEZ,IAAI5H,EAAQ/I,OAAO2Q,KAAK7M,QAAQhF,iBAAmB,GACnD,IAAIwX,EAAQ,EAEZ,GAAI3F,KAAK4C,SAAU,CACjB,OAGF/S,EAAE+V,iBAEF,GAAI5F,KAAK6F,SAAU,CACjB,OAGF7F,KAAK6F,SAAW,KAChBC,WAAW,WACTJ,EAAMG,SAAW,OAChB,IAEH,GAAIhW,EAAEkW,OAAQ,CACZJ,EAAQ9V,EAAEkW,OAAS,EAAI,GAAK,OACvB,GAAIlW,EAAEmW,WAAY,CACvBL,GAAS9V,EAAEmW,WAAa,SACnB,GAAInW,EAAE0E,OAAQ,CACnBoR,EAAQ9V,EAAE0E,OAAS,EAAI,GAAK,EAG9ByL,KAAK9Q,MAAMyW,EAAQvN,EAAOvI,IAE5ByU,UAAW,SAASA,EAAUzU,GAC5B,GAAImQ,KAAK4C,SAAU,CACjB,OAGF,IAAIzP,EAAU6M,KAAK7M,QACf+D,EAAW8I,KAAK9I,SACpB,IAAI+O,EAEJ,GAAIpW,EAAEqW,eAAgB,CAEpBnW,GAAQF,EAAEqW,eAAgB,SAAUC,GAClCjP,EAASiP,EAAMC,YAAc5N,GAAW2N,SAErC,CAELjP,EAASrH,EAAEyH,WAAa,GAAKkB,GAAW3I,GAG1C,GAAIpH,OAAOwH,KAAKiH,GAAU9O,OAAS,GAAK+K,EAAQnF,UAAYmF,EAAQlF,YAAa,CAC/EgY,EAAS/b,MACJ,CACL+b,EAAS3T,GAAQzC,EAAE5H,OAAQkD,GAG7B,IAAKmB,EAAesE,KAAKqV,GAAS,CAChC,OAGF,GAAI7R,GAAc4L,KAAK/O,QAAStF,EAAkB,CAChD0a,cAAexW,EACfoW,OAAQA,MACH,MAAO,CACZ,OAIFpW,EAAE+V,iBACF5F,KAAKiG,OAASA,EACdjG,KAAKsG,SAAW,MAEhB,GAAIL,IAAWjc,EAAa,CAC1BgW,KAAKsG,SAAW,KAChB5U,GAASsO,KAAKyF,QAASxa,KAG3B2Z,SAAU,SAASA,EAAS/U,GAC1B,IAAIoW,EAASjG,KAAKiG,OAElB,GAAIjG,KAAK4C,WAAaqD,EAAQ,CAC5B,OAGF,IAAI/O,EAAW8I,KAAK9I,SACpBrH,EAAE+V,iBAEF,GAAIxR,GAAc4L,KAAK/O,QAASvF,EAAiB,CAC/C2a,cAAexW,EACfoW,OAAQA,MACH,MAAO,CACZ,OAGF,GAAIpW,EAAEqW,eAAgB,CACpBnW,GAAQF,EAAEqW,eAAgB,SAAUC,GAElCjW,GAAOgH,EAASiP,EAAMC,aAAe,GAAI5N,GAAW2N,EAAO,aAExD,CACLjW,GAAOgH,EAASrH,EAAEyH,WAAa,IAAM,GAAIkB,GAAW3I,EAAG,OAGzDmQ,KAAKuG,OAAO1W,IAEdiV,QAAS,SAASA,EAAQjV,GACxB,GAAImQ,KAAK4C,SAAU,CACjB,OAGF,IAAIqD,EAASjG,KAAKiG,OACd/O,EAAW8I,KAAK9I,SAEpB,GAAIrH,EAAEqW,eAAgB,CACpBnW,GAAQF,EAAEqW,eAAgB,SAAUC,UAC3BjP,EAASiP,EAAMC,kBAEnB,QACElP,EAASrH,EAAEyH,WAAa,GAGjC,IAAK2O,EAAQ,CACX,OAGFpW,EAAE+V,iBAEF,IAAKnd,OAAOwH,KAAKiH,GAAU9O,OAAQ,CACjC4X,KAAKiG,OAAS,GAGhB,GAAIjG,KAAKsG,SAAU,CACjBtG,KAAKsG,SAAW,MAChBrU,GAAY+N,KAAKyF,QAASxa,EAAa+U,KAAKK,SAAWL,KAAK7M,QAAQ7F,OAGtE8G,GAAc4L,KAAK/O,QAASxF,EAAgB,CAC1C4a,cAAexW,EACfoW,OAAQA,MAKVM,GAAS,CACXA,OAAQ,SAASA,EAAO1W,GACtB,IAAIsD,EAAU6M,KAAK7M,QACf6N,EAAahB,KAAKgB,WAClBP,EAAgBT,KAAKS,cACrBgB,EAAczB,KAAKyB,YACnBvK,EAAW8I,KAAK9I,SACpB,IAAI+O,EAASjG,KAAKiG,OAClB,IAAIlZ,EAAcoG,EAAQpG,YAC1B,IAAIiI,EAAOyM,EAAYzM,KACnBI,EAAMqM,EAAYrM,IAClBiE,EAAQoI,EAAYpI,MACpBD,EAASqI,EAAYrI,OACzB,IAAIoN,EAAQxR,EAAOqE,EACnB,IAAIoN,EAASrR,EAAMgE,EACnB,IAAIyI,EAAU,EACd,IAAIC,EAAS,EACb,IAAIvG,EAAWkF,EAAcpH,MAC7B,IAAIqC,EAAY+E,EAAcrH,OAC9B,IAAIsN,EAAa,KACjB,IAAItH,EAEJ,IAAKrS,GAAe8C,EAAE8W,SAAU,CAC9B5Z,EAAcsM,GAASD,EAASC,EAAQD,EAAS,EAGnD,GAAI4G,KAAKmB,QAAS,CAChBU,EAAUJ,EAAYI,QACtBC,EAASL,EAAYK,OACrBvG,EAAWsG,EAAUhR,KAAKwL,IAAIoE,EAAcpH,MAAO2H,EAAW3H,MAAO2H,EAAWhM,KAAOgM,EAAW3H,OAClGqC,EAAYoG,EAASjR,KAAKwL,IAAIoE,EAAcrH,OAAQ4H,EAAW5H,OAAQ4H,EAAW5L,IAAM4L,EAAW5H,QAGrG,IAAI/B,EAAUH,EAASzO,OAAOwH,KAAKiH,GAAU,IAC7C,IAAI0P,EAAQ,CACVC,EAAGxP,EAAQS,KAAOT,EAAQK,OAC1BoP,EAAGzP,EAAQW,KAAOX,EAAQO,QAG5B,IAAImP,EAAQ,SAASA,EAAMC,GACzB,OAAQA,GACN,KAAK7c,EACH,GAAIqc,EAAQI,EAAMC,EAAItL,EAAU,CAC9BqL,EAAMC,EAAItL,EAAWiL,EAGvB,MAEF,KAAKpc,EACH,GAAI4K,EAAO4R,EAAMC,EAAIhF,EAAS,CAC5B+E,EAAMC,EAAIhF,EAAU7M,EAGtB,MAEF,KAAK1K,EACH,GAAI8K,EAAMwR,EAAME,EAAIhF,EAAQ,CAC1B8E,EAAME,EAAIhF,EAAS1M,EAGrB,MAEF,KAAK/K,EACH,GAAIoc,EAASG,EAAME,EAAIpL,EAAW,CAChCkL,EAAME,EAAIpL,EAAY+K,EAGxB,MAEF,WAIJ,OAAQR,GAEN,KAAKlc,EACHiL,GAAQ4R,EAAMC,EACdzR,GAAOwR,EAAME,EACb,MAGF,KAAK3c,EACH,GAAIyc,EAAMC,GAAK,IAAML,GAASjL,GAAYxO,IAAgBqI,GAAO0M,GAAU2E,GAAU/K,IAAa,CAChGgL,EAAa,MACb,MAGFK,EAAM5c,GACNkP,GAASuN,EAAMC,EAEf,GAAIxN,EAAQ,EAAG,CACb4M,EAAS7b,EACTiP,GAASA,EACTrE,GAAQqE,EAGV,GAAItM,EAAa,CACfqM,EAASC,EAAQtM,EACjBqI,IAAQqM,EAAYrI,OAASA,GAAU,EAGzC,MAEF,KAAK9O,EACH,GAAIsc,EAAME,GAAK,IAAM1R,GAAO0M,GAAU/U,IAAgBiI,GAAQ6M,GAAW2E,GAASjL,IAAY,CAC5FmL,EAAa,MACb,MAGFK,EAAMzc,GACN8O,GAAUwN,EAAME,EAChB1R,GAAOwR,EAAME,EAEb,GAAI1N,EAAS,EAAG,CACd6M,EAAS5b,EACT+O,GAAUA,EACVhE,GAAOgE,EAGT,GAAIrM,EAAa,CACfsM,EAAQD,EAASrM,EACjBiI,IAASyM,EAAYpI,MAAQA,GAAS,EAGxC,MAEF,KAAKjP,EACH,GAAIwc,EAAMC,GAAK,IAAM7R,GAAQ6M,GAAW9U,IAAgBqI,GAAO0M,GAAU2E,GAAU/K,IAAa,CAC9FgL,EAAa,MACb,MAGFK,EAAM3c,GACNiP,GAASuN,EAAMC,EACf7R,GAAQ4R,EAAMC,EAEd,GAAIxN,EAAQ,EAAG,CACb4M,EAAS9b,EACTkP,GAASA,EACTrE,GAAQqE,EAGV,GAAItM,EAAa,CACfqM,EAASC,EAAQtM,EACjBqI,IAAQqM,EAAYrI,OAASA,GAAU,EAGzC,MAEF,KAAK/O,EACH,GAAIuc,EAAME,GAAK,IAAML,GAAU/K,GAAa3O,IAAgBiI,GAAQ6M,GAAW2E,GAASjL,IAAY,CAClGmL,EAAa,MACb,MAGFK,EAAM1c,GACN+O,GAAUwN,EAAME,EAEhB,GAAI1N,EAAS,EAAG,CACd6M,EAAS3b,EACT8O,GAAUA,EACVhE,GAAOgE,EAGT,GAAIrM,EAAa,CACfsM,EAAQD,EAASrM,EACjBiI,IAASyM,EAAYpI,MAAQA,GAAS,EAGxC,MAEF,KAAK9O,EACH,GAAIwC,EAAa,CACf,GAAI6Z,EAAME,GAAK,IAAM1R,GAAO0M,GAAU0E,GAASjL,GAAW,CACxDmL,EAAa,MACb,MAGFK,EAAMzc,GACN8O,GAAUwN,EAAME,EAChB1R,GAAOwR,EAAME,EACbzN,EAAQD,EAASrM,MACZ,CACLga,EAAMzc,GACNyc,EAAM5c,GAEN,GAAIyc,EAAMC,GAAK,EAAG,CAChB,GAAIL,EAAQjL,EAAU,CACpBlC,GAASuN,EAAMC,OACV,GAAID,EAAME,GAAK,GAAK1R,GAAO0M,EAAQ,CACxC4E,EAAa,WAEV,CACLrN,GAASuN,EAAMC,EAGjB,GAAID,EAAME,GAAK,EAAG,CAChB,GAAI1R,EAAM0M,EAAQ,CAChB1I,GAAUwN,EAAME,EAChB1R,GAAOwR,EAAME,OAEV,CACL1N,GAAUwN,EAAME,EAChB1R,GAAOwR,EAAME,GAIjB,GAAIzN,EAAQ,GAAKD,EAAS,EAAG,CAC3B6M,EAASvb,EACT0O,GAAUA,EACVC,GAASA,EACTjE,GAAOgE,EACPpE,GAAQqE,OACH,GAAIA,EAAQ,EAAG,CACpB4M,EAASzb,EACT6O,GAASA,EACTrE,GAAQqE,OACH,GAAID,EAAS,EAAG,CACrB6M,EAASxb,EACT2O,GAAUA,EACVhE,GAAOgE,EAGT,MAEF,KAAK5O,EACH,GAAIuC,EAAa,CACf,GAAI6Z,EAAME,GAAK,IAAM1R,GAAO0M,GAAU9M,GAAQ6M,GAAU,CACtD6E,EAAa,MACb,MAGFK,EAAMzc,GACN8O,GAAUwN,EAAME,EAChB1R,GAAOwR,EAAME,EACbzN,EAAQD,EAASrM,EACjBiI,GAAQyM,EAAYpI,MAAQA,MACvB,CACL0N,EAAMzc,GACNyc,EAAM3c,GAEN,GAAIwc,EAAMC,GAAK,EAAG,CAChB,GAAI7R,EAAO6M,EAAS,CAClBxI,GAASuN,EAAMC,EACf7R,GAAQ4R,EAAMC,OACT,GAAID,EAAME,GAAK,GAAK1R,GAAO0M,EAAQ,CACxC4E,EAAa,WAEV,CACLrN,GAASuN,EAAMC,EACf7R,GAAQ4R,EAAMC,EAGhB,GAAID,EAAME,GAAK,EAAG,CAChB,GAAI1R,EAAM0M,EAAQ,CAChB1I,GAAUwN,EAAME,EAChB1R,GAAOwR,EAAME,OAEV,CACL1N,GAAUwN,EAAME,EAChB1R,GAAOwR,EAAME,GAIjB,GAAIzN,EAAQ,GAAKD,EAAS,EAAG,CAC3B6M,EAASxb,EACT2O,GAAUA,EACVC,GAASA,EACTjE,GAAOgE,EACPpE,GAAQqE,OACH,GAAIA,EAAQ,EAAG,CACpB4M,EAAS1b,EACT8O,GAASA,EACTrE,GAAQqE,OACH,GAAID,EAAS,EAAG,CACrB6M,EAASvb,EACT0O,GAAUA,EACVhE,GAAOgE,EAGT,MAEF,KAAK1O,EACH,GAAIqC,EAAa,CACf,GAAI6Z,EAAMC,GAAK,IAAM7R,GAAQ6M,GAAW4E,GAAU/K,GAAY,CAC5DgL,EAAa,MACb,MAGFK,EAAM3c,GACNiP,GAASuN,EAAMC,EACf7R,GAAQ4R,EAAMC,EACdzN,EAASC,EAAQtM,MACZ,CACLga,EAAM1c,GACN0c,EAAM3c,GAEN,GAAIwc,EAAMC,GAAK,EAAG,CAChB,GAAI7R,EAAO6M,EAAS,CAClBxI,GAASuN,EAAMC,EACf7R,GAAQ4R,EAAMC,OACT,GAAID,EAAME,GAAK,GAAKL,GAAU/K,EAAW,CAC9CgL,EAAa,WAEV,CACLrN,GAASuN,EAAMC,EACf7R,GAAQ4R,EAAMC,EAGhB,GAAID,EAAME,GAAK,EAAG,CAChB,GAAIL,EAAS/K,EAAW,CACtBtC,GAAUwN,EAAME,OAEb,CACL1N,GAAUwN,EAAME,GAIpB,GAAIzN,EAAQ,GAAKD,EAAS,EAAG,CAC3B6M,EAAS1b,EACT6O,GAAUA,EACVC,GAASA,EACTjE,GAAOgE,EACPpE,GAAQqE,OACH,GAAIA,EAAQ,EAAG,CACpB4M,EAASxb,EACT4O,GAASA,EACTrE,GAAQqE,OACH,GAAID,EAAS,EAAG,CACrB6M,EAASzb,EACT4O,GAAUA,EACVhE,GAAOgE,EAGT,MAEF,KAAK3O,EACH,GAAIsC,EAAa,CACf,GAAI6Z,EAAMC,GAAK,IAAML,GAASjL,GAAYkL,GAAU/K,GAAY,CAC9DgL,EAAa,MACb,MAGFK,EAAM5c,GACNkP,GAASuN,EAAMC,EACfzN,EAASC,EAAQtM,MACZ,CACLga,EAAM1c,GACN0c,EAAM5c,GAEN,GAAIyc,EAAMC,GAAK,EAAG,CAChB,GAAIL,EAAQjL,EAAU,CACpBlC,GAASuN,EAAMC,OACV,GAAID,EAAME,GAAK,GAAKL,GAAU/K,EAAW,CAC9CgL,EAAa,WAEV,CACLrN,GAASuN,EAAMC,EAGjB,GAAID,EAAME,GAAK,EAAG,CAChB,GAAIL,EAAS/K,EAAW,CACtBtC,GAAUwN,EAAME,OAEb,CACL1N,GAAUwN,EAAME,GAIpB,GAAIzN,EAAQ,GAAKD,EAAS,EAAG,CAC3B6M,EAASzb,EACT4O,GAAUA,EACVC,GAASA,EACTjE,GAAOgE,EACPpE,GAAQqE,OACH,GAAIA,EAAQ,EAAG,CACpB4M,EAASvb,EACT2O,GAASA,EACTrE,GAAQqE,OACH,GAAID,EAAS,EAAG,CACrB6M,EAAS1b,EACT6O,GAAUA,EACVhE,GAAOgE,EAGT,MAGF,KAAKnP,EACH+V,KAAKiH,KAAKL,EAAMC,EAAGD,EAAME,GACzBJ,EAAa,MACb,MAGF,KAAKxc,EACH8V,KAAK9Q,KAAK+H,GAAgBC,GAAWrH,GACrC6W,EAAa,MACb,MAGF,KAAK1c,EACH,IAAK4c,EAAMC,IAAMD,EAAME,EAAG,CACxBJ,EAAa,MACb,MAGFtH,EAASvK,GAAUmL,KAAKQ,SACxBxL,EAAOqC,EAAQK,OAAS0H,EAAOpK,KAC/BI,EAAMiC,EAAQO,OAASwH,EAAOhK,IAC9BiE,EAAQoI,EAAY7F,SACpBxC,EAASqI,EAAY3F,UAErB,GAAI8K,EAAMC,EAAI,EAAG,CACfZ,EAASW,EAAME,EAAI,EAAIrc,EAAoBF,OACtC,GAAIqc,EAAMC,EAAI,EAAG,CACtB7R,GAAQqE,EACR4M,EAASW,EAAME,EAAI,EAAIpc,EAAoBF,EAG7C,GAAIoc,EAAME,EAAI,EAAG,CACf1R,GAAOgE,EAIT,IAAK4G,KAAKK,QAAS,CACjBvO,GAAYkO,KAAK2C,QAAS7X,GAC1BkV,KAAKK,QAAU,KAEf,GAAIL,KAAKmB,QAAS,CAChBnB,KAAKqC,aAAa,KAAM,OAI5B,MAEF,SAGF,GAAIqE,EAAY,CACdjF,EAAYpI,MAAQA,EACpBoI,EAAYrI,OAASA,EACrBqI,EAAYzM,KAAOA,EACnByM,EAAYrM,IAAMA,EAClB4K,KAAKiG,OAASA,EACdjG,KAAKM,gBAIPvQ,GAAQmH,EAAU,SAAUgQ,GAC1BA,EAAExP,OAASwP,EAAEpP,KACboP,EAAEtP,OAASsP,EAAElP,SAKfmP,GAAU,CAEZlY,KAAM,SAASA,IACb,GAAI+Q,KAAKnR,QAAUmR,KAAKK,UAAYL,KAAK4C,SAAU,CACjD5C,KAAKK,QAAU,KACfL,KAAKqC,aAAa,KAAM,MAExB,GAAIrC,KAAK7M,QAAQ7F,MAAO,CACtBoE,GAASsO,KAAKyF,QAASxa,GAGzB6G,GAAYkO,KAAK2C,QAAS7X,GAC1BkV,KAAKuF,eAAevF,KAAKuC,oBAG3B,OAAOvC,MAGToH,MAAO,SAASA,IACd,GAAIpH,KAAKnR,QAAUmR,KAAK4C,SAAU,CAChC5C,KAAKY,UAAY1Q,GAAO,GAAI8P,KAAKqB,kBACjCrB,KAAKgB,WAAa9Q,GAAO,GAAI8P,KAAKsB,mBAClCtB,KAAKyB,YAAcvR,GAAO,GAAI8P,KAAKuC,oBACnCvC,KAAKI,eAEL,GAAIJ,KAAKK,QAAS,CAChBL,KAAKM,iBAIT,OAAON,MAGTqH,MAAO,SAASA,IACd,GAAIrH,KAAKK,UAAYL,KAAK4C,SAAU,CAClC1S,GAAO8P,KAAKyB,YAAa,CACvBzM,KAAM,EACNI,IAAK,EACLiE,MAAO,EACPD,OAAQ,IAEV4G,KAAKK,QAAU,MACfL,KAAKM,gBACLN,KAAKoB,YAAY,KAAM,MAEvBpB,KAAKI,eACLtO,GAAYkO,KAAKyF,QAASxa,GAC1ByG,GAASsO,KAAK2C,QAAS7X,GAGzB,OAAOkV,MASThO,QAAS,SAASA,EAAQ0D,GACxB,IAAI4R,EAAclX,UAAUhI,OAAS,GAAKgI,UAAU,KAAOO,UAAYP,UAAU,GAAK,MAEtF,IAAK4P,KAAK4C,UAAYlN,EAAK,CACzB,GAAIsK,KAAKuH,MAAO,CACdvH,KAAK/O,QAAQ+R,IAAMtN,EAGrB,GAAI4R,EAAa,CACftH,KAAKtK,IAAMA,EACXsK,KAAK5F,MAAM4I,IAAMtN,EAEjB,GAAIsK,KAAKnR,MAAO,CACdmR,KAAKmD,aAAaH,IAAMtN,EACxB3F,GAAQiQ,KAAKoD,SAAU,SAAUnS,GAC/BA,EAAQiT,qBAAqB,OAAO,GAAGlB,IAAMtN,SAG5C,CACL,GAAIsK,KAAKuH,MAAO,CACdvH,KAAKwH,SAAW,KAGlBxH,KAAK7M,QAAQnG,KAAO,KACpBgT,KAAKyH,WACLzH,KAAK0H,KAAKhS,IAId,OAAOsK,MAGT2H,OAAQ,SAASA,IACf,GAAI3H,KAAKnR,OAASmR,KAAK4C,SAAU,CAC/B5C,KAAK4C,SAAW,MAChB9Q,GAAYkO,KAAKQ,QAAS3V,GAG5B,OAAOmV,MAGT4H,QAAS,SAASA,IAChB,GAAI5H,KAAKnR,QAAUmR,KAAK4C,SAAU,CAChC5C,KAAK4C,SAAW,KAChBlR,GAASsO,KAAKQ,QAAS3V,GAGzB,OAAOmV,MAOT6H,QAAS,SAASA,IAChB,IAAI5W,EAAU+O,KAAK/O,QAEnB,IAAKA,EAAQnH,GAAY,CACvB,OAAOkW,KAGT/O,EAAQnH,GAAa6G,UAErB,GAAIqP,KAAKuH,OAASvH,KAAKwH,SAAU,CAC/BvW,EAAQ+R,IAAMhD,KAAK8H,YAGrB9H,KAAKyH,WACL,OAAOzH,MASTiH,KAAM,SAASA,EAAKc,GAClB,IAAIC,EAAU5X,UAAUhI,OAAS,GAAKgI,UAAU,KAAOO,UAAYP,UAAU,GAAK2X,EAClF,IAAIE,EAAmBjI,KAAKgB,WACxBhM,EAAOiT,EAAiBjT,KACxBI,EAAM6S,EAAiB7S,IAC3B,OAAO4K,KAAKkI,OAAO1Y,GAAYuY,GAAWA,EAAU/S,EAAO3F,OAAO0Y,GAAUvY,GAAYwY,GAAWA,EAAU5S,EAAM/F,OAAO2Y,KAS5HE,OAAQ,SAASA,EAAOrB,GACtB,IAAIC,EAAI1W,UAAUhI,OAAS,GAAKgI,UAAU,KAAOO,UAAYP,UAAU,GAAKyW,EAC5E,IAAI7F,EAAahB,KAAKgB,WACtB,IAAIiB,EAAU,MACd4E,EAAIxX,OAAOwX,GACXC,EAAIzX,OAAOyX,GAEX,GAAI9G,KAAKnR,QAAUmR,KAAK4C,UAAY5C,KAAK7M,QAAQtF,QAAS,CACxD,GAAIyB,GAASuX,GAAI,CACf7F,EAAWhM,KAAO6R,EAClB5E,EAAU,KAGZ,GAAI3S,GAASwX,GAAI,CACf9F,EAAW5L,IAAM0R,EACjB7E,EAAU,KAGZ,GAAIA,EAAS,CACXjC,KAAKI,aAAa,OAItB,OAAOJ,MAST9Q,KAAM,SAASA,EAAKkJ,EAAO+P,GACzB,IAAInH,EAAahB,KAAKgB,WACtB5I,EAAQ/I,OAAO+I,GAEf,GAAIA,EAAQ,EAAG,CACbA,EAAQ,GAAK,EAAIA,OACZ,CACLA,EAAQ,EAAIA,EAGd,OAAO4H,KAAKoI,OAAOpH,EAAW3H,MAAQjB,EAAQ4I,EAAWtG,aAAc,KAAMyN,IAU/EC,OAAQ,SAASA,EAAOhQ,EAAOiQ,EAAOF,GACpC,IAAIhV,EAAU6M,KAAK7M,QACf6N,EAAahB,KAAKgB,WACtB,IAAI3H,EAAQ2H,EAAW3H,MACnBD,EAAS4H,EAAW5H,OACpBsB,EAAesG,EAAWtG,aAC1BE,EAAgBoG,EAAWpG,cAC/BxC,EAAQ/I,OAAO+I,GAEf,GAAIA,GAAS,GAAK4H,KAAKnR,QAAUmR,KAAK4C,UAAYzP,EAAQnF,SAAU,CAClE,IAAIiM,EAAWS,EAAetC,EAC9B,IAAI8B,EAAYU,EAAgBxC,EAEhC,GAAIhE,GAAc4L,KAAK/O,QAAS7E,EAAY,CAC1CgM,MAAOA,EACPkQ,SAAUjP,EAAQqB,EAClB2L,cAAe8B,MACV,MAAO,CACZ,OAAOnI,KAGT,GAAImI,EAAgB,CAClB,IAAIjR,EAAW8I,KAAK9I,SACpB,IAAIkI,EAASvK,GAAUmL,KAAKQ,SAC5B,IAAIhT,EAAS0J,GAAYzO,OAAOwH,KAAKiH,GAAU9O,OAAS0Q,GAAkB5B,GAAY,CACpFyB,MAAOwP,EAAexP,MACtBC,MAAOuP,EAAevP,OAGxBoI,EAAWhM,OAASiF,EAAWZ,KAAW7L,EAAOmL,MAAQyG,EAAOpK,KAAOgM,EAAWhM,MAAQqE,GAC1F2H,EAAW5L,MAAQ8E,EAAYd,KAAY5L,EAAOoL,MAAQwG,EAAOhK,IAAM4L,EAAW5L,KAAOgE,QACpF,GAAIzJ,GAAc0Y,IAAU/Y,GAAS+Y,EAAMxB,IAAMvX,GAAS+Y,EAAMvB,GAAI,CACzE9F,EAAWhM,OAASiF,EAAWZ,KAAWgP,EAAMxB,EAAI7F,EAAWhM,MAAQqE,GACvE2H,EAAW5L,MAAQ8E,EAAYd,KAAYiP,EAAMvB,EAAI9F,EAAW5L,KAAOgE,OAClE,CAEL4H,EAAWhM,OAASiF,EAAWZ,GAAS,EACxC2H,EAAW5L,MAAQ8E,EAAYd,GAAU,EAG3C4H,EAAW3H,MAAQY,EACnB+G,EAAW5H,OAASc,EACpB8F,KAAKI,aAAa,MAGpB,OAAOJ,MAQT1J,OAAQ,SAASA,EAAOoD,GACtB,OAAOsG,KAAKuI,UAAUvI,KAAKY,UAAUtK,QAAU,GAAKjH,OAAOqK,KAQ7D6O,SAAU,SAASA,EAAS7O,GAC1BA,EAASrK,OAAOqK,GAEhB,GAAIpK,GAASoK,IAAWsG,KAAKnR,QAAUmR,KAAK4C,UAAY5C,KAAK7M,QAAQrF,UAAW,CAC9EkS,KAAKY,UAAUtK,OAASoD,EAAS,IACjCsG,KAAKI,aAAa,KAAM,MAG1B,OAAOJ,MAQTzJ,OAAQ,SAASA,EAAOiS,GACtB,IAAIhS,EAASwJ,KAAKY,UAAUpK,OAC5B,OAAOwJ,KAAKhD,MAAMwL,EAASlZ,GAASkH,GAAUA,EAAS,IAQzDA,OAAQ,SAASA,EAAOiS,GACtB,IAAIlS,EAASyJ,KAAKY,UAAUrK,OAC5B,OAAOyJ,KAAKhD,MAAM1N,GAASiH,GAAUA,EAAS,EAAGkS,IASnDzL,MAAO,SAASA,EAAMzG,GACpB,IAAIC,EAASpG,UAAUhI,OAAS,GAAKgI,UAAU,KAAOO,UAAYP,UAAU,GAAKmG,EACjF,IAAIqK,EAAYZ,KAAKY,UACrB,IAAIsB,EAAc,MAClB3L,EAASlH,OAAOkH,GAChBC,EAASnH,OAAOmH,GAEhB,GAAIwJ,KAAKnR,QAAUmR,KAAK4C,UAAY5C,KAAK7M,QAAQpF,SAAU,CACzD,GAAIuB,GAASiH,GAAS,CACpBqK,EAAUrK,OAASA,EACnB2L,EAAc,KAGhB,GAAI5S,GAASkH,GAAS,CACpBoK,EAAUpK,OAASA,EACnB0L,EAAc,KAGhB,GAAIA,EAAa,CACflC,KAAKI,aAAa,KAAM,OAI5B,OAAOJ,MAQT1N,QAAS,SAASoW,IAChB,IAAIC,EAAUvY,UAAUhI,OAAS,GAAKgI,UAAU,KAAOO,UAAYP,UAAU,GAAK,MAClF,IAAI+C,EAAU6M,KAAK7M,QACfyN,EAAYZ,KAAKY,UACjBI,EAAahB,KAAKgB,WAClBS,EAAczB,KAAKyB,YACvB,IAAIzU,EAEJ,GAAIgT,KAAKnR,OAASmR,KAAKK,QAAS,CAC9BrT,EAAO,CACL6Z,EAAGpF,EAAYzM,KAAOgM,EAAWhM,KACjC8R,EAAGrF,EAAYrM,IAAM4L,EAAW5L,IAChCiE,MAAOoI,EAAYpI,MACnBD,OAAQqI,EAAYrI,QAEtB,IAAIhB,EAAQwI,EAAUvH,MAAQuH,EAAUlG,aACxC3K,GAAQ/C,EAAM,SAAUsY,EAAGnd,GACzB6E,EAAK7E,GAAKmd,EAAIlN,IAGhB,GAAIuQ,EAAS,CAGX,IAAIlC,EAAS5V,KAAKC,MAAM9D,EAAK8Z,EAAI9Z,EAAKoM,QACtC,IAAIoN,EAAQ3V,KAAKC,MAAM9D,EAAK6Z,EAAI7Z,EAAKqM,OACrCrM,EAAK6Z,EAAIhW,KAAKC,MAAM9D,EAAK6Z,GACzB7Z,EAAK8Z,EAAIjW,KAAKC,MAAM9D,EAAK8Z,GACzB9Z,EAAKqM,MAAQmN,EAAQxZ,EAAK6Z,EAC1B7Z,EAAKoM,OAASqN,EAASzZ,EAAK8Z,OAEzB,CACL9Z,EAAO,CACL6Z,EAAG,EACHC,EAAG,EACHzN,MAAO,EACPD,OAAQ,GAIZ,GAAIjG,EAAQrF,UAAW,CACrBd,EAAKsJ,OAASsK,EAAUtK,QAAU,EAGpC,GAAInD,EAAQpF,SAAU,CACpBf,EAAKuJ,OAASqK,EAAUrK,QAAU,EAClCvJ,EAAKwJ,OAASoK,EAAUpK,QAAU,EAGpC,OAAOxJ,GAQT0F,QAAS,SAASkW,EAAW5b,GAC3B,IAAImG,EAAU6M,KAAK7M,QACfyN,EAAYZ,KAAKY,UACjBI,EAAahB,KAAKgB,WACtB,IAAIS,EAAc,GAElB,GAAIzB,KAAKnR,QAAUmR,KAAK4C,UAAYjT,GAAc3C,GAAO,CACvD,IAAIkV,EAAc,MAElB,GAAI/O,EAAQrF,UAAW,CACrB,GAAIwB,GAAStC,EAAKsJ,SAAWtJ,EAAKsJ,SAAWsK,EAAUtK,OAAQ,CAC7DsK,EAAUtK,OAAStJ,EAAKsJ,OACxB4L,EAAc,MAIlB,GAAI/O,EAAQpF,SAAU,CACpB,GAAIuB,GAAStC,EAAKuJ,SAAWvJ,EAAKuJ,SAAWqK,EAAUrK,OAAQ,CAC7DqK,EAAUrK,OAASvJ,EAAKuJ,OACxB2L,EAAc,KAGhB,GAAI5S,GAAStC,EAAKwJ,SAAWxJ,EAAKwJ,SAAWoK,EAAUpK,OAAQ,CAC7DoK,EAAUpK,OAASxJ,EAAKwJ,OACxB0L,EAAc,MAIlB,GAAIA,EAAa,CACflC,KAAKI,aAAa,KAAM,MAG1B,IAAIhI,EAAQwI,EAAUvH,MAAQuH,EAAUlG,aAExC,GAAIpL,GAAStC,EAAK6Z,GAAI,CACpBpF,EAAYzM,KAAOhI,EAAK6Z,EAAIzO,EAAQ4I,EAAWhM,KAGjD,GAAI1F,GAAStC,EAAK8Z,GAAI,CACpBrF,EAAYrM,IAAMpI,EAAK8Z,EAAI1O,EAAQ4I,EAAW5L,IAGhD,GAAI9F,GAAStC,EAAKqM,OAAQ,CACxBoI,EAAYpI,MAAQrM,EAAKqM,MAAQjB,EAGnC,GAAI9I,GAAStC,EAAKoM,QAAS,CACzBqI,EAAYrI,OAASpM,EAAKoM,OAAShB,EAGrC4H,KAAKuF,eAAe9D,GAGtB,OAAOzB,MAOT6I,iBAAkB,SAASA,IACzB,OAAO7I,KAAKnR,MAAQqB,GAAO,GAAI8P,KAAKS,eAAiB,IAOvDqI,aAAc,SAASA,IACrB,OAAO9I,KAAK+I,MAAQ7Y,GAAO,GAAI8P,KAAKY,WAAa,IAOnDuE,cAAe,SAASA,IACtB,IAAInE,EAAahB,KAAKgB,WACtB,IAAIhU,EAAO,GAEX,GAAIgT,KAAKnR,MAAO,CACdkB,GAAQ,CAAC,OAAQ,MAAO,QAAS,SAAU,eAAgB,iBAAkB,SAAUuV,GACrFtY,EAAKsY,GAAKtE,EAAWsE,KAIzB,OAAOtY,GAQTqY,cAAe,SAASA,EAAcrY,GACpC,IAAIgU,EAAahB,KAAKgB,WACtB,IAAIjU,EAAciU,EAAWjU,YAE7B,GAAIiT,KAAKnR,QAAUmR,KAAK4C,UAAYjT,GAAc3C,GAAO,CACvD,GAAIsC,GAAStC,EAAKgI,MAAO,CACvBgM,EAAWhM,KAAOhI,EAAKgI,KAGzB,GAAI1F,GAAStC,EAAKoI,KAAM,CACtB4L,EAAW5L,IAAMpI,EAAKoI,IAGxB,GAAI9F,GAAStC,EAAKqM,OAAQ,CACxB2H,EAAW3H,MAAQrM,EAAKqM,MACxB2H,EAAW5H,OAASpM,EAAKqM,MAAQtM,OAC5B,GAAIuC,GAAStC,EAAKoM,QAAS,CAChC4H,EAAW5H,OAASpM,EAAKoM,OACzB4H,EAAW3H,MAAQrM,EAAKoM,OAASrM,EAGnCiT,KAAKI,aAAa,MAGpB,OAAOJ,MAOToF,eAAgB,SAASA,IACvB,IAAI3D,EAAczB,KAAKyB,YACvB,IAAIzU,EAEJ,GAAIgT,KAAKnR,OAASmR,KAAKK,QAAS,CAC9BrT,EAAO,CACLgI,KAAMyM,EAAYzM,KAClBI,IAAKqM,EAAYrM,IACjBiE,MAAOoI,EAAYpI,MACnBD,OAAQqI,EAAYrI,QAIxB,OAAOpM,GAAQ,IAQjBuY,eAAgB,SAASA,EAAevY,GACtC,IAAIyU,EAAczB,KAAKyB,YACvB,IAAI1U,EAAciT,KAAK7M,QAAQpG,YAC/B,IAAIic,EACJ,IAAIC,EAEJ,GAAIjJ,KAAKnR,OAASmR,KAAKK,UAAYL,KAAK4C,UAAYjT,GAAc3C,GAAO,CACvE,GAAIsC,GAAStC,EAAKgI,MAAO,CACvByM,EAAYzM,KAAOhI,EAAKgI,KAG1B,GAAI1F,GAAStC,EAAKoI,KAAM,CACtBqM,EAAYrM,IAAMpI,EAAKoI,IAGzB,GAAI9F,GAAStC,EAAKqM,QAAUrM,EAAKqM,QAAUoI,EAAYpI,MAAO,CAC5D2P,EAAe,KACfvH,EAAYpI,MAAQrM,EAAKqM,MAG3B,GAAI/J,GAAStC,EAAKoM,SAAWpM,EAAKoM,SAAWqI,EAAYrI,OAAQ,CAC/D6P,EAAgB,KAChBxH,EAAYrI,OAASpM,EAAKoM,OAG5B,GAAIrM,EAAa,CACf,GAAIic,EAAc,CAChBvH,EAAYrI,OAASqI,EAAYpI,MAAQtM,OACpC,GAAIkc,EAAe,CACxBxH,EAAYpI,MAAQoI,EAAYrI,OAASrM,GAI7CiT,KAAKM,gBAGP,OAAON,MAQTkJ,iBAAkB,SAASA,IACzB,IAAI/V,EAAU/C,UAAUhI,OAAS,GAAKgI,UAAU,KAAOO,UAAYP,UAAU,GAAK,GAElF,IAAK4P,KAAKnR,QAAUjF,OAAOuf,kBAAmB,CAC5C,OAAO,KAGT,IAAInI,EAAahB,KAAKgB,WACtB,IAAIoI,EAASjP,GAAgB6F,KAAK5F,MAAO4F,KAAKY,UAAWI,EAAY7N,GAErE,IAAK6M,KAAKK,QAAS,CACjB,OAAO+I,EAGT,IAAIC,EAAgBrJ,KAAK1N,UACrBgX,EAAWD,EAAcxC,EACzB0C,EAAWF,EAAcvC,EACzB0C,EAAeH,EAAchQ,MAC7BoQ,EAAgBJ,EAAcjQ,OAElC,IAAIhB,EAAQgR,EAAO/P,MAAQxI,KAAKuM,MAAM4D,EAAWtG,cAEjD,GAAItC,IAAU,EAAG,CACfkR,GAAYlR,EACZmR,GAAYnR,EACZoR,GAAgBpR,EAChBqR,GAAiBrR,EAGnB,IAAIrL,EAAcyc,EAAeC,EACjC,IAAItN,EAAWjD,GAAiB,CAC9BnM,YAAaA,EACbsM,MAAOlG,EAAQoI,UAAYC,SAC3BpC,OAAQjG,EAAQuI,WAAaF,WAE/B,IAAIY,EAAWlD,GAAiB,CAC9BnM,YAAaA,EACbsM,MAAOlG,EAAQyI,UAAY,EAC3BxC,OAAQjG,EAAQ2I,WAAa,GAC5B,SAEH,IAAI4F,EAAoBxI,GAAiB,CACvCnM,YAAaA,EACbsM,MAAOlG,EAAQkG,QAAUjB,IAAU,EAAIgR,EAAO/P,MAAQmQ,GACtDpQ,OAAQjG,EAAQiG,SAAWhB,IAAU,EAAIgR,EAAOhQ,OAASqQ,KAEvDpQ,EAAQqI,EAAkBrI,MAC1BD,EAASsI,EAAkBtI,OAE/BC,EAAQxI,KAAKwL,IAAIF,EAAS9C,MAAOxI,KAAKyL,IAAIF,EAAS/C,MAAOA,IAC1DD,EAASvI,KAAKwL,IAAIF,EAAS/C,OAAQvI,KAAKyL,IAAIF,EAAShD,OAAQA,IAC7D,IAAI2C,EAASrH,SAASsH,cAAc,UACpC,IAAIC,EAAUF,EAAOG,WAAW,MAChCH,EAAO1C,MAAQ5I,GAAuB4I,GACtC0C,EAAO3C,OAAS3I,GAAuB2I,GACvC6C,EAAQW,UAAYzJ,EAAQ8H,WAAa,cACzCgB,EAAQY,SAAS,EAAG,EAAGxD,EAAOD,GAC9B,IAAIsQ,EAAwBvW,EAAQgI,sBAChCA,EAAwBuO,SAA+B,EAAI,KAAOA,EAClErO,EAAwBlI,EAAQkI,sBACpCY,EAAQd,sBAAwBA,EAEhC,GAAIE,EAAuB,CACzBY,EAAQZ,sBAAwBA,EAIlC,IAAIsO,EAAcP,EAAO/P,MACzB,IAAIuQ,EAAeR,EAAOhQ,OAE1B,IAAIyQ,EAAOP,EACX,IAAIQ,EAAOP,EACX,IAAIQ,EACJ,IAAIC,EAEJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EACJ,IAAIC,EAEJ,GAAIP,IAASL,GAAgBK,EAAOF,EAAa,CAC/CE,EAAO,EACPE,EAAW,EACXE,EAAO,EACPE,EAAW,OACN,GAAIN,GAAQ,EAAG,CACpBI,GAAQJ,EACRA,EAAO,EACPE,EAAWlZ,KAAKwL,IAAIsN,EAAaH,EAAeK,GAChDM,EAAWJ,OACN,GAAIF,GAAQF,EAAa,CAC9BM,EAAO,EACPF,EAAWlZ,KAAKwL,IAAImN,EAAcG,EAAcE,GAChDM,EAAWJ,EAGb,GAAIA,GAAY,GAAKD,IAASL,GAAiBK,EAAOF,EAAc,CAClEE,EAAO,EACPE,EAAY,EACZE,EAAO,EACPE,EAAY,OACP,GAAIN,GAAQ,EAAG,CACpBI,GAAQJ,EACRA,EAAO,EACPE,EAAYnZ,KAAKwL,IAAIuN,EAAcH,EAAgBK,GACnDM,EAAYJ,OACP,GAAIF,GAAQF,EAAc,CAC/BM,EAAO,EACPF,EAAYnZ,KAAKwL,IAAIoN,EAAeG,EAAeE,GACnDM,EAAYJ,EAGd,IAAIrN,EAAS,CAACkN,EAAMC,EAAMC,EAAUC,GAEpC,GAAIG,EAAW,GAAKC,EAAY,EAAG,CACjC,IAAIpN,EAAQ3D,EAAQmQ,EACpB7M,EAAO/F,KAAKqT,EAAOjN,EAAOkN,EAAOlN,EAAOmN,EAAWnN,EAAOoN,EAAYpN,GAKxEf,EAAQgB,UAAU9I,MAAM8H,EAAS,CAACmN,GAAQxe,OAAO7B,EAAmB4T,EAAOO,IAAI,SAAUC,GACvF,OAAOtM,KAAKuM,MAAM3M,GAAuB0M,SAE3C,OAAOpB,GAQTsO,eAAgB,SAASA,EAAetd,GACtC,IAAIoG,EAAU6M,KAAK7M,QAEnB,IAAK6M,KAAK4C,WAAapT,GAAYzC,GAAc,CAE/CoG,EAAQpG,YAAc8D,KAAKyL,IAAI,EAAGvP,IAAgBD,IAElD,GAAIkT,KAAKnR,MAAO,CACdmR,KAAKG,cAEL,GAAIH,KAAKK,QAAS,CAChBL,KAAKM,kBAKX,OAAON,MAQTwF,YAAa,SAASA,EAAY8E,GAChC,IAAInX,EAAU6M,KAAK7M,QACfsS,EAAUzF,KAAKyF,QACf/C,EAAO1C,KAAK0C,KAEhB,GAAI1C,KAAKnR,QAAUmR,KAAK4C,SAAU,CAChC,IAAI2H,EAAYD,IAASjf,EACzB,IAAIwC,EAAUsF,EAAQtF,SAAWyc,IAAShf,EAC1Cgf,EAAOC,GAAa1c,EAAUyc,EAAO/e,EACrC4H,EAAQvG,SAAW0d,EACnB5X,GAAQ+S,EAASta,EAAamf,GAC9BrY,GAAYwT,EAAS9a,EAAY4f,GACjCtY,GAAYwT,EAASva,EAAY2C,GAEjC,IAAKsF,EAAQ/E,eAAgB,CAE3BsE,GAAQgQ,EAAMvX,EAAamf,GAC3BrY,GAAYyQ,EAAM/X,EAAY4f,GAC9BtY,GAAYyQ,EAAMxX,EAAY2C,IAIlC,OAAOmS,OAIPwK,GAAiB3gB,EAAO4gB,QAExBA,GAEJ,WAME,SAASA,EAAQxZ,GACf,IAAIkC,EAAU/C,UAAUhI,OAAS,GAAKgI,UAAU,KAAOO,UAAYP,UAAU,GAAK,GAElFxI,EAAgBoY,KAAMyK,GAEtB,IAAKxZ,IAAYxE,EAAgBmE,KAAKK,EAAQyZ,SAAU,CACtD,MAAM,IAAIC,MAAM,4EAGlB3K,KAAK/O,QAAUA,EACf+O,KAAK7M,QAAUjD,GAAO,GAAIxD,EAAUiD,GAAcwD,IAAYA,GAC9D6M,KAAKK,QAAU,MACfL,KAAK4C,SAAW,MAChB5C,KAAK9I,SAAW,GAChB8I,KAAKnR,MAAQ,MACbmR,KAAK4K,UAAY,MACjB5K,KAAKwH,SAAW,MAChBxH,KAAK+I,MAAQ,MACb/I,KAAK6K,OAAS,MACd7K,KAAK8K,OAGPliB,EAAa6hB,EAAS,CAAC,CACrB9hB,IAAK,OACL4G,MAAO,SAASub,IACd,IAAI7Z,EAAU+O,KAAK/O,QACnB,IAAIyZ,EAAUzZ,EAAQyZ,QAAQrY,cAC9B,IAAIqD,EAEJ,GAAIzE,EAAQnH,GAAY,CACtB,OAGFmH,EAAQnH,GAAakW,KAErB,GAAI0K,IAAY,MAAO,CACrB1K,KAAKuH,MAAQ,KAEb7R,EAAMzE,EAAQwB,aAAa,QAAU,GACrCuN,KAAK8H,YAAcpS,EAEnB,IAAKA,EAAK,CACR,OAIFA,EAAMzE,EAAQ+R,SACT,GAAI0H,IAAY,UAAY9gB,OAAOuf,kBAAmB,CAC3DzT,EAAMzE,EAAQ8Z,YAGhB/K,KAAK0H,KAAKhS,KAEX,CACD/M,IAAK,OACL4G,MAAO,SAASmY,EAAKhS,GACnB,IAAIgQ,EAAQ1F,KAEZ,IAAKtK,EAAK,CACR,OAGFsK,KAAKtK,IAAMA,EACXsK,KAAKY,UAAY,GACjB,IAAI3P,EAAU+O,KAAK/O,QACfkC,EAAU6M,KAAK7M,QAEnB,IAAKA,EAAQrF,YAAcqF,EAAQpF,SAAU,CAC3CoF,EAAQ9F,iBAAmB,MAI7B,IAAK8F,EAAQ9F,mBAAqBzD,OAAOuU,YAAa,CACpD6B,KAAKgL,QACL,OAIF,GAAIze,EAAgBqE,KAAK8E,GAAM,CAC7B,GAAIlJ,EAAqBoE,KAAK8E,GAAM,CAClCsK,KAAKiL,KAAKpN,GAAqBnI,QAC1B,CACLsK,KAAKgL,QAGP,OAGF,IAAIE,EAAM,IAAIC,eACd,IAAIH,EAAQhL,KAAKgL,MAAM5G,KAAKpE,MAC5BA,KAAK4K,UAAY,KACjB5K,KAAKkL,IAAMA,EACXA,EAAIE,UAAYJ,EAChBE,EAAIG,QAAUL,EACdE,EAAII,QAAUN,EAEdE,EAAIK,WAAa,WACf,GAAIL,EAAIM,kBAAkB,kBAAoBnf,EAAgB,CAC5D6e,EAAIO,UAIRP,EAAIQ,OAAS,WACXhG,EAAMuF,KAAKC,EAAIS,WAGjBT,EAAIU,UAAY,WACdlG,EAAMkF,UAAY,MAClBlF,EAAMwF,IAAM,MAId,GAAI/X,EAAQ/F,kBAAoBqI,GAAiBC,IAAQzE,EAAQ6R,YAAa,CAC5EpN,EAAMM,GAAaN,GAGrBwV,EAAIW,KAAK,MAAOnW,GAChBwV,EAAIY,aAAe,cACnBZ,EAAIa,gBAAkB9a,EAAQ6R,cAAgB,kBAC9CoI,EAAIc,SAEL,CACDrjB,IAAK,OACL4G,MAAO,SAAS0b,EAAK/M,GACnB,IAAI/K,EAAU6M,KAAK7M,QACfyN,EAAYZ,KAAKY,UACrB,IAAI7B,EAAcF,GAAuBX,GACzC,IAAI5H,EAAS,EACb,IAAIC,EAAS,EACb,IAAIC,EAAS,EAEb,GAAIuI,EAAc,EAAG,CAGnBiB,KAAKtK,IAAM6I,GAAqBL,EAAa7R,GAE7C,IAAI4f,EAAoBnM,GAAiBf,GAEzCzI,EAAS2V,EAAkB3V,OAC3BC,EAAS0V,EAAkB1V,OAC3BC,EAASyV,EAAkBzV,OAG7B,GAAIrD,EAAQrF,UAAW,CACrB8S,EAAUtK,OAASA,EAGrB,GAAInD,EAAQpF,SAAU,CACpB6S,EAAUrK,OAASA,EACnBqK,EAAUpK,OAASA,EAGrBwJ,KAAKgL,UAEN,CACDriB,IAAK,QACL4G,MAAO,SAASyb,IACd,IAAI/Z,EAAU+O,KAAK/O,QACfyE,EAAMsK,KAAKtK,IACf,IAAIoN,EACJ,IAAIC,EAEJ,GAAI/C,KAAK7M,QAAQ/F,kBAAoBqI,GAAiBC,GAAM,CAC1DoN,EAAc7R,EAAQ6R,YAEtB,GAAIA,EAAa,CACfC,EAAiBrN,MACZ,CACLoN,EAAc,YAEdC,EAAiB/M,GAAaN,IAIlCsK,KAAK8C,YAAcA,EACnB9C,KAAK+C,eAAiBA,EACtB,IAAI3I,EAAQ1F,SAASsH,cAAc,OAEnC,GAAI8G,EAAa,CACf1I,EAAM0I,YAAcA,EAGtB1I,EAAM4I,IAAMD,GAAkBrN,EAC9BsK,KAAK5F,MAAQA,EACbA,EAAMsR,OAAS1L,KAAKvC,MAAM2G,KAAKpE,MAC/B5F,EAAMkR,QAAUtL,KAAKkM,KAAK9H,KAAKpE,MAC/BtO,GAAS0I,EAAOrP,GAChBkG,EAAQkb,WAAWC,aAAahS,EAAOnJ,EAAQob,eAEhD,CACD1jB,IAAK,QACL4G,MAAO,SAASkO,IACd,IAAI6O,EAAStM,KAEb,IAAI5F,EAAQ4F,KAAKuH,MAAQvH,KAAK/O,QAAU+O,KAAK5F,MAC7CA,EAAMsR,OAAS,KACftR,EAAMkR,QAAU,KAChBtL,KAAK6K,OAAS,KACd,IAAI0B,EAAY1iB,EAAO2iB,WAAa,6CAA6C5b,KAAK/G,EAAO2iB,UAAUC,WAEvG,IAAIC,EAAO,SAASA,EAAKhS,EAAcE,GACrC1K,GAAOoc,EAAO1L,UAAW,CACvBlG,aAAcA,EACdE,cAAeA,EACf7N,YAAa2N,EAAeE,IAE9B0R,EAAOzB,OAAS,MAChByB,EAAOvD,MAAQ,KAEfuD,EAAOK,SAIT,GAAIvS,EAAMM,eAAiB6R,EAAW,CACpCG,EAAKtS,EAAMM,aAAcN,EAAMQ,eAC/B,OAGF,IAAIgS,EAAclY,SAASsH,cAAc,OACzC,IAAI6Q,EAAOnY,SAASmY,MAAQnY,SAASQ,gBACrC8K,KAAK4M,YAAcA,EAEnBA,EAAYlB,OAAS,WACnBgB,EAAKE,EAAYvT,MAAOuT,EAAYxT,QAEpC,IAAKmT,EAAW,CACdM,EAAKC,YAAYF,KAIrBA,EAAY5J,IAAM5I,EAAM4I,IAGxB,IAAKuJ,EAAW,CACdK,EAAYzb,MAAMyS,QAAU,UAAY,6BAA+B,4BAA8B,0BAA4B,yBAA2B,aAAe,qBAAuB,SAAW,cAC7MiJ,EAAK3J,YAAY0J,MAGpB,CACDjkB,IAAK,OACL4G,MAAO,SAAS2c,IACd,IAAI9R,EAAQ4F,KAAK5F,MACjBA,EAAMsR,OAAS,KACftR,EAAMkR,QAAU,KAChBlR,EAAM+R,WAAWW,YAAY1S,GAC7B4F,KAAK5F,MAAQ,OAEd,CACDzR,IAAK,QACL4G,MAAO,SAASod,IACd,IAAK3M,KAAK+I,OAAS/I,KAAKnR,MAAO,CAC7B,OAGF,IAAIoC,EAAU+O,KAAK/O,QACfkC,EAAU6M,KAAK7M,QACfiH,EAAQ4F,KAAK5F,MAEjB,IAAImG,EAAYtP,EAAQkb,WACxB,IAAIY,EAAWrY,SAASsH,cAAc,OACtC+Q,EAASpJ,UAAYxU,EACrB,IAAIqR,EAAUuM,EAASxJ,cAAc,IAAI3Y,OAAOd,EAAW,eAC3D,IAAIiS,EAASyE,EAAQ+C,cAAc,IAAI3Y,OAAOd,EAAW,YACzD,IAAI2b,EAAUjF,EAAQ+C,cAAc,IAAI3Y,OAAOd,EAAW,cAC1D,IAAI6Y,EAAUnC,EAAQ+C,cAAc,IAAI3Y,OAAOd,EAAW,cAC1D,IAAI4Y,EAAOC,EAAQY,cAAc,IAAI3Y,OAAOd,EAAW,UACvDkW,KAAKO,UAAYA,EACjBP,KAAKQ,QAAUA,EACfR,KAAKjE,OAASA,EACdiE,KAAKyF,QAAUA,EACfzF,KAAK2C,QAAUA,EACf3C,KAAKiD,QAAUzC,EAAQ+C,cAAc,IAAI3Y,OAAOd,EAAW,cAC3DkW,KAAK0C,KAAOA,EACZ3G,EAAOmH,YAAY9I,GAEnB1I,GAAST,EAASnG,GAElByV,EAAU6L,aAAa5L,EAASvP,EAAQob,aAExC,IAAKrM,KAAKuH,MAAO,CACfzV,GAAYsI,EAAOrP,GAGrBiV,KAAK6C,cACL7C,KAAKoE,OACLjR,EAAQtG,mBAAqBgE,KAAKyL,IAAI,EAAGnJ,EAAQtG,qBAAuBC,IACxEqG,EAAQpG,YAAc8D,KAAKyL,IAAI,EAAGnJ,EAAQpG,cAAgBD,IAC1DqG,EAAQxG,SAAWkE,KAAKyL,IAAI,EAAGzL,KAAKwL,IAAI,EAAGxL,KAAKC,MAAMqC,EAAQxG,aAAe,EAC7E+E,GAASiR,EAAS7X,GAElB,IAAKqI,EAAQ5F,OAAQ,CACnBmE,GAASiR,EAAQqK,uBAAuB,GAAGpiB,OAAOd,EAAW,YAAagB,GAG5E,IAAKqI,EAAQ3F,OAAQ,CACnBkE,GAASiR,EAAQqK,uBAAuB,GAAGpiB,OAAOd,EAAW,YAAagB,GAG5E,GAAIqI,EAAQzF,WAAY,CACtBgE,GAAS8O,EAAS,GAAG5V,OAAOd,EAAW,QAGzC,IAAKqJ,EAAQ1F,UAAW,CACtBiE,GAASgR,EAAM1X,GAGjB,GAAImI,EAAQ/E,eAAgB,CAC1BsD,GAASgR,EAAMxX,GACfwH,GAAQgQ,EAAMvX,EAAapB,GAG7B,IAAKoJ,EAAQ9E,iBAAkB,CAC7BqD,GAASiR,EAAQqK,uBAAuB,GAAGpiB,OAAOd,EAAW,UAAWgB,GACxE4G,GAASiR,EAAQqK,uBAAuB,GAAGpiB,OAAOd,EAAW,WAAYgB,GAG3EkV,KAAKD,SACLC,KAAKnR,MAAQ,KACbmR,KAAKwF,YAAYrS,EAAQvG,UAEzB,GAAIuG,EAAQxF,SAAU,CACpBqS,KAAK/Q,OAGP+Q,KAAKtN,QAAQS,EAAQnG,MAErB,GAAI8C,GAAWqD,EAAQtE,OAAQ,CAC7BiF,GAAY7C,EAAShF,EAAakH,EAAQtE,MAAO,CAC/CoE,KAAM,OAIVmB,GAAcnD,EAAShF,KAExB,CACDtD,IAAK,UACL4G,MAAO,SAAS0d,IACd,IAAKjN,KAAKnR,MAAO,CACf,OAGFmR,KAAKnR,MAAQ,MACbmR,KAAKiF,SACLjF,KAAK6D,eACL7D,KAAKQ,QAAQ2L,WAAWW,YAAY9M,KAAKQ,SACzC1O,GAAYkO,KAAK/O,QAASnG,KAE3B,CACDnC,IAAK,WACL4G,MAAO,SAASkY,IACd,GAAIzH,KAAKnR,MAAO,CACdmR,KAAKiN,UACLjN,KAAKnR,MAAQ,MACbmR,KAAKK,QAAU,WACV,GAAIL,KAAK6K,OAAQ,CACtB7K,KAAK4M,YAAYlB,OAAS,KAC1B1L,KAAK6K,OAAS,MACd7K,KAAK+I,MAAQ,WACR,GAAI/I,KAAK4K,UAAW,CACzB5K,KAAKkL,IAAIG,QAAU,KACnBrL,KAAKkL,IAAIO,aACJ,GAAIzL,KAAK5F,MAAO,CACrB4F,KAAKkM,WAQP,CAAC,CACHvjB,IAAK,aACL4G,MAAO,SAAS2d,IACdtjB,OAAO6gB,QAAUD,GACjB,OAAOC,IAOR,CACD9hB,IAAK,cACL4G,MAAO,SAAS4d,EAAYha,GAC1BjD,GAAOxD,EAAUiD,GAAcwD,IAAYA,OAI/C,OAAOsX,EA1YT,GA+YA,OAFAva,GAAOua,GAAQ9iB,UAAWoY,GAAQ9S,GAASkX,GAAQe,GAAUqB,GAAQY,IAE9DsD,GA96GyE2C","file":"javascripts/vendors~avatarcropper-e74ae1b2230fd1bafee4.chunk.js","sourcesContent":["/*!\n * Cropper.js v1.4.2\n * https://fengyuanchen.github.io/cropperjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2018-10-15T13:27:01.969Z\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Cropper = factory());\n}(this, (function () { 'use strict';\n\n  function _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n      _typeof = function (obj) {\n        return typeof obj;\n      };\n    } else {\n      _typeof = function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n      };\n    }\n\n    return _typeof(obj);\n  }\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n  }\n\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) {\n      for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n      return arr2;\n    }\n  }\n\n  function _iterableToArray(iter) {\n    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n  }\n\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n  }\n\n  var IN_BROWSER = typeof window !== 'undefined';\n  var WINDOW = IN_BROWSER ? window : {};\n  var NAMESPACE = 'cropper'; // Actions\n\n  var ACTION_ALL = 'all';\n  var ACTION_CROP = 'crop';\n  var ACTION_MOVE = 'move';\n  var ACTION_ZOOM = 'zoom';\n  var ACTION_EAST = 'e';\n  var ACTION_WEST = 'w';\n  var ACTION_SOUTH = 's';\n  var ACTION_NORTH = 'n';\n  var ACTION_NORTH_EAST = 'ne';\n  var ACTION_NORTH_WEST = 'nw';\n  var ACTION_SOUTH_EAST = 'se';\n  var ACTION_SOUTH_WEST = 'sw'; // Classes\n\n  var CLASS_CROP = \"\".concat(NAMESPACE, \"-crop\");\n  var CLASS_DISABLED = \"\".concat(NAMESPACE, \"-disabled\");\n  var CLASS_HIDDEN = \"\".concat(NAMESPACE, \"-hidden\");\n  var CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\n  var CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\n  var CLASS_MODAL = \"\".concat(NAMESPACE, \"-modal\");\n  var CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\"); // Data keys\n\n  var DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\n  var DATA_PREVIEW = \"\".concat(NAMESPACE, \"Preview\"); // Drag modes\n\n  var DRAG_MODE_CROP = 'crop';\n  var DRAG_MODE_MOVE = 'move';\n  var DRAG_MODE_NONE = 'none'; // Events\n\n  var EVENT_CROP = 'crop';\n  var EVENT_CROP_END = 'cropend';\n  var EVENT_CROP_MOVE = 'cropmove';\n  var EVENT_CROP_START = 'cropstart';\n  var EVENT_DBLCLICK = 'dblclick';\n  var EVENT_POINTER_DOWN = WINDOW.PointerEvent ? 'pointerdown' : 'touchstart mousedown';\n  var EVENT_POINTER_MOVE = WINDOW.PointerEvent ? 'pointermove' : 'touchmove mousemove';\n  var EVENT_POINTER_UP = WINDOW.PointerEvent ? 'pointerup pointercancel' : 'touchend touchcancel mouseup';\n  var EVENT_READY = 'ready';\n  var EVENT_RESIZE = 'resize';\n  var EVENT_WHEEL = 'wheel mousewheel DOMMouseScroll';\n  var EVENT_ZOOM = 'zoom'; // Mime types\n\n  var MIME_TYPE_JPEG = 'image/jpeg'; // RegExps\n\n  var REGEXP_ACTIONS = /^(?:e|w|s|n|se|sw|ne|nw|all|crop|move|zoom)$/;\n  var REGEXP_DATA_URL = /^data:/;\n  var REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\n  var REGEXP_TAG_NAME = /^(?:img|canvas)$/i;\n\n  var DEFAULTS = {\n    // Define the view mode of the cropper\n    viewMode: 0,\n    // 0, 1, 2, 3\n    // Define the dragging mode of the cropper\n    dragMode: DRAG_MODE_CROP,\n    // 'crop', 'move' or 'none'\n    // Define the initial aspect ratio of the crop box\n    initialAspectRatio: NaN,\n    // Define the aspect ratio of the crop box\n    aspectRatio: NaN,\n    // An object with the previous cropping result data\n    data: null,\n    // A selector for adding extra containers to preview\n    preview: '',\n    // Re-render the cropper when resize the window\n    responsive: true,\n    // Restore the cropped area after resize the window\n    restore: true,\n    // Check if the current image is a cross-origin image\n    checkCrossOrigin: true,\n    // Check the current image's Exif Orientation information\n    checkOrientation: true,\n    // Show the black modal\n    modal: true,\n    // Show the dashed lines for guiding\n    guides: true,\n    // Show the center indicator for guiding\n    center: true,\n    // Show the white modal to highlight the crop box\n    highlight: true,\n    // Show the grid background\n    background: true,\n    // Enable to crop the image automatically when initialize\n    autoCrop: true,\n    // Define the percentage of automatic cropping area when initializes\n    autoCropArea: 0.8,\n    // Enable to move the image\n    movable: true,\n    // Enable to rotate the image\n    rotatable: true,\n    // Enable to scale the image\n    scalable: true,\n    // Enable to zoom the image\n    zoomable: true,\n    // Enable to zoom the image by dragging touch\n    zoomOnTouch: true,\n    // Enable to zoom the image by wheeling mouse\n    zoomOnWheel: true,\n    // Define zoom ratio when zoom the image by wheeling mouse\n    wheelZoomRatio: 0.1,\n    // Enable to move the crop box\n    cropBoxMovable: true,\n    // Enable to resize the crop box\n    cropBoxResizable: true,\n    // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n    toggleDragModeOnDblclick: true,\n    // Size limitation\n    minCanvasWidth: 0,\n    minCanvasHeight: 0,\n    minCropBoxWidth: 0,\n    minCropBoxHeight: 0,\n    minContainerWidth: 200,\n    minContainerHeight: 100,\n    // Shortcuts of events\n    ready: null,\n    cropstart: null,\n    cropmove: null,\n    cropend: null,\n    crop: null,\n    zoom: null\n  };\n\n  var TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span>' + '</div>' + '</div>';\n\n  /**\n   * Check if the given value is not a number.\n   */\n\n  var isNaN = Number.isNaN || WINDOW.isNaN;\n  /**\n   * Check if the given value is a number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n   */\n\n  function isNumber(value) {\n    return typeof value === 'number' && !isNaN(value);\n  }\n  /**\n   * Check if the given value is undefined.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n   */\n\n  function isUndefined(value) {\n    return typeof value === 'undefined';\n  }\n  /**\n   * Check if the given value is an object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n   */\n\n  function isObject(value) {\n    return _typeof(value) === 'object' && value !== null;\n  }\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  /**\n   * Check if the given value is a plain object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n   */\n\n  function isPlainObject(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n\n    try {\n      var _constructor = value.constructor;\n      var prototype = _constructor.prototype;\n      return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n    } catch (e) {\n      return false;\n    }\n  }\n  /**\n   * Check if the given value is a function.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n   */\n\n  function isFunction(value) {\n    return typeof value === 'function';\n  }\n  /**\n   * Iterate the given data.\n   * @param {*} data - The data to iterate.\n   * @param {Function} callback - The process function for each element.\n   * @returns {*} The original data.\n   */\n\n  function forEach(data, callback) {\n    if (data && isFunction(callback)) {\n      if (Array.isArray(data) || isNumber(data.length)\n      /* array-like */\n      ) {\n          var length = data.length;\n          var i;\n\n          for (i = 0; i < length; i += 1) {\n            if (callback.call(data, data[i], i, data) === false) {\n              break;\n            }\n          }\n        } else if (isObject(data)) {\n        Object.keys(data).forEach(function (key) {\n          callback.call(data, data[key], key, data);\n        });\n      }\n    }\n\n    return data;\n  }\n  /**\n   * Extend the given object.\n   * @param {*} obj - The object to be extended.\n   * @param {*} args - The rest objects which will be merged to the first object.\n   * @returns {Object} The extended object.\n   */\n\n  var assign = Object.assign || function assign(obj) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (isObject(obj) && args.length > 0) {\n      args.forEach(function (arg) {\n        if (isObject(arg)) {\n          Object.keys(arg).forEach(function (key) {\n            obj[key] = arg[key];\n          });\n        }\n      });\n    }\n\n    return obj;\n  };\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n  /**\n   * Normalize decimal number.\n   * Check out {@link http://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */\n\n  function normalizeDecimalNumber(value) {\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n  }\n  var REGEXP_SUFFIX = /^(?:width|height|left|top|marginLeft|marginTop)$/;\n  /**\n   * Apply styles to the given element.\n   * @param {Element} element - The target element.\n   * @param {Object} styles - The styles for applying.\n   */\n\n  function setStyle(element, styles) {\n    var style = element.style;\n    forEach(styles, function (value, property) {\n      if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n        value += 'px';\n      }\n\n      style[property] = value;\n    });\n  }\n  /**\n   * Check if the given element has a special class.\n   * @param {Element} element - The element to check.\n   * @param {string} value - The class to search.\n   * @returns {boolean} Returns `true` if the special class was found.\n   */\n\n  function hasClass(element, value) {\n    return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n  }\n  /**\n   * Add classes to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be added.\n   */\n\n  function addClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        addClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.add(value);\n      return;\n    }\n\n    var className = element.className.trim();\n\n    if (!className) {\n      element.className = value;\n    } else if (className.indexOf(value) < 0) {\n      element.className = \"\".concat(className, \" \").concat(value);\n    }\n  }\n  /**\n   * Remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be removed.\n   */\n\n  function removeClass(element, value) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        removeClass(elem, value);\n      });\n      return;\n    }\n\n    if (element.classList) {\n      element.classList.remove(value);\n      return;\n    }\n\n    if (element.className.indexOf(value) >= 0) {\n      element.className = element.className.replace(value, '');\n    }\n  }\n  /**\n   * Add or remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be toggled.\n   * @param {boolean} added - Add only.\n   */\n\n  function toggleClass(element, value, added) {\n    if (!value) {\n      return;\n    }\n\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        toggleClass(elem, value, added);\n      });\n      return;\n    } // IE10-11 doesn't support the second parameter of `classList.toggle`\n\n\n    if (added) {\n      addClass(element, value);\n    } else {\n      removeClass(element, value);\n    }\n  }\n  var REGEXP_HYPHENATE = /([a-z\\d])([A-Z])/g;\n  /**\n   * Transform the given string from camelCase to kebab-case\n   * @param {string} value - The value to transform.\n   * @returns {string} The transformed value.\n   */\n\n  function hyphenate(value) {\n    return value.replace(REGEXP_HYPHENATE, '$1-$2').toLowerCase();\n  }\n  /**\n   * Get data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to get.\n   * @returns {string} The data value.\n   */\n\n  function getData(element, name) {\n    if (isObject(element[name])) {\n      return element[name];\n    }\n\n    if (element.dataset) {\n      return element.dataset[name];\n    }\n\n    return element.getAttribute(\"data-\".concat(hyphenate(name)));\n  }\n  /**\n   * Set data to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to set.\n   * @param {string} data - The data value.\n   */\n\n  function setData(element, name, data) {\n    if (isObject(data)) {\n      element[name] = data;\n    } else if (element.dataset) {\n      element.dataset[name] = data;\n    } else {\n      element.setAttribute(\"data-\".concat(hyphenate(name)), data);\n    }\n  }\n  /**\n   * Remove data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to remove.\n   */\n\n  function removeData(element, name) {\n    if (isObject(element[name])) {\n      try {\n        delete element[name];\n      } catch (e) {\n        element[name] = undefined;\n      }\n    } else if (element.dataset) {\n      // #128 Safari not allows to delete dataset property\n      try {\n        delete element.dataset[name];\n      } catch (e) {\n        element.dataset[name] = undefined;\n      }\n    } else {\n      element.removeAttribute(\"data-\".concat(hyphenate(name)));\n    }\n  }\n  var REGEXP_SPACES = /\\s\\s*/;\n\n  var onceSupported = function () {\n    var supported = false;\n\n    if (IN_BROWSER) {\n      var once = false;\n\n      var listener = function listener() {};\n\n      var options = Object.defineProperty({}, 'once', {\n        get: function get() {\n          supported = true;\n          return once;\n        },\n\n        /**\n         * This setter can fix a `TypeError` in strict mode\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n         * @param {boolean} value - The value to set\n         */\n        set: function set(value) {\n          once = value;\n        }\n      });\n      WINDOW.addEventListener('test', listener, options);\n      WINDOW.removeEventListener('test', listener, options);\n    }\n\n    return supported;\n  }();\n  /**\n   * Remove event listener from the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n\n  function removeListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (!onceSupported) {\n        var listeners = element.listeners;\n\n        if (listeners && listeners[event] && listeners[event][listener]) {\n          handler = listeners[event][listener];\n          delete listeners[event][listener];\n\n          if (Object.keys(listeners[event]).length === 0) {\n            delete listeners[event];\n          }\n\n          if (Object.keys(listeners).length === 0) {\n            delete element.listeners;\n          }\n        }\n      }\n\n      element.removeEventListener(event, handler, options);\n    });\n  }\n  /**\n   * Add event listener to the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n\n  function addListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var _handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (options.once && !onceSupported) {\n        var _element$listeners = element.listeners,\n            listeners = _element$listeners === void 0 ? {} : _element$listeners;\n\n        _handler = function handler() {\n          delete listeners[event][listener];\n          element.removeEventListener(event, _handler, options);\n\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          listener.apply(element, args);\n        };\n\n        if (!listeners[event]) {\n          listeners[event] = {};\n        }\n\n        if (listeners[event][listener]) {\n          element.removeEventListener(event, listeners[event][listener], options);\n        }\n\n        listeners[event][listener] = _handler;\n        element.listeners = listeners;\n      }\n\n      element.addEventListener(event, _handler, options);\n    });\n  }\n  /**\n   * Dispatch event on the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Object} data - The additional event data.\n   * @returns {boolean} Indicate if the event is default prevented or not.\n   */\n\n  function dispatchEvent(element, type, data) {\n    var event; // Event and CustomEvent on IE9-11 are global objects, not constructors\n\n    if (isFunction(Event) && isFunction(CustomEvent)) {\n      event = new CustomEvent(type, {\n        detail: data,\n        bubbles: true,\n        cancelable: true\n      });\n    } else {\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent(type, true, true, data);\n    }\n\n    return element.dispatchEvent(event);\n  }\n  /**\n   * Get the offset base on the document.\n   * @param {Element} element - The target element.\n   * @returns {Object} The offset data.\n   */\n\n  function getOffset(element) {\n    var box = element.getBoundingClientRect();\n    return {\n      left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n      top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n    };\n  }\n  var location = WINDOW.location;\n  var REGEXP_ORIGINS = /^(https?:)\\/\\/([^:/?#]+):?(\\d*)/i;\n  /**\n   * Check if the given URL is a cross origin URL.\n   * @param {string} url - The target URL.\n   * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n   */\n\n  function isCrossOriginURL(url) {\n    var parts = url.match(REGEXP_ORIGINS);\n    return parts && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n  }\n  /**\n   * Add timestamp to the given URL.\n   * @param {string} url - The target URL.\n   * @returns {string} The result URL.\n   */\n\n  function addTimestamp(url) {\n    var timestamp = \"timestamp=\".concat(new Date().getTime());\n    return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n  }\n  /**\n   * Get transforms base on the given object.\n   * @param {Object} obj - The target object.\n   * @returns {string} A string contains transform values.\n   */\n\n  function getTransforms(_ref) {\n    var rotate = _ref.rotate,\n        scaleX = _ref.scaleX,\n        scaleY = _ref.scaleY,\n        translateX = _ref.translateX,\n        translateY = _ref.translateY;\n    var values = [];\n\n    if (isNumber(translateX) && translateX !== 0) {\n      values.push(\"translateX(\".concat(translateX, \"px)\"));\n    }\n\n    if (isNumber(translateY) && translateY !== 0) {\n      values.push(\"translateY(\".concat(translateY, \"px)\"));\n    } // Rotate should come first before scale to match orientation transform\n\n\n    if (isNumber(rotate) && rotate !== 0) {\n      values.push(\"rotate(\".concat(rotate, \"deg)\"));\n    }\n\n    if (isNumber(scaleX) && scaleX !== 1) {\n      values.push(\"scaleX(\".concat(scaleX, \")\"));\n    }\n\n    if (isNumber(scaleY) && scaleY !== 1) {\n      values.push(\"scaleY(\".concat(scaleY, \")\"));\n    }\n\n    var transform = values.length ? values.join(' ') : 'none';\n    return {\n      WebkitTransform: transform,\n      msTransform: transform,\n      transform: transform\n    };\n  }\n  /**\n   * Get the max ratio of a group of pointers.\n   * @param {string} pointers - The target pointers.\n   * @returns {number} The result ratio.\n   */\n\n  function getMaxZoomRatio(pointers) {\n    var pointers2 = assign({}, pointers);\n    var ratios = [];\n    forEach(pointers, function (pointer, pointerId) {\n      delete pointers2[pointerId];\n      forEach(pointers2, function (pointer2) {\n        var x1 = Math.abs(pointer.startX - pointer2.startX);\n        var y1 = Math.abs(pointer.startY - pointer2.startY);\n        var x2 = Math.abs(pointer.endX - pointer2.endX);\n        var y2 = Math.abs(pointer.endY - pointer2.endY);\n        var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n        var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n        var ratio = (z2 - z1) / z1;\n        ratios.push(ratio);\n      });\n    });\n    ratios.sort(function (a, b) {\n      return Math.abs(a) < Math.abs(b);\n    });\n    return ratios[0];\n  }\n  /**\n   * Get a pointer from an event object.\n   * @param {Object} event - The target event object.\n   * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n   * @returns {Object} The result pointer contains start and/or end point coordinates.\n   */\n\n  function getPointer(_ref2, endOnly) {\n    var pageX = _ref2.pageX,\n        pageY = _ref2.pageY;\n    var end = {\n      endX: pageX,\n      endY: pageY\n    };\n    return endOnly ? end : assign({\n      startX: pageX,\n      startY: pageY\n    }, end);\n  }\n  /**\n   * Get the center point coordinate of a group of pointers.\n   * @param {Object} pointers - The target pointers.\n   * @returns {Object} The center point coordinate.\n   */\n\n  function getPointersCenter(pointers) {\n    var pageX = 0;\n    var pageY = 0;\n    var count = 0;\n    forEach(pointers, function (_ref3) {\n      var startX = _ref3.startX,\n          startY = _ref3.startY;\n      pageX += startX;\n      pageY += startY;\n      count += 1;\n    });\n    pageX /= count;\n    pageY /= count;\n    return {\n      pageX: pageX,\n      pageY: pageY\n    };\n  }\n  /**\n   * Check if the given value is a finite number.\n   */\n\n  var isFinite = Number.isFinite || WINDOW.isFinite;\n  /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */\n\n  function getAdjustedSizes(_ref4) // or 'cover'\n  {\n    var aspectRatio = _ref4.aspectRatio,\n        height = _ref4.height,\n        width = _ref4.width;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\n\n    var isValidNumber = function isValidNumber(value) {\n      return isFinite(value) && value > 0;\n    };\n\n    if (isValidNumber(width) && isValidNumber(height)) {\n      var adjustedWidth = height * aspectRatio;\n\n      if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n        height = width / aspectRatio;\n      } else {\n        width = height * aspectRatio;\n      }\n    } else if (isValidNumber(width)) {\n      height = width / aspectRatio;\n    } else if (isValidNumber(height)) {\n      width = height * aspectRatio;\n    }\n\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Get the new sizes of a rectangle after rotated.\n   * @param {Object} data - The original sizes.\n   * @returns {Object} The result sizes.\n   */\n\n  function getRotatedSizes(_ref5) {\n    var width = _ref5.width,\n        height = _ref5.height,\n        degree = _ref5.degree;\n    degree = Math.abs(degree) % 180;\n\n    if (degree === 90) {\n      return {\n        width: height,\n        height: width\n      };\n    }\n\n    var arc = degree % 90 * Math.PI / 180;\n    var sinArc = Math.sin(arc);\n    var cosArc = Math.cos(arc);\n    var newWidth = width * cosArc + height * sinArc;\n    var newHeight = width * sinArc + height * cosArc;\n    return degree > 90 ? {\n      width: newHeight,\n      height: newWidth\n    } : {\n      width: newWidth,\n      height: newHeight\n    };\n  }\n  /**\n   * Get a canvas which drew the given image.\n   * @param {HTMLImageElement} image - The image for drawing.\n   * @param {Object} imageData - The image data.\n   * @param {Object} canvasData - The canvas data.\n   * @param {Object} options - The options.\n   * @returns {HTMLCanvasElement} The result canvas.\n   */\n\n  function getSourceCanvas(image, _ref6, _ref7, _ref8) {\n    var imageAspectRatio = _ref6.aspectRatio,\n        imageNaturalWidth = _ref6.naturalWidth,\n        imageNaturalHeight = _ref6.naturalHeight,\n        _ref6$rotate = _ref6.rotate,\n        rotate = _ref6$rotate === void 0 ? 0 : _ref6$rotate,\n        _ref6$scaleX = _ref6.scaleX,\n        scaleX = _ref6$scaleX === void 0 ? 1 : _ref6$scaleX,\n        _ref6$scaleY = _ref6.scaleY,\n        scaleY = _ref6$scaleY === void 0 ? 1 : _ref6$scaleY;\n    var aspectRatio = _ref7.aspectRatio,\n        naturalWidth = _ref7.naturalWidth,\n        naturalHeight = _ref7.naturalHeight;\n    var _ref8$fillColor = _ref8.fillColor,\n        fillColor = _ref8$fillColor === void 0 ? 'transparent' : _ref8$fillColor,\n        _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n        imageSmoothingEnabled = _ref8$imageSmoothingE === void 0 ? true : _ref8$imageSmoothingE,\n        _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n        imageSmoothingQuality = _ref8$imageSmoothingQ === void 0 ? 'low' : _ref8$imageSmoothingQ,\n        _ref8$maxWidth = _ref8.maxWidth,\n        maxWidth = _ref8$maxWidth === void 0 ? Infinity : _ref8$maxWidth,\n        _ref8$maxHeight = _ref8.maxHeight,\n        maxHeight = _ref8$maxHeight === void 0 ? Infinity : _ref8$maxHeight,\n        _ref8$minWidth = _ref8.minWidth,\n        minWidth = _ref8$minWidth === void 0 ? 0 : _ref8$minWidth,\n        _ref8$minHeight = _ref8.minHeight,\n        minHeight = _ref8$minHeight === void 0 ? 0 : _ref8$minHeight;\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    var maxSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var minSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n    var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight)); // Note: should always use image's natural sizes for drawing as\n    // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n\n    var destMaxSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var destMinSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\n    var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\n    var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n    context.fillStyle = fillColor;\n    context.fillRect(0, 0, width, height);\n    context.save();\n    context.translate(width / 2, height / 2);\n    context.rotate(rotate * Math.PI / 180);\n    context.scale(scaleX, scaleY);\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n    context.imageSmoothingQuality = imageSmoothingQuality;\n    context.drawImage.apply(context, [image].concat(_toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n    context.restore();\n    return canvas;\n  }\n  var fromCharCode = String.fromCharCode;\n  /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */\n\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    var i;\n    length += start;\n\n    for (i = start; i < length; i += 1) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n\n    return str;\n  }\n  var REGEXP_DATA_URL_HEAD = /^data:.*,/;\n  /**\n   * Transform Data URL to array buffer.\n   * @param {string} dataURL - The Data URL to transform.\n   * @returns {ArrayBuffer} The result array buffer.\n   */\n\n  function dataURLToArrayBuffer(dataURL) {\n    var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n    var binary = atob(base64);\n    var arrayBuffer = new ArrayBuffer(binary.length);\n    var uint8 = new Uint8Array(arrayBuffer);\n    forEach(uint8, function (value, i) {\n      uint8[i] = binary.charCodeAt(i);\n    });\n    return arrayBuffer;\n  }\n  /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */\n\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\n    var chunks = [];\n    var chunkSize = 8192;\n    var uint8 = new Uint8Array(arrayBuffer);\n\n    while (uint8.length > 0) {\n      chunks.push(fromCharCode.apply(void 0, _toConsumableArray(uint8.subarray(0, chunkSize))));\n      uint8 = uint8.subarray(chunkSize);\n    }\n\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n  }\n  /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */\n\n  function resetAndGetOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var orientation;\n    var littleEndian;\n    var app1Start;\n    var ifdStart; // Only handle JPEG image (start by 0xFFD8)\n\n    if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n      var length = dataView.byteLength;\n      var offset = 2;\n\n      while (offset < length) {\n        if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n          app1Start = offset;\n          break;\n        }\n\n        offset += 1;\n      }\n    }\n\n    if (app1Start) {\n      var exifIDCode = app1Start + 4;\n      var tiffOffset = app1Start + 10;\n\n      if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n        var endianness = dataView.getUint16(tiffOffset);\n        littleEndian = endianness === 0x4949;\n\n        if (littleEndian || endianness === 0x4D4D\n        /* bigEndian */\n        ) {\n            if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n              var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n              if (firstIFDOffset >= 0x00000008) {\n                ifdStart = tiffOffset + firstIFDOffset;\n              }\n            }\n          }\n      }\n    }\n\n    if (ifdStart) {\n      var _length = dataView.getUint16(ifdStart, littleEndian);\n\n      var _offset;\n\n      var i;\n\n      for (i = 0; i < _length; i += 1) {\n        _offset = ifdStart + i * 12 + 2;\n\n        if (dataView.getUint16(_offset, littleEndian) === 0x0112\n        /* Orientation */\n        ) {\n            // 8 is the offset of the current tag's value\n            _offset += 8; // Get the original orientation value\n\n            orientation = dataView.getUint16(_offset, littleEndian); // Override the orientation with its default value\n\n            dataView.setUint16(_offset, 1, littleEndian);\n            break;\n          }\n      }\n    }\n\n    return orientation;\n  }\n  /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */\n\n  function parseOrientation(orientation) {\n    var rotate = 0;\n    var scaleX = 1;\n    var scaleY = 1;\n\n    switch (orientation) {\n      // Flip horizontal\n      case 2:\n        scaleX = -1;\n        break;\n      // Rotate left 180°\n\n      case 3:\n        rotate = -180;\n        break;\n      // Flip vertical\n\n      case 4:\n        scaleY = -1;\n        break;\n      // Flip vertical and rotate right 90°\n\n      case 5:\n        rotate = 90;\n        scaleY = -1;\n        break;\n      // Rotate right 90°\n\n      case 6:\n        rotate = 90;\n        break;\n      // Flip horizontal and rotate right 90°\n\n      case 7:\n        rotate = 90;\n        scaleX = -1;\n        break;\n      // Rotate left 90°\n\n      case 8:\n        rotate = -90;\n        break;\n\n      default:\n    }\n\n    return {\n      rotate: rotate,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var render = {\n    render: function render() {\n      this.initContainer();\n      this.initCanvas();\n      this.initCropBox();\n      this.renderCanvas();\n\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    },\n    initContainer: function initContainer() {\n      var element = this.element,\n          options = this.options,\n          container = this.container,\n          cropper = this.cropper;\n      addClass(cropper, CLASS_HIDDEN);\n      removeClass(element, CLASS_HIDDEN);\n      var containerData = {\n        width: Math.max(container.offsetWidth, Number(options.minContainerWidth) || 200),\n        height: Math.max(container.offsetHeight, Number(options.minContainerHeight) || 100)\n      };\n      this.containerData = containerData;\n      setStyle(cropper, {\n        width: containerData.width,\n        height: containerData.height\n      });\n      addClass(element, CLASS_HIDDEN);\n      removeClass(cropper, CLASS_HIDDEN);\n    },\n    // Canvas (image wrapper)\n    initCanvas: function initCanvas() {\n      var containerData = this.containerData,\n          imageData = this.imageData;\n      var viewMode = this.options.viewMode;\n      var rotated = Math.abs(imageData.rotate) % 180 === 90;\n      var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n      var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n      var aspectRatio = naturalWidth / naturalHeight;\n      var canvasWidth = containerData.width;\n      var canvasHeight = containerData.height;\n\n      if (containerData.height * aspectRatio > containerData.width) {\n        if (viewMode === 3) {\n          canvasWidth = containerData.height * aspectRatio;\n        } else {\n          canvasHeight = containerData.width / aspectRatio;\n        }\n      } else if (viewMode === 3) {\n        canvasHeight = containerData.width / aspectRatio;\n      } else {\n        canvasWidth = containerData.height * aspectRatio;\n      }\n\n      var canvasData = {\n        aspectRatio: aspectRatio,\n        naturalWidth: naturalWidth,\n        naturalHeight: naturalHeight,\n        width: canvasWidth,\n        height: canvasHeight\n      };\n      canvasData.left = (containerData.width - canvasWidth) / 2;\n      canvasData.top = (containerData.height - canvasHeight) / 2;\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      this.canvasData = canvasData;\n      this.limited = viewMode === 1 || viewMode === 2;\n      this.limitCanvas(true, true);\n      this.initialImageData = assign({}, imageData);\n      this.initialCanvasData = assign({}, canvasData);\n    },\n    limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var viewMode = options.viewMode;\n      var aspectRatio = canvasData.aspectRatio;\n      var cropped = this.cropped && cropBoxData;\n\n      if (sizeLimited) {\n        var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n        var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n        if (viewMode > 1) {\n          minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n          minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n          if (viewMode === 3) {\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        } else if (viewMode > 0) {\n          if (minCanvasWidth) {\n            minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n          } else if (minCanvasHeight) {\n            minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n          } else if (cropped) {\n            minCanvasWidth = cropBoxData.width;\n            minCanvasHeight = cropBoxData.height;\n\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        }\n\n        var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: minCanvasWidth,\n          height: minCanvasHeight\n        });\n\n        minCanvasWidth = _getAdjustedSizes.width;\n        minCanvasHeight = _getAdjustedSizes.height;\n        canvasData.minWidth = minCanvasWidth;\n        canvasData.minHeight = minCanvasHeight;\n        canvasData.maxWidth = Infinity;\n        canvasData.maxHeight = Infinity;\n      }\n\n      if (positionLimited) {\n        if (viewMode > (cropped ? 0 : 1)) {\n          var newCanvasLeft = containerData.width - canvasData.width;\n          var newCanvasTop = containerData.height - canvasData.height;\n          canvasData.minLeft = Math.min(0, newCanvasLeft);\n          canvasData.minTop = Math.min(0, newCanvasTop);\n          canvasData.maxLeft = Math.max(0, newCanvasLeft);\n          canvasData.maxTop = Math.max(0, newCanvasTop);\n\n          if (cropped && this.limited) {\n            canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n            canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n            canvasData.maxLeft = cropBoxData.left;\n            canvasData.maxTop = cropBoxData.top;\n\n            if (viewMode === 2) {\n              if (canvasData.width >= containerData.width) {\n                canvasData.minLeft = Math.min(0, newCanvasLeft);\n                canvasData.maxLeft = Math.max(0, newCanvasLeft);\n              }\n\n              if (canvasData.height >= containerData.height) {\n                canvasData.minTop = Math.min(0, newCanvasTop);\n                canvasData.maxTop = Math.max(0, newCanvasTop);\n              }\n            }\n          }\n        } else {\n          canvasData.minLeft = -canvasData.width;\n          canvasData.minTop = -canvasData.height;\n          canvasData.maxLeft = containerData.width;\n          canvasData.maxTop = containerData.height;\n        }\n      }\n    },\n    renderCanvas: function renderCanvas(changed, transformed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n\n      if (transformed) {\n        var _getRotatedSizes = getRotatedSizes({\n          width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n          height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n          degree: imageData.rotate || 0\n        }),\n            naturalWidth = _getRotatedSizes.width,\n            naturalHeight = _getRotatedSizes.height;\n\n        var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n        var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n        canvasData.left -= (width - canvasData.width) / 2;\n        canvasData.top -= (height - canvasData.height) / 2;\n        canvasData.width = width;\n        canvasData.height = height;\n        canvasData.aspectRatio = naturalWidth / naturalHeight;\n        canvasData.naturalWidth = naturalWidth;\n        canvasData.naturalHeight = naturalHeight;\n        this.limitCanvas(true, false);\n      }\n\n      if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n        canvasData.left = canvasData.oldLeft;\n      }\n\n      if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n        canvasData.top = canvasData.oldTop;\n      }\n\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      this.limitCanvas(false, true);\n      canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n      canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      setStyle(this.canvas, assign({\n        width: canvasData.width,\n        height: canvasData.height\n      }, getTransforms({\n        translateX: canvasData.left,\n        translateY: canvasData.top\n      })));\n      this.renderImage(changed);\n\n      if (this.cropped && this.limited) {\n        this.limitCropBox(true, true);\n      }\n    },\n    renderImage: function renderImage(changed) {\n      var canvasData = this.canvasData,\n          imageData = this.imageData;\n      var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n      var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n      assign(imageData, {\n        width: width,\n        height: height,\n        left: (canvasData.width - width) / 2,\n        top: (canvasData.height - height) / 2\n      });\n      setStyle(this.image, assign({\n        width: imageData.width,\n        height: imageData.height\n      }, getTransforms(assign({\n        translateX: imageData.left,\n        translateY: imageData.top\n      }, imageData))));\n\n      if (changed) {\n        this.output();\n      }\n    },\n    initCropBox: function initCropBox() {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var aspectRatio = options.aspectRatio || options.initialAspectRatio;\n      var autoCropArea = Number(options.autoCropArea) || 0.8;\n      var cropBoxData = {\n        width: canvasData.width,\n        height: canvasData.height\n      };\n\n      if (aspectRatio) {\n        if (canvasData.height * aspectRatio > canvasData.width) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      this.cropBoxData = cropBoxData;\n      this.limitCropBox(true, true); // Initialize auto crop area\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight); // The width/height of auto crop area must large than \"minWidth/Height\"\n\n      cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n      cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n      cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n      cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n      this.initialCropBoxData = assign({}, cropBoxData);\n    },\n    limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n      var options = this.options,\n          containerData = this.containerData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData,\n          limited = this.limited;\n      var aspectRatio = options.aspectRatio;\n\n      if (sizeLimited) {\n        var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n        var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n        var maxCropBoxWidth = limited ? Math.min(containerData.width, canvasData.width, canvasData.width + canvasData.left, containerData.width - canvasData.left) : containerData.width;\n        var maxCropBoxHeight = limited ? Math.min(containerData.height, canvasData.height, canvasData.height + canvasData.top, containerData.height - canvasData.top) : containerData.height; // The min/maxCropBoxWidth/Height must be less than container's width/height\n\n        minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n        minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n        if (aspectRatio) {\n          if (minCropBoxWidth && minCropBoxHeight) {\n            if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n              minCropBoxHeight = minCropBoxWidth / aspectRatio;\n            } else {\n              minCropBoxWidth = minCropBoxHeight * aspectRatio;\n            }\n          } else if (minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else if (minCropBoxHeight) {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n\n          if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n            maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n          } else {\n            maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n          }\n        } // The minWidth/Height must be less than maxWidth/Height\n\n\n        cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n        cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n        cropBoxData.maxWidth = maxCropBoxWidth;\n        cropBoxData.maxHeight = maxCropBoxHeight;\n      }\n\n      if (positionLimited) {\n        if (limited) {\n          cropBoxData.minLeft = Math.max(0, canvasData.left);\n          cropBoxData.minTop = Math.max(0, canvasData.top);\n          cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n          cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n        } else {\n          cropBoxData.minLeft = 0;\n          cropBoxData.minTop = 0;\n          cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n          cropBoxData.maxTop = containerData.height - cropBoxData.height;\n        }\n      }\n    },\n    renderCropBox: function renderCropBox() {\n      var options = this.options,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData;\n\n      if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n        cropBoxData.left = cropBoxData.oldLeft;\n      }\n\n      if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n        cropBoxData.top = cropBoxData.oldTop;\n      }\n\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n      this.limitCropBox(false, true);\n      cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n      cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n\n      if (options.movable && options.cropBoxMovable) {\n        // Turn to move the canvas when the crop box is equal to the container\n        setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n      }\n\n      setStyle(this.cropBox, assign({\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      }, getTransforms({\n        translateX: cropBoxData.left,\n        translateY: cropBoxData.top\n      })));\n\n      if (this.cropped && this.limited) {\n        this.limitCanvas(true, true);\n      }\n\n      if (!this.disabled) {\n        this.output();\n      }\n    },\n    output: function output() {\n      this.preview();\n      dispatchEvent(this.element, EVENT_CROP, this.getData());\n    }\n  };\n\n  var preview = {\n    initPreview: function initPreview() {\n      var crossOrigin = this.crossOrigin;\n      var preview = this.options.preview;\n      var url = crossOrigin ? this.crossOriginUrl : this.url;\n      var image = document.createElement('img');\n\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n\n      image.src = url;\n      this.viewBox.appendChild(image);\n      this.viewBoxImage = image;\n\n      if (!preview) {\n        return;\n      }\n\n      var previews = preview;\n\n      if (typeof preview === 'string') {\n        previews = this.element.ownerDocument.querySelectorAll(preview);\n      } else if (preview.querySelector) {\n        previews = [preview];\n      }\n\n      this.previews = previews;\n      forEach(previews, function (el) {\n        var img = document.createElement('img'); // Save the original size for recover\n\n        setData(el, DATA_PREVIEW, {\n          width: el.offsetWidth,\n          height: el.offsetHeight,\n          html: el.innerHTML\n        });\n\n        if (crossOrigin) {\n          img.crossOrigin = crossOrigin;\n        }\n\n        img.src = url;\n        /**\n         * Override img element styles\n         * Add `display:block` to avoid margin top issue\n         * Add `height:auto` to override `height` attribute on IE8\n         * (Occur only when margin-top <= -height)\n         */\n\n        img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n        el.innerHTML = '';\n        el.appendChild(img);\n      });\n    },\n    resetPreview: function resetPreview() {\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        setStyle(element, {\n          width: data.width,\n          height: data.height\n        });\n        element.innerHTML = data.html;\n        removeData(element, DATA_PREVIEW);\n      });\n    },\n    preview: function preview() {\n      var imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var cropBoxWidth = cropBoxData.width,\n          cropBoxHeight = cropBoxData.height;\n      var width = imageData.width,\n          height = imageData.height;\n      var left = cropBoxData.left - canvasData.left - imageData.left;\n      var top = cropBoxData.top - canvasData.top - imageData.top;\n\n      if (!this.cropped || this.disabled) {\n        return;\n      }\n\n      setStyle(this.viewBoxImage, assign({\n        width: width,\n        height: height\n      }, getTransforms(assign({\n        translateX: -left,\n        translateY: -top\n      }, imageData))));\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        var originalWidth = data.width;\n        var originalHeight = data.height;\n        var newWidth = originalWidth;\n        var newHeight = originalHeight;\n        var ratio = 1;\n\n        if (cropBoxWidth) {\n          ratio = originalWidth / cropBoxWidth;\n          newHeight = cropBoxHeight * ratio;\n        }\n\n        if (cropBoxHeight && newHeight > originalHeight) {\n          ratio = originalHeight / cropBoxHeight;\n          newWidth = cropBoxWidth * ratio;\n          newHeight = originalHeight;\n        }\n\n        setStyle(element, {\n          width: newWidth,\n          height: newHeight\n        });\n        setStyle(element.getElementsByTagName('img')[0], assign({\n          width: width * ratio,\n          height: height * ratio\n        }, getTransforms(assign({\n          translateX: -left * ratio,\n          translateY: -top * ratio\n        }, imageData))));\n      });\n    }\n  };\n\n  var events = {\n    bind: function bind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        addListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        addListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        addListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        addListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        addListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n\n      if (options.zoomable && options.zoomOnWheel) {\n        addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this));\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n      }\n\n      addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n      addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n\n      if (options.responsive) {\n        addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n      }\n    },\n    unbind: function unbind() {\n      var element = this.element,\n          options = this.options,\n          cropper = this.cropper;\n\n      if (isFunction(options.cropstart)) {\n        removeListener(element, EVENT_CROP_START, options.cropstart);\n      }\n\n      if (isFunction(options.cropmove)) {\n        removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n\n      if (isFunction(options.cropend)) {\n        removeListener(element, EVENT_CROP_END, options.cropend);\n      }\n\n      if (isFunction(options.crop)) {\n        removeListener(element, EVENT_CROP, options.crop);\n      }\n\n      if (isFunction(options.zoom)) {\n        removeListener(element, EVENT_ZOOM, options.zoom);\n      }\n\n      removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n\n      if (options.zoomable && options.zoomOnWheel) {\n        removeListener(cropper, EVENT_WHEEL, this.onWheel);\n      }\n\n      if (options.toggleDragModeOnDblclick) {\n        removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n      }\n\n      removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n      removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n\n      if (options.responsive) {\n        removeListener(window, EVENT_RESIZE, this.onResize);\n      }\n    }\n  };\n\n  var handlers = {\n    resize: function resize() {\n      var options = this.options,\n          container = this.container,\n          containerData = this.containerData;\n      var minContainerWidth = Number(options.minContainerWidth) || 200;\n      var minContainerHeight = Number(options.minContainerHeight) || 100;\n\n      if (this.disabled || containerData.width <= minContainerWidth || containerData.height <= minContainerHeight) {\n        return;\n      }\n\n      var ratio = container.offsetWidth / containerData.width; // Resize when width changed or height changed\n\n      if (ratio !== 1 || container.offsetHeight !== containerData.height) {\n        var canvasData;\n        var cropBoxData;\n\n        if (options.restore) {\n          canvasData = this.getCanvasData();\n          cropBoxData = this.getCropBoxData();\n        }\n\n        this.render();\n\n        if (options.restore) {\n          this.setCanvasData(forEach(canvasData, function (n, i) {\n            canvasData[i] = n * ratio;\n          }));\n          this.setCropBoxData(forEach(cropBoxData, function (n, i) {\n            cropBoxData[i] = n * ratio;\n          }));\n        }\n      }\n    },\n    dblclick: function dblclick() {\n      if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n        return;\n      }\n\n      this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n    },\n    wheel: function wheel(e) {\n      var _this = this;\n\n      var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n      var delta = 1;\n\n      if (this.disabled) {\n        return;\n      }\n\n      e.preventDefault(); // Limit wheel speed to prevent zoom too fast (#21)\n\n      if (this.wheeling) {\n        return;\n      }\n\n      this.wheeling = true;\n      setTimeout(function () {\n        _this.wheeling = false;\n      }, 50);\n\n      if (e.deltaY) {\n        delta = e.deltaY > 0 ? 1 : -1;\n      } else if (e.wheelDelta) {\n        delta = -e.wheelDelta / 120;\n      } else if (e.detail) {\n        delta = e.detail > 0 ? 1 : -1;\n      }\n\n      this.zoom(-delta * ratio, e);\n    },\n    cropStart: function cropStart(e) {\n      if (this.disabled) {\n        return;\n      }\n\n      var options = this.options,\n          pointers = this.pointers;\n      var action;\n\n      if (e.changedTouches) {\n        // Handle touch event\n        forEach(e.changedTouches, function (touch) {\n          pointers[touch.identifier] = getPointer(touch);\n        });\n      } else {\n        // Handle mouse event and pointer event\n        pointers[e.pointerId || 0] = getPointer(e);\n      }\n\n      if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n        action = ACTION_ZOOM;\n      } else {\n        action = getData(e.target, DATA_ACTION);\n      }\n\n      if (!REGEXP_ACTIONS.test(action)) {\n        return;\n      }\n\n      if (dispatchEvent(this.element, EVENT_CROP_START, {\n        originalEvent: e,\n        action: action\n      }) === false) {\n        return;\n      } // This line is required for preventing page zooming in iOS browsers\n\n\n      e.preventDefault();\n      this.action = action;\n      this.cropping = false;\n\n      if (action === ACTION_CROP) {\n        this.cropping = true;\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n    },\n    cropMove: function cropMove(e) {\n      var action = this.action;\n\n      if (this.disabled || !action) {\n        return;\n      }\n\n      var pointers = this.pointers;\n      e.preventDefault();\n\n      if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n        originalEvent: e,\n        action: action\n      }) === false) {\n        return;\n      }\n\n      if (e.changedTouches) {\n        forEach(e.changedTouches, function (touch) {\n          // The first parameter should not be undefined (#432)\n          assign(pointers[touch.identifier] || {}, getPointer(touch, true));\n        });\n      } else {\n        assign(pointers[e.pointerId || 0] || {}, getPointer(e, true));\n      }\n\n      this.change(e);\n    },\n    cropEnd: function cropEnd(e) {\n      if (this.disabled) {\n        return;\n      }\n\n      var action = this.action,\n          pointers = this.pointers;\n\n      if (e.changedTouches) {\n        forEach(e.changedTouches, function (touch) {\n          delete pointers[touch.identifier];\n        });\n      } else {\n        delete pointers[e.pointerId || 0];\n      }\n\n      if (!action) {\n        return;\n      }\n\n      e.preventDefault();\n\n      if (!Object.keys(pointers).length) {\n        this.action = '';\n      }\n\n      if (this.cropping) {\n        this.cropping = false;\n        toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n      }\n\n      dispatchEvent(this.element, EVENT_CROP_END, {\n        originalEvent: e,\n        action: action\n      });\n    }\n  };\n\n  var change = {\n    change: function change(e) {\n      var options = this.options,\n          canvasData = this.canvasData,\n          containerData = this.containerData,\n          cropBoxData = this.cropBoxData,\n          pointers = this.pointers;\n      var action = this.action;\n      var aspectRatio = options.aspectRatio;\n      var left = cropBoxData.left,\n          top = cropBoxData.top,\n          width = cropBoxData.width,\n          height = cropBoxData.height;\n      var right = left + width;\n      var bottom = top + height;\n      var minLeft = 0;\n      var minTop = 0;\n      var maxWidth = containerData.width;\n      var maxHeight = containerData.height;\n      var renderable = true;\n      var offset; // Locking aspect ratio in \"free mode\" by holding shift key\n\n      if (!aspectRatio && e.shiftKey) {\n        aspectRatio = width && height ? width / height : 1;\n      }\n\n      if (this.limited) {\n        minLeft = cropBoxData.minLeft;\n        minTop = cropBoxData.minTop;\n        maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n        maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n      }\n\n      var pointer = pointers[Object.keys(pointers)[0]];\n      var range = {\n        x: pointer.endX - pointer.startX,\n        y: pointer.endY - pointer.startY\n      };\n\n      var check = function check(side) {\n        switch (side) {\n          case ACTION_EAST:\n            if (right + range.x > maxWidth) {\n              range.x = maxWidth - right;\n            }\n\n            break;\n\n          case ACTION_WEST:\n            if (left + range.x < minLeft) {\n              range.x = minLeft - left;\n            }\n\n            break;\n\n          case ACTION_NORTH:\n            if (top + range.y < minTop) {\n              range.y = minTop - top;\n            }\n\n            break;\n\n          case ACTION_SOUTH:\n            if (bottom + range.y > maxHeight) {\n              range.y = maxHeight - bottom;\n            }\n\n            break;\n\n          default:\n        }\n      };\n\n      switch (action) {\n        // Move crop box\n        case ACTION_ALL:\n          left += range.x;\n          top += range.y;\n          break;\n        // Resize crop box\n\n        case ACTION_EAST:\n          if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_EAST);\n          width += range.x;\n\n          if (width < 0) {\n            action = ACTION_WEST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n\n          if (height < 0) {\n            action = ACTION_SOUTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n\n          if (width < 0) {\n            action = ACTION_EAST;\n            width = -width;\n            left -= width;\n          }\n\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_SOUTH);\n          height += range.y;\n\n          if (height < 0) {\n            action = ACTION_NORTH;\n            height = -height;\n            top -= height;\n          }\n\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n\n          break;\n\n        case ACTION_NORTH_EAST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_NORTH_WEST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n            left += cropBoxData.width - width;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_WEST:\n          if (aspectRatio) {\n            if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_WEST);\n            width -= range.x;\n            left += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_WEST);\n\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n\n        case ACTION_SOUTH_EAST:\n          if (aspectRatio) {\n            if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n\n            check(ACTION_EAST);\n            width += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_EAST);\n\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            top -= height;\n          }\n\n          break;\n        // Move canvas\n\n        case ACTION_MOVE:\n          this.move(range.x, range.y);\n          renderable = false;\n          break;\n        // Zoom canvas\n\n        case ACTION_ZOOM:\n          this.zoom(getMaxZoomRatio(pointers), e);\n          renderable = false;\n          break;\n        // Create crop box\n\n        case ACTION_CROP:\n          if (!range.x || !range.y) {\n            renderable = false;\n            break;\n          }\n\n          offset = getOffset(this.cropper);\n          left = pointer.startX - offset.left;\n          top = pointer.startY - offset.top;\n          width = cropBoxData.minWidth;\n          height = cropBoxData.minHeight;\n\n          if (range.x > 0) {\n            action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n          } else if (range.x < 0) {\n            left -= width;\n            action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n          }\n\n          if (range.y < 0) {\n            top -= height;\n          } // Show the crop box if is hidden\n\n\n          if (!this.cropped) {\n            removeClass(this.cropBox, CLASS_HIDDEN);\n            this.cropped = true;\n\n            if (this.limited) {\n              this.limitCropBox(true, true);\n            }\n          }\n\n          break;\n\n        default:\n      }\n\n      if (renderable) {\n        cropBoxData.width = width;\n        cropBoxData.height = height;\n        cropBoxData.left = left;\n        cropBoxData.top = top;\n        this.action = action;\n        this.renderCropBox();\n      } // Override\n\n\n      forEach(pointers, function (p) {\n        p.startX = p.endX;\n        p.startY = p.endY;\n      });\n    }\n  };\n\n  var methods = {\n    // Show the crop box manually\n    crop: function crop() {\n      if (this.ready && !this.cropped && !this.disabled) {\n        this.cropped = true;\n        this.limitCropBox(true, true);\n\n        if (this.options.modal) {\n          addClass(this.dragBox, CLASS_MODAL);\n        }\n\n        removeClass(this.cropBox, CLASS_HIDDEN);\n        this.setCropBoxData(this.initialCropBoxData);\n      }\n\n      return this;\n    },\n    // Reset the image and crop box to their initial states\n    reset: function reset() {\n      if (this.ready && !this.disabled) {\n        this.imageData = assign({}, this.initialImageData);\n        this.canvasData = assign({}, this.initialCanvasData);\n        this.cropBoxData = assign({}, this.initialCropBoxData);\n        this.renderCanvas();\n\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n\n      return this;\n    },\n    // Clear the crop box\n    clear: function clear() {\n      if (this.cropped && !this.disabled) {\n        assign(this.cropBoxData, {\n          left: 0,\n          top: 0,\n          width: 0,\n          height: 0\n        });\n        this.cropped = false;\n        this.renderCropBox();\n        this.limitCanvas(true, true); // Render canvas after crop box rendered\n\n        this.renderCanvas();\n        removeClass(this.dragBox, CLASS_MODAL);\n        addClass(this.cropBox, CLASS_HIDDEN);\n      }\n\n      return this;\n    },\n\n    /**\n     * Replace the image's src and rebuild the cropper\n     * @param {string} url - The new URL.\n     * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n     * @returns {Cropper} this\n     */\n    replace: function replace(url) {\n      var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!this.disabled && url) {\n        if (this.isImg) {\n          this.element.src = url;\n        }\n\n        if (hasSameSize) {\n          this.url = url;\n          this.image.src = url;\n\n          if (this.ready) {\n            this.viewBoxImage.src = url;\n            forEach(this.previews, function (element) {\n              element.getElementsByTagName('img')[0].src = url;\n            });\n          }\n        } else {\n          if (this.isImg) {\n            this.replaced = true;\n          }\n\n          this.options.data = null;\n          this.uncreate();\n          this.load(url);\n        }\n      }\n\n      return this;\n    },\n    // Enable (unfreeze) the cropper\n    enable: function enable() {\n      if (this.ready && this.disabled) {\n        this.disabled = false;\n        removeClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n    // Disable (freeze) the cropper\n    disable: function disable() {\n      if (this.ready && !this.disabled) {\n        this.disabled = true;\n        addClass(this.cropper, CLASS_DISABLED);\n      }\n\n      return this;\n    },\n\n    /**\n     * Destroy the cropper and remove the instance from the image\n     * @returns {Cropper} this\n     */\n    destroy: function destroy() {\n      var element = this.element;\n\n      if (!element[NAMESPACE]) {\n        return this;\n      }\n\n      element[NAMESPACE] = undefined;\n\n      if (this.isImg && this.replaced) {\n        element.src = this.originalUrl;\n      }\n\n      this.uncreate();\n      return this;\n    },\n\n    /**\n     * Move the canvas with relative offsets\n     * @param {number} offsetX - The relative offset distance on the x-axis.\n     * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n     * @returns {Cropper} this\n     */\n    move: function move(offsetX) {\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n      var _this$canvasData = this.canvasData,\n          left = _this$canvasData.left,\n          top = _this$canvasData.top;\n      return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n    },\n\n    /**\n     * Move the canvas to an absolute point\n     * @param {number} x - The x-axis coordinate.\n     * @param {number} [y=x] - The y-axis coordinate.\n     * @returns {Cropper} this\n     */\n    moveTo: function moveTo(x) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n      var canvasData = this.canvasData;\n      var changed = false;\n      x = Number(x);\n      y = Number(y);\n\n      if (this.ready && !this.disabled && this.options.movable) {\n        if (isNumber(x)) {\n          canvasData.left = x;\n          changed = true;\n        }\n\n        if (isNumber(y)) {\n          canvasData.top = y;\n          changed = true;\n        }\n\n        if (changed) {\n          this.renderCanvas(true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Zoom the canvas with a relative ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoom: function zoom(ratio, _originalEvent) {\n      var canvasData = this.canvasData;\n      ratio = Number(ratio);\n\n      if (ratio < 0) {\n        ratio = 1 / (1 - ratio);\n      } else {\n        ratio = 1 + ratio;\n      }\n\n      return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n    },\n\n    /**\n     * Zoom the canvas to an absolute ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Object} pivot - The zoom pivot point coordinate.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n      var options = this.options,\n          canvasData = this.canvasData;\n      var width = canvasData.width,\n          height = canvasData.height,\n          naturalWidth = canvasData.naturalWidth,\n          naturalHeight = canvasData.naturalHeight;\n      ratio = Number(ratio);\n\n      if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n        var newWidth = naturalWidth * ratio;\n        var newHeight = naturalHeight * ratio;\n\n        if (dispatchEvent(this.element, EVENT_ZOOM, {\n          ratio: ratio,\n          oldRatio: width / naturalWidth,\n          originalEvent: _originalEvent\n        }) === false) {\n          return this;\n        }\n\n        if (_originalEvent) {\n          var pointers = this.pointers;\n          var offset = getOffset(this.cropper);\n          var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n            pageX: _originalEvent.pageX,\n            pageY: _originalEvent.pageY\n          }; // Zoom from the triggering point of the event\n\n          canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n        } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n          canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n        } else {\n          // Zoom from the center of the canvas\n          canvasData.left -= (newWidth - width) / 2;\n          canvasData.top -= (newHeight - height) / 2;\n        }\n\n        canvasData.width = newWidth;\n        canvasData.height = newHeight;\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Rotate the canvas with a relative degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotate: function rotate(degree) {\n      return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n    },\n\n    /**\n     * Rotate the canvas to an absolute degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotateTo: function rotateTo(degree) {\n      degree = Number(degree);\n\n      if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n        this.imageData.rotate = degree % 360;\n        this.renderCanvas(true, true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Scale the image on the x-axis.\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @returns {Cropper} this\n     */\n    scaleX: function scaleX(_scaleX) {\n      var scaleY = this.imageData.scaleY;\n      return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n    },\n\n    /**\n     * Scale the image on the y-axis.\n     * @param {number} scaleY - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scaleY: function scaleY(_scaleY) {\n      var scaleX = this.imageData.scaleX;\n      return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n    },\n\n    /**\n     * Scale the image\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scale: function scale(scaleX) {\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n      var imageData = this.imageData;\n      var transformed = false;\n      scaleX = Number(scaleX);\n      scaleY = Number(scaleY);\n\n      if (this.ready && !this.disabled && this.options.scalable) {\n        if (isNumber(scaleX)) {\n          imageData.scaleX = scaleX;\n          transformed = true;\n        }\n\n        if (isNumber(scaleY)) {\n          imageData.scaleY = scaleY;\n          transformed = true;\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the cropped area position and size data (base on the original image)\n     * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n     * @returns {Object} The result cropped data.\n     */\n    getData: function getData$$1() {\n      var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData,\n          cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          x: cropBoxData.left - canvasData.left,\n          y: cropBoxData.top - canvasData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n        var ratio = imageData.width / imageData.naturalWidth;\n        forEach(data, function (n, i) {\n          data[i] = n / ratio;\n        });\n\n        if (rounded) {\n          // In case rounding off leads to extra 1px in right or bottom border\n          // we should round the top-left corner and the dimension (#343).\n          var bottom = Math.round(data.y + data.height);\n          var right = Math.round(data.x + data.width);\n          data.x = Math.round(data.x);\n          data.y = Math.round(data.y);\n          data.width = right - data.x;\n          data.height = bottom - data.y;\n        }\n      } else {\n        data = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n\n      if (options.rotatable) {\n        data.rotate = imageData.rotate || 0;\n      }\n\n      if (options.scalable) {\n        data.scaleX = imageData.scaleX || 1;\n        data.scaleY = imageData.scaleY || 1;\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the cropped area position and size with new data\n     * @param {Object} data - The new data.\n     * @returns {Cropper} this\n     */\n    setData: function setData$$1(data) {\n      var options = this.options,\n          imageData = this.imageData,\n          canvasData = this.canvasData;\n      var cropBoxData = {};\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        var transformed = false;\n\n        if (options.rotatable) {\n          if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n            imageData.rotate = data.rotate;\n            transformed = true;\n          }\n        }\n\n        if (options.scalable) {\n          if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n            imageData.scaleX = data.scaleX;\n            transformed = true;\n          }\n\n          if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n            imageData.scaleY = data.scaleY;\n            transformed = true;\n          }\n        }\n\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n\n        var ratio = imageData.width / imageData.naturalWidth;\n\n        if (isNumber(data.x)) {\n          cropBoxData.left = data.x * ratio + canvasData.left;\n        }\n\n        if (isNumber(data.y)) {\n          cropBoxData.top = data.y * ratio + canvasData.top;\n        }\n\n        if (isNumber(data.width)) {\n          cropBoxData.width = data.width * ratio;\n        }\n\n        if (isNumber(data.height)) {\n          cropBoxData.height = data.height * ratio;\n        }\n\n        this.setCropBoxData(cropBoxData);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the container size data.\n     * @returns {Object} The result container data.\n     */\n    getContainerData: function getContainerData() {\n      return this.ready ? assign({}, this.containerData) : {};\n    },\n\n    /**\n     * Get the image position and size data.\n     * @returns {Object} The result image data.\n     */\n    getImageData: function getImageData() {\n      return this.sized ? assign({}, this.imageData) : {};\n    },\n\n    /**\n     * Get the canvas position and size data.\n     * @returns {Object} The result canvas data.\n     */\n    getCanvasData: function getCanvasData() {\n      var canvasData = this.canvasData;\n      var data = {};\n\n      if (this.ready) {\n        forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n          data[n] = canvasData[n];\n        });\n      }\n\n      return data;\n    },\n\n    /**\n     * Set the canvas position and size with new data.\n     * @param {Object} data - The new canvas data.\n     * @returns {Cropper} this\n     */\n    setCanvasData: function setCanvasData(data) {\n      var canvasData = this.canvasData;\n      var aspectRatio = canvasData.aspectRatio;\n\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          canvasData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          canvasData.top = data.top;\n        }\n\n        if (isNumber(data.width)) {\n          canvasData.width = data.width;\n          canvasData.height = data.width / aspectRatio;\n        } else if (isNumber(data.height)) {\n          canvasData.height = data.height;\n          canvasData.width = data.height * aspectRatio;\n        }\n\n        this.renderCanvas(true);\n      }\n\n      return this;\n    },\n\n    /**\n     * Get the crop box position and size data.\n     * @returns {Object} The result crop box data.\n     */\n    getCropBoxData: function getCropBoxData() {\n      var cropBoxData = this.cropBoxData;\n      var data;\n\n      if (this.ready && this.cropped) {\n        data = {\n          left: cropBoxData.left,\n          top: cropBoxData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n      }\n\n      return data || {};\n    },\n\n    /**\n     * Set the crop box position and size with new data.\n     * @param {Object} data - The new crop box data.\n     * @returns {Cropper} this\n     */\n    setCropBoxData: function setCropBoxData(data) {\n      var cropBoxData = this.cropBoxData;\n      var aspectRatio = this.options.aspectRatio;\n      var widthChanged;\n      var heightChanged;\n\n      if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          cropBoxData.left = data.left;\n        }\n\n        if (isNumber(data.top)) {\n          cropBoxData.top = data.top;\n        }\n\n        if (isNumber(data.width) && data.width !== cropBoxData.width) {\n          widthChanged = true;\n          cropBoxData.width = data.width;\n        }\n\n        if (isNumber(data.height) && data.height !== cropBoxData.height) {\n          heightChanged = true;\n          cropBoxData.height = data.height;\n        }\n\n        if (aspectRatio) {\n          if (widthChanged) {\n            cropBoxData.height = cropBoxData.width / aspectRatio;\n          } else if (heightChanged) {\n            cropBoxData.width = cropBoxData.height * aspectRatio;\n          }\n        }\n\n        this.renderCropBox();\n      }\n\n      return this;\n    },\n\n    /**\n     * Get a canvas drawn the cropped image.\n     * @param {Object} [options={}] - The config options.\n     * @returns {HTMLCanvasElement} - The result canvas.\n     */\n    getCroppedCanvas: function getCroppedCanvas() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (!this.ready || !window.HTMLCanvasElement) {\n        return null;\n      }\n\n      var canvasData = this.canvasData;\n      var source = getSourceCanvas(this.image, this.imageData, canvasData, options); // Returns the source canvas if it is not cropped.\n\n      if (!this.cropped) {\n        return source;\n      }\n\n      var _this$getData = this.getData(),\n          initialX = _this$getData.x,\n          initialY = _this$getData.y,\n          initialWidth = _this$getData.width,\n          initialHeight = _this$getData.height;\n\n      var ratio = source.width / Math.floor(canvasData.naturalWidth);\n\n      if (ratio !== 1) {\n        initialX *= ratio;\n        initialY *= ratio;\n        initialWidth *= ratio;\n        initialHeight *= ratio;\n      }\n\n      var aspectRatio = initialWidth / initialHeight;\n      var maxSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.maxWidth || Infinity,\n        height: options.maxHeight || Infinity\n      });\n      var minSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.minWidth || 0,\n        height: options.minHeight || 0\n      }, 'cover');\n\n      var _getAdjustedSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.width || (ratio !== 1 ? source.width : initialWidth),\n        height: options.height || (ratio !== 1 ? source.height : initialHeight)\n      }),\n          width = _getAdjustedSizes.width,\n          height = _getAdjustedSizes.height;\n\n      width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n      height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n      var canvas = document.createElement('canvas');\n      var context = canvas.getContext('2d');\n      canvas.width = normalizeDecimalNumber(width);\n      canvas.height = normalizeDecimalNumber(height);\n      context.fillStyle = options.fillColor || 'transparent';\n      context.fillRect(0, 0, width, height);\n      var _options$imageSmoothi = options.imageSmoothingEnabled,\n          imageSmoothingEnabled = _options$imageSmoothi === void 0 ? true : _options$imageSmoothi,\n          imageSmoothingQuality = options.imageSmoothingQuality;\n      context.imageSmoothingEnabled = imageSmoothingEnabled;\n\n      if (imageSmoothingQuality) {\n        context.imageSmoothingQuality = imageSmoothingQuality;\n      } // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n\n\n      var sourceWidth = source.width;\n      var sourceHeight = source.height; // Source canvas parameters\n\n      var srcX = initialX;\n      var srcY = initialY;\n      var srcWidth;\n      var srcHeight; // Destination canvas parameters\n\n      var dstX;\n      var dstY;\n      var dstWidth;\n      var dstHeight;\n\n      if (srcX <= -initialWidth || srcX > sourceWidth) {\n        srcX = 0;\n        srcWidth = 0;\n        dstX = 0;\n        dstWidth = 0;\n      } else if (srcX <= 0) {\n        dstX = -srcX;\n        srcX = 0;\n        srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n        dstWidth = srcWidth;\n      } else if (srcX <= sourceWidth) {\n        dstX = 0;\n        srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n        dstWidth = srcWidth;\n      }\n\n      if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n        srcY = 0;\n        srcHeight = 0;\n        dstY = 0;\n        dstHeight = 0;\n      } else if (srcY <= 0) {\n        dstY = -srcY;\n        srcY = 0;\n        srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n        dstHeight = srcHeight;\n      } else if (srcY <= sourceHeight) {\n        dstY = 0;\n        srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n        dstHeight = srcHeight;\n      }\n\n      var params = [srcX, srcY, srcWidth, srcHeight]; // Avoid \"IndexSizeError\"\n\n      if (dstWidth > 0 && dstHeight > 0) {\n        var scale = width / initialWidth;\n        params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n      } // All the numerical parameters should be integer for `drawImage`\n      // https://github.com/fengyuanchen/cropper/issues/476\n\n\n      context.drawImage.apply(context, [source].concat(_toConsumableArray(params.map(function (param) {\n        return Math.floor(normalizeDecimalNumber(param));\n      }))));\n      return canvas;\n    },\n\n    /**\n     * Change the aspect ratio of the crop box.\n     * @param {number} aspectRatio - The new aspect ratio.\n     * @returns {Cropper} this\n     */\n    setAspectRatio: function setAspectRatio(aspectRatio) {\n      var options = this.options;\n\n      if (!this.disabled && !isUndefined(aspectRatio)) {\n        // 0 -> NaN\n        options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n        if (this.ready) {\n          this.initCropBox();\n\n          if (this.cropped) {\n            this.renderCropBox();\n          }\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * Change the drag mode.\n     * @param {string} mode - The new drag mode.\n     * @returns {Cropper} this\n     */\n    setDragMode: function setDragMode(mode) {\n      var options = this.options,\n          dragBox = this.dragBox,\n          face = this.face;\n\n      if (this.ready && !this.disabled) {\n        var croppable = mode === DRAG_MODE_CROP;\n        var movable = options.movable && mode === DRAG_MODE_MOVE;\n        mode = croppable || movable ? mode : DRAG_MODE_NONE;\n        options.dragMode = mode;\n        setData(dragBox, DATA_ACTION, mode);\n        toggleClass(dragBox, CLASS_CROP, croppable);\n        toggleClass(dragBox, CLASS_MOVE, movable);\n\n        if (!options.cropBoxMovable) {\n          // Sync drag mode to crop box when it is not movable\n          setData(face, DATA_ACTION, mode);\n          toggleClass(face, CLASS_CROP, croppable);\n          toggleClass(face, CLASS_MOVE, movable);\n        }\n      }\n\n      return this;\n    }\n  };\n\n  var AnotherCropper = WINDOW.Cropper;\n\n  var Cropper =\n  /*#__PURE__*/\n  function () {\n    /**\n     * Create a new Cropper.\n     * @param {Element} element - The target element for cropping.\n     * @param {Object} [options={}] - The configuration options.\n     */\n    function Cropper(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      _classCallCheck(this, Cropper);\n\n      if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n        throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n      }\n\n      this.element = element;\n      this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n      this.cropped = false;\n      this.disabled = false;\n      this.pointers = {};\n      this.ready = false;\n      this.reloading = false;\n      this.replaced = false;\n      this.sized = false;\n      this.sizing = false;\n      this.init();\n    }\n\n    _createClass(Cropper, [{\n      key: \"init\",\n      value: function init() {\n        var element = this.element;\n        var tagName = element.tagName.toLowerCase();\n        var url;\n\n        if (element[NAMESPACE]) {\n          return;\n        }\n\n        element[NAMESPACE] = this;\n\n        if (tagName === 'img') {\n          this.isImg = true; // e.g.: \"img/picture.jpg\"\n\n          url = element.getAttribute('src') || '';\n          this.originalUrl = url; // Stop when it's a blank image\n\n          if (!url) {\n            return;\n          } // e.g.: \"http://example.com/img/picture.jpg\"\n\n\n          url = element.src;\n        } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n          url = element.toDataURL();\n        }\n\n        this.load(url);\n      }\n    }, {\n      key: \"load\",\n      value: function load(url) {\n        var _this = this;\n\n        if (!url) {\n          return;\n        }\n\n        this.url = url;\n        this.imageData = {};\n        var element = this.element,\n            options = this.options;\n\n        if (!options.rotatable && !options.scalable) {\n          options.checkOrientation = false;\n        } // Only IE10+ supports Typed Arrays\n\n\n        if (!options.checkOrientation || !window.ArrayBuffer) {\n          this.clone();\n          return;\n        } // XMLHttpRequest disallows to open a Data URL in some browsers like IE11 and Safari\n\n\n        if (REGEXP_DATA_URL.test(url)) {\n          if (REGEXP_DATA_URL_JPEG.test(url)) {\n            this.read(dataURLToArrayBuffer(url));\n          } else {\n            this.clone();\n          }\n\n          return;\n        }\n\n        var xhr = new XMLHttpRequest();\n        var clone = this.clone.bind(this);\n        this.reloading = true;\n        this.xhr = xhr;\n        xhr.ontimeout = clone;\n        xhr.onabort = clone;\n        xhr.onerror = clone;\n\n        xhr.onprogress = function () {\n          if (xhr.getResponseHeader('content-type') !== MIME_TYPE_JPEG) {\n            xhr.abort();\n          }\n        };\n\n        xhr.onload = function () {\n          _this.read(xhr.response);\n        };\n\n        xhr.onloadend = function () {\n          _this.reloading = false;\n          _this.xhr = null;\n        }; // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\n\n\n        if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n          url = addTimestamp(url);\n        }\n\n        xhr.open('GET', url);\n        xhr.responseType = 'arraybuffer';\n        xhr.withCredentials = element.crossOrigin === 'use-credentials';\n        xhr.send();\n      }\n    }, {\n      key: \"read\",\n      value: function read(arrayBuffer) {\n        var options = this.options,\n            imageData = this.imageData;\n        var orientation = resetAndGetOrientation(arrayBuffer);\n        var rotate = 0;\n        var scaleX = 1;\n        var scaleY = 1;\n\n        if (orientation > 1) {\n          // Generate a new Data URL with the orientation value set to 1\n          // as some iOS browsers will render image with its orientation\n          this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\n\n          var _parseOrientation = parseOrientation(orientation);\n\n          rotate = _parseOrientation.rotate;\n          scaleX = _parseOrientation.scaleX;\n          scaleY = _parseOrientation.scaleY;\n        }\n\n        if (options.rotatable) {\n          imageData.rotate = rotate;\n        }\n\n        if (options.scalable) {\n          imageData.scaleX = scaleX;\n          imageData.scaleY = scaleY;\n        }\n\n        this.clone();\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        var element = this.element,\n            url = this.url;\n        var crossOrigin;\n        var crossOriginUrl;\n\n        if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n          crossOrigin = element.crossOrigin;\n\n          if (crossOrigin) {\n            crossOriginUrl = url;\n          } else {\n            crossOrigin = 'anonymous'; // Bust cache when there is not a \"crossOrigin\" property\n\n            crossOriginUrl = addTimestamp(url);\n          }\n        }\n\n        this.crossOrigin = crossOrigin;\n        this.crossOriginUrl = crossOriginUrl;\n        var image = document.createElement('img');\n\n        if (crossOrigin) {\n          image.crossOrigin = crossOrigin;\n        }\n\n        image.src = crossOriginUrl || url;\n        this.image = image;\n        image.onload = this.start.bind(this);\n        image.onerror = this.stop.bind(this);\n        addClass(image, CLASS_HIDE);\n        element.parentNode.insertBefore(image, element.nextSibling);\n      }\n    }, {\n      key: \"start\",\n      value: function start() {\n        var _this2 = this;\n\n        var image = this.isImg ? this.element : this.image;\n        image.onload = null;\n        image.onerror = null;\n        this.sizing = true;\n        var IS_SAFARI = WINDOW.navigator && /(Macintosh|iPhone|iPod|iPad).*AppleWebKit/i.test(WINDOW.navigator.userAgent);\n\n        var done = function done(naturalWidth, naturalHeight) {\n          assign(_this2.imageData, {\n            naturalWidth: naturalWidth,\n            naturalHeight: naturalHeight,\n            aspectRatio: naturalWidth / naturalHeight\n          });\n          _this2.sizing = false;\n          _this2.sized = true;\n\n          _this2.build();\n        }; // Modern browsers (except Safari)\n\n\n        if (image.naturalWidth && !IS_SAFARI) {\n          done(image.naturalWidth, image.naturalHeight);\n          return;\n        }\n\n        var sizingImage = document.createElement('img');\n        var body = document.body || document.documentElement;\n        this.sizingImage = sizingImage;\n\n        sizingImage.onload = function () {\n          done(sizingImage.width, sizingImage.height);\n\n          if (!IS_SAFARI) {\n            body.removeChild(sizingImage);\n          }\n        };\n\n        sizingImage.src = image.src; // iOS Safari will convert the image automatically\n        // with its orientation once append it into DOM (#279)\n\n        if (!IS_SAFARI) {\n          sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n          body.appendChild(sizingImage);\n        }\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        image.parentNode.removeChild(image);\n        this.image = null;\n      }\n    }, {\n      key: \"build\",\n      value: function build() {\n        if (!this.sized || this.ready) {\n          return;\n        }\n\n        var element = this.element,\n            options = this.options,\n            image = this.image; // Create cropper elements\n\n        var container = element.parentNode;\n        var template = document.createElement('div');\n        template.innerHTML = TEMPLATE;\n        var cropper = template.querySelector(\".\".concat(NAMESPACE, \"-container\"));\n        var canvas = cropper.querySelector(\".\".concat(NAMESPACE, \"-canvas\"));\n        var dragBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-drag-box\"));\n        var cropBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-crop-box\"));\n        var face = cropBox.querySelector(\".\".concat(NAMESPACE, \"-face\"));\n        this.container = container;\n        this.cropper = cropper;\n        this.canvas = canvas;\n        this.dragBox = dragBox;\n        this.cropBox = cropBox;\n        this.viewBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-view-box\"));\n        this.face = face;\n        canvas.appendChild(image); // Hide the original image\n\n        addClass(element, CLASS_HIDDEN); // Inserts the cropper after to the current image\n\n        container.insertBefore(cropper, element.nextSibling); // Show the image if is hidden\n\n        if (!this.isImg) {\n          removeClass(image, CLASS_HIDE);\n        }\n\n        this.initPreview();\n        this.bind();\n        options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n        options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n        options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n        addClass(cropBox, CLASS_HIDDEN);\n\n        if (!options.guides) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-dashed\")), CLASS_HIDDEN);\n        }\n\n        if (!options.center) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-center\")), CLASS_HIDDEN);\n        }\n\n        if (options.background) {\n          addClass(cropper, \"\".concat(NAMESPACE, \"-bg\"));\n        }\n\n        if (!options.highlight) {\n          addClass(face, CLASS_INVISIBLE);\n        }\n\n        if (options.cropBoxMovable) {\n          addClass(face, CLASS_MOVE);\n          setData(face, DATA_ACTION, ACTION_ALL);\n        }\n\n        if (!options.cropBoxResizable) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-line\")), CLASS_HIDDEN);\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-point\")), CLASS_HIDDEN);\n        }\n\n        this.render();\n        this.ready = true;\n        this.setDragMode(options.dragMode);\n\n        if (options.autoCrop) {\n          this.crop();\n        }\n\n        this.setData(options.data);\n\n        if (isFunction(options.ready)) {\n          addListener(element, EVENT_READY, options.ready, {\n            once: true\n          });\n        }\n\n        dispatchEvent(element, EVENT_READY);\n      }\n    }, {\n      key: \"unbuild\",\n      value: function unbuild() {\n        if (!this.ready) {\n          return;\n        }\n\n        this.ready = false;\n        this.unbind();\n        this.resetPreview();\n        this.cropper.parentNode.removeChild(this.cropper);\n        removeClass(this.element, CLASS_HIDDEN);\n      }\n    }, {\n      key: \"uncreate\",\n      value: function uncreate() {\n        if (this.ready) {\n          this.unbuild();\n          this.ready = false;\n          this.cropped = false;\n        } else if (this.sizing) {\n          this.sizingImage.onload = null;\n          this.sizing = false;\n          this.sized = false;\n        } else if (this.reloading) {\n          this.xhr.onabort = null;\n          this.xhr.abort();\n        } else if (this.image) {\n          this.stop();\n        }\n      }\n      /**\n       * Get the no conflict cropper class.\n       * @returns {Cropper} The cropper class.\n       */\n\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Cropper = AnotherCropper;\n        return Cropper;\n      }\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        assign(DEFAULTS, isPlainObject(options) && options);\n      }\n    }]);\n\n    return Cropper;\n  }();\n\n  assign(Cropper.prototype, render, preview, events, handlers, change, methods);\n\n  return Cropper;\n\n})));\n"],"sourceRoot":""}